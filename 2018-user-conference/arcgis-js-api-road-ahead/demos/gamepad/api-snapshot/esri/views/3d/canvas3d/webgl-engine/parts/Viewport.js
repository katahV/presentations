// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("../lib/PerformanceTimer ../lib/Camera ../lib/Util ../lib/bitset ../lib/gl-matrix ./Visualizer".split(" "),function(x,D,b,E,m,F){var y=m.vec3,G=m.vec4d,M=m.mat4d;return function(n,m,H,I,f){function z(){var a=O;if(J||0<u){v[1]=0;var e=K,a=v;M.perspective(g.fovY,g.aspect,1,10,N);b.matrix2frustumPlanes(g.viewMatrix,N,c);e.clearAll();L=A=0;var d=-Number.MAX_VALUE,f=-Number.MAX_VALUE,m=c[0][0],n=c[0][1],q=c[0][2],r=c[0][3],t=c[1][0],x=c[1][1],y=c[1][2],z=c[1][3],D=c[2][0],E=c[2][1],F=c[2][2],G=
c[2][3],H=c[3][0],I=c[3][1],P=c[3][2],Q=c[3][3],R=c[4][0],S=c[4][1],T=c[4][2],U=c[4][3],V=c[5][3],B;for(B in p){L++;var C=p[B];if(!C.isBackdrop){var h=C.center,k=h[0],l=h[1],w=h[2],h=C.bsRadius;if(m*k+n*l+q*w+r>h)continue;if(t*k+x*l+y*w+z>h)continue;if(D*k+E*l+F*w+G>h)continue;if(H*k+I*l+P*w+Q>h)continue;l=R*k+S*l+T*w;k=l+h;h=-l+h;k>d&&(d=k);h>f&&(f=h)}e.set(C.idx);A++}B=d!==-Number.MAX_VALUE;0<A&&B&&(a[0]=.99*Math.max(1-(d+U),2),a[1]=1.01*Math.max(10+(f+V),a[0]+1));0<u&&0<v[1]&&(g.far=v[1],g.near=
Math.max(v[0],g.far/u));a=K}return a}var d=new F(n,m,H,I,f),g=new D(y.createFrom(0,100,-100),y.createFrom(0,0,0)),p=[],K=new E,O={get:function(){return!0}},J=!0,u=2E4,v=[0,0],L=0,A=0,t=new x(10),q=new x(10),r=!0;this.getCombinedStats=function(){var a=d.getCombinedStats();a.renderGeometriesTotal=L;a.renderGeometriesVisible=A;a.visualizerTotalRenderTime=t.getTotal();a.visualizerCurrentRenderTime=t.getLastFiltered();a.viewportTotalRenderTime=q.getTotal();a.viewportCurrentRenderTime=q.getLastFiltered();
a.totalNumFramesRendered=q.getNumMeasurements();void 0!==f.getUsedTextureMemory&&(a.textureMemory=f.getUsedTextureMemory());void 0!==f.getUsedRenderbufferMemory&&(a.renderbufferMemory=f.getUsedRenderbufferMemory());void 0!==f.getUsedVBOMemory&&(a.VBOMemory=f.getUsedVBOMemory());if(void 0!==f.getUsedTextureMemoryStats){var e=f.getUsedTextureMemoryStats(),b;for(b in e)a["texMem type: "+b]=e[b]}return a};var N=M.create(),c=Array(6);for(n=0;6>n;++n)c[n]=G.create();this.dispose=function(){d.dispose();
d=null};this.setLightingData=function(a){d.setLightingData(a)};this.getLightingData=function(){return d.getLightingData()};this.getViewParams=function(a){var e=d.getViewParams(a);b.assert(void 0!==a&&void 0===a.eye,"getViewParams: getting the eye through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.center,"getViewParams: getting the center through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.up,"getViewParams: getting the up through getViewParams is deprecated, use the camera instead");
b.assert(void 0!==a&&void 0===a.viewMatrix,"getViewParams: getting the viewMatrix through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.angleOfElevation,"getViewParams: getting the angleOfElevation through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.direction,"getViewParams: getting the direction through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.fov,"getViewParams: getting the fov through getViewParams is deprecated, use the camera instead");
b.assert(void 0!==a&&void 0===a.fovX,"getViewParams: getting the fovX through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.viewport,"getViewParams: getting the viewport through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.projectionMatrix,"getViewParams: getting the projectionMatrix through getViewParams is deprecated, use the camera instead");b.assert(void 0!==a&&void 0===a.frustum,"getViewParams: getting the frustum through getViewParams is deprecated, use the camera instead");
if(!a||a.viewMode)e.viewMode=this.getMode();if(!a||a.frustumCullingEnabled)e.frustumCullingEnabled=J;if(!a||a.maxFarNearRatio)e.maxFarNearRatio=u;return e};this.setViewParams=function(a){b.assert(void 0===a.eye,"setViewParams: can't set eye through setViewParams anymore, manipulate camera directly instead");b.assert(void 0===a.center,"setViewParams: can't set center through setViewParams anymore, manipulate camera directly instead");b.assert(void 0===a.direction,"setViewParams: can't set direction through setViewParams anymore, manipulate camera directly instead");
b.assert(void 0===a.distance,"setViewParams: can't set distance through setViewParams anymore, manipulate camera directly instead");void 0!==a.viewMatrix&&b.assert(!1,"setViewParams: can't set view matrix directly");b.assert(void 0===a.fovX,"setViewParams: can't set fovX through setViewParams anymore, manipulate camera directly instead");b.assert(void 0===a.fov,"setViewParams: can't set fov through setViewParams anymore, manipulate camera directly instead");b.assert(void 0===a.nearFar,"setViewParams: can't set nearFar through setViewParams anymore, manipulate camera directly instead");
void 0!==a.viewport&&b.assert(!1,"setViewParams: can't set viewport rectangle directly");void 0!==a.frustum&&b.assert(!1,"setViewParams: can't set frustum directly");void 0!==a.projectionMatrix&&b.assert(!1,"setViewParams: can't set projection matrix directly");void 0!==a.viewMode&&this.setMode(a.viewMode);void 0!==a.frustumCullingEnabled&&(J=a.frustumCullingEnabled);void 0!==a.maxFarNearRatio&&(u=-1===a.maxFarNearRatio?2E4:a.maxFarNearRatio);d.setViewParams(a);r=!0};this.setRenderParams=function(a){d.setRenderParams(a)};
this.getRenderParams=function(){return d.getRenderParams()};this.getFrustumObjects=function(){var a={},e;for(e in p)K.get(p[e].idx)&&(a[p[e].name]=1);return a};this.modify=function(a,e,b,c,f){d.modify(a,e,b,c,f);p=d.getContent()};this.getContent=function(){return p};this.setSelectionObject=function(a,e){d.setSelectionObject(a,e)};this.setHighlightObjects=function(a,e){d.setHighlightObjects(a,e)};this.frame=function(a,e){g.frame(a,e);r=!0};this.setCamera=function(a){g.copyFrom(a);z();r=!0};this.getCamera=
function(){return g};this.getPickRay=function(a,e,b){return this.pickRayWithBeginPoint(a,void 0,g.viewMatrix,e,b)};this.pickRayWithBeginPoint=function(a,e,b,c,f){return d.getPickRay(a,e,g,b,c,f)};this.getSideIndexForPoint=function(a){return d.getSideIndexForPoint(a,g.viewport)};this.addExternalRenderer=function(a,b){return d.addExternalRenderer(a,b)};this.removeExternalRenderer=function(a,b){return d.removeExternalRenderer(a,b)};this.getExternalRenderers=function(){return d.getExternalRenderers()};
this.render=function(a,b){q.start();var c=z();t.start();d.render(g,a,c,b);t.stop();q.stop()};this.resetNeedsRender=function(){r=!1;d.resetNeedsRender()};this.needsRender=function(){return r||d.needsRender()};this._getModule=function(a){return"visualizer"===a?d:d._getModule(a)}}});