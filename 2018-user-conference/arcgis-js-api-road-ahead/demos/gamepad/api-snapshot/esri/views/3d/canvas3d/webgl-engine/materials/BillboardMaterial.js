// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/canvas3d/webgl-engine/materials/BillboardMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderBillboard"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tuniform mat4 modelNormal;\r\n\tattribute vec3 $position;\r\n\tattribute vec3 $normal;\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\tvarying vec3 vnormal;\r\n\tconst float size \x3d 1.05;\r\n\r\n\tvoid main(void) {\r\n\t\tvec3 pos \x3d (view * model * vec4($position, 1.0)).xyz;\r\n\t\tvec2 uv01 \x3d floor($uv0);\r\n\t\tvec2 uv \x3d $uv0 - uv01;\r\n\t\tvec3 zDir \x3d normalize(-pos);\r\n\t\tvec3 xDir \x3d normalize(cross(vec3(.0, 1.0, .0), zDir));\r\n\t\tvec3 yDir \x3d cross(zDir, xDir);\r\n\t\tpos +\x3d xDir * (uv01.x - .5) * size;\r\n\t\tpos +\x3d yDir * (uv01.y - .5) * size;\r\n\t\tvec4 pos4 \x3d proj * vec4(pos, 1.0);\r\n\t\tgl_Position \x3d pos4;\r\n\t\tvtc \x3d uv;\r\n\t\tvnormal \x3d normalize((modelNormal * vec4($normal, 1.0)).xyz);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fragmentShaderBillboard"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform vec4 lightAmbient;\r\n\tuniform vec4 lightDiffuse;\r\n\tuniform vec3 lightDirection;\r\n\tuniform sampler2D tex;\r\n\tvarying vec2 vtc;\r\n\tvarying vec3 vnormal;\r\n\r\n\tvoid main() {\r\n\t\tvec4 texColor \x3d texture2D(tex, vtc);\r\n\t\tif (texColor.a \x3c .15) discard;\r\n\t\tgl_FragColor \x3d texColor;\r\n\t\tgl_FragColor.rgb *\x3d lightAmbient.rgb * lightAmbient.w + lightDiffuse.rgb * lightDiffuse.w * dot(lightDirection, vnormal);\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderBillboardDepth"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tuniform vec2 nearFar;\r\n\tattribute vec3 $position;\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\tvarying float depth;\r\n\tconst float size \x3d 1.05;\r\n\r\n\tvoid main(void) {\r\n\t\tvec3 pos \x3d (view * model * vec4($position, 1.0)).xyz;\r\n\t\tvec2 uv01 \x3d floor($uv0);\r\n\t\tvec2 uv \x3d $uv0 - uv01;\r\n\t\tpos.x +\x3d (uv01.x - .5) * size;\r\n\t\tpos.y +\x3d (uv01.y - .5) * size;\r\n\t\tvec4 eye \x3d vec4(pos, 1.0);\r\n\t\tgl_Position \x3d proj * eye;\r\n\t\tdepth \x3d (-eye.z - nearFar[0]) / (nearFar[1] - nearFar[0]);\r\n\t\tvtc \x3d uv;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e'}});
define(["dojo/text!./BillboardMaterial.xml","./internal/MaterialUtil","../lib/GLSLProgram","../lib/GLSLShader"],function(w,m,q,n){var v=function(a,k){m.basicMaterialConstructor(this,k);var f=m.Layouts.PosNormTex;this.getSize=function(){return 1.05};this.dispose=function(){};this.getTextureId=function(){return a};this.getOutputAmount=function(b){return b*f.getStride()*6};this.getVertexBufferLayout=function(){return f};this.fillInterleaved=function(b,d,g,a,e,c){a=m.fill;var k=b.faces.indices.va,f=b.vertexAttr.va.data,
l=b.vertexAttr.tc4.data,t=b.vertexAttr.n0.data,q=b.vertexAttr.n1.data,n=b.vertexAttr.n2.data;b=b.vertexAttr.n3.data;for(var r=0;r<k.length;++r){var h=4*k[r],p=3*k[r];c+=a(f,h,e,c,d,3);c+=a(t,p,e,c,g,3);e[c++]=l[h];e[c++]=l[h+1];c+=a(f,h,e,c,d,3);c+=a(q,p,e,c,g,3);e[c++]=l[h+2]+1;e[c++]=l[h+1];c+=a(f,h,e,c,d,3);c+=a(n,p,e,c,g,3);e[c++]=l[h+2]+1;e[c++]=l[h+3]+1;c+=a(f,h,e,c,d,3);c+=a(n,p,e,c,g,3);e[c++]=l[h+2]+1;e[c++]=l[h+3]+1;c+=a(f,h,e,c,d,3);c+=a(b,p,e,c,g,3);e[c++]=l[h];e[c++]=l[h+3]+1;c+=a(f,
h,e,c,d,3);c+=a(t,p,e,c,g,3);e[c++]=l[h];e[c++]=l[h+1]}};this.intersect=function(){};this.getGLMaterials=function(){return[x,y,void 0,u]};this.getAllTextureIds=function(){return[a]}},x=function(a,k,f){m.basicGLMaterialConstructor(this,a);var b=k.get("billboard");m.singleTextureGLMaterialConstructor(this,f,{textureId:a.getTextureId()});this.beginSlot=function(a){return 2===a};this.getProgram=function(){return b};this.bind=function(d,g){b.use();this.bindTexture(d,b);a.getVertexBufferLayout().enableVertexAttribArrays(d,
b)};this.release=function(d){a.getVertexBufferLayout().disableVertexAttribArrays(d,b)};this.bindView=function(a,g){m.bindView(g.origin,g.view,b)};this.bindInstance=function(a,g){b.uniformMatrix4fv("model",g.transformation);b.uniformMatrix4fv("modelNormal",g.transformationNormal)};this.getDrawMode=function(a){return a.TRIANGLES}},u=function(a,k,f,b){m.basicGLMaterialConstructor(this,a);var d=null==b?k.get("billboardDepth"):k.get("billboardDepthShadowMap");m.singleTextureGLMaterialConstructor(this,
f,{textureId:a.getTextureId()});this.beginSlot=function(a){return 2===a};this.getProgram=function(){return d};this.bind=function(b,f){d.use();this.bindTexture(b,d);d.uniform2fv("nearFar",f.nearFar);a.getVertexBufferLayout().enableVertexAttribArrays(b,d)};this.release=function(b){a.getVertexBufferLayout().disableVertexAttribArrays(b,d)};this.bindView=function(a,b){m.bindView(b.origin,b.view,d)};this.bindInstance=function(a,b){d.uniformMatrix4fv("model",b.transformation)};this.getDrawMode=function(a){return a.TRIANGLES}},
y=function(a,k,f){u.call(this,a,k,f,!0)};v.loadShaders=function(a,k,f,b){a._parse(w);var d=new n(b.VERTEX_SHADER,a.vertexShaderBillboard,b),g=new n(b.FRAGMENT_SHADER,a.fragmentShaderBillboard,b),d=new q([d,g],b);a=new n(b.VERTEX_SHADER,a.vertexShaderBillboardDepth,b);g=k.get("fsDepthTextured");k=k.get("fsDepthTexturedShadowMap");g=new q([a,g],b);b=new q([a,k],b);f.add("billboard",d);f.add("billboardDepth",g);f.add("billboardDepthShadowMap",b)};return v});