// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../support/geometryUtils ./BufferVectorMath ./GeometryData ./gl-matrix ./Util".split(" "),function(ba,ca,U,R,A,a,F){function N(k,d,f,b,e){if(Math.abs(a.vec3.dot(d,k))>e)return!1;a.vec3.cross(k,d,f);a.vec3.normalize(f);a.vec3.cross(f,k,b);a.vec3.normalize(b);return!0}var k=F.VertexAttrConstants,H=R.Vec3Compact,O;(function(a){for(var d=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],f=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,
0,-1],b=[0,0,1,0,1,1,0,1],e=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],h=Array(36),g=0;6>g;g++)for(var c=0;6>c;c++)h[6*g+c]=g;for(var n=Array(36),g=0;6>g;g++)n[6*g+0]=0,n[6*g+1]=1,n[6*g+2]=2,n[6*g+3]=2,n[6*g+4]=3,n[6*g+5]=0;a.createGeometry=function(c){Array.isArray(c)||(c=[c,c,c]);for(var a=new Float32Array(24),g=0;8>g;g++)a[3*g]=d[g][0]*c[0],a[3*g+1]=d[g][1]*c[1],a[3*g+2]=d[g][2]*c[2];c={};c[k.POSITION]=new Uint32Array(e);c[k.NORMAL]=new Uint32Array(h);c[k.UV0]=new Uint32Array(n);
g={};g[k.POSITION]={size:3,data:a};g[k.NORMAL]={size:3,data:new Float32Array(f)};g[k.UV0]={size:2,data:new Float32Array(b)};return new A(g,c)}})(O||(O={}));var M;(function(a){var d=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],f=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],b=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],e=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];a.createGeometry=function(h){Array.isArray(h)||(h=[h,h,h]);for(var g=new Float32Array(18),c=
0;6>c;c++)g[3*c]=d[c][0]*h[0],g[3*c+1]=d[c][1]*h[1],g[3*c+2]=d[c][2]*h[2];h={};h[k.POSITION]=new Uint32Array(b);h[k.NORMAL]=new Uint32Array(e);c={};c[k.POSITION]={size:3,data:g};c[k.NORMAL]={size:3,data:new Float32Array(f)};return new A(c,h)}})(M||(M={}));var P;(function(t){var d=a.vec3.createFrom(-.5,0,-.5),f=a.vec3.createFrom(.5,0,-.5),b=a.vec3.createFrom(0,0,.5),e=a.vec3.createFrom(0,.5,0),h=a.vec3.create(),g=a.vec3.create(),c=a.vec3.create(),n=a.vec3.create(),l=a.vec3.create();a.vec3.subtract(d,
e,h);a.vec3.subtract(d,f,g);a.vec3.cross(h,g,c);a.vec3.normalize(c,c);a.vec3.subtract(f,e,h);a.vec3.subtract(f,b,g);a.vec3.cross(h,g,n);a.vec3.normalize(n,n);a.vec3.subtract(b,e,h);a.vec3.subtract(b,d,g);a.vec3.cross(h,g,l);a.vec3.normalize(l,l);var p=[d,f,b,e],r=[0,-1,0,c[0],c[1],c[2],n[0],n[1],n[2],l[0],l[1],l[2]],m=[0,1,2,3,1,0,3,2,1,3,0,2],u=[0,0,0,1,1,1,2,2,2,3,3,3];t.createGeometry=function(b){Array.isArray(b)||(b=[b,b,b]);for(var d=new Float32Array(12),c=0;4>c;c++)d[3*c]=p[c][0]*b[0],d[3*c+
1]=p[c][1]*b[1],d[3*c+2]=p[c][2]*b[2];b={};b[k.POSITION]=new Uint32Array(m);b[k.NORMAL]=new Uint32Array(u);c={};c[k.POSITION]={size:3,data:d};c[k.NORMAL]={size:3,data:new Float32Array(r)};return new A(c,b)}})(P||(P={}));var Q;(function(t){t.createBoxGeometry=O.createGeometry;t.createDiamondGeometry=M.createGeometry;t.createTetrahedronGeometry=P.createGeometry;t.createSphereGeometry=function(d,f,b,e,h,g,c){d=d||50;e=void 0!==e?e:-Math.PI;h=void 0!==h?h:2*Math.PI;g=void 0!==g?g:.5*-Math.PI;c=void 0!==
c?c:Math.PI;var a=Math.max(3,Math.floor(f)||8),l=Math.max(2,Math.floor(b)||6),p=(a+1)*(l+1);b=new Float32Array(3*p);f=new Float32Array(3*p);for(var p=new Float32Array(2*p),r=[],m=0,u=0;u<=l;u++){for(var Y=[],t=u/l,y=g+t*c,w=Math.cos(y),B=0;B<=a;B++){var q=B/a,x=e+q*h,Z=Math.cos(x)*w,D=Math.sin(y),x=-Math.sin(x)*w;b[3*m]=Z*d;b[3*m+1]=D*d;b[3*m+2]=x*d;f[3*m]=Z;f[3*m+1]=D;f[3*m+2]=x;p[2*m]=q;p[2*m+1]=t;Y.push(m);++m}r.push(Y)}d=new Uint32Array(2*a*(l-1)*3);for(u=m=0;u<l;u++)for(B=0;B<a;B++)e=r[u][B],
h=r[u][B+1],g=r[u+1][B+1],c=r[u+1][B],0===u?(d[m++]=e,d[m++]=g,d[m++]=c):u===l-1?(d[m++]=e,d[m++]=h,d[m++]=g):(d[m++]=e,d[m++]=h,d[m++]=g,d[m++]=g,d[m++]=c,d[m++]=e);F.assert(m===d.length);a={};a[k.POSITION]=d;a[k.NORMAL]=d;a[k.UV0]=d;l={};l[k.POSITION]={size:3,data:b};l[k.NORMAL]={size:3,data:f};l[k.UV0]={size:2,data:p};return new A(l,a)};t.createPolySphereGeometry=function(d,f,b){function e(b,f){b>f&&(f=[f,b],b=f[0],f=f[1]);var e=b.toString()+"."+f.toString();if(c[e])return c[e];var g=a.length;
a.length+=3;H.add(a,3*b,a,3*f,a,g);H.scale(a,g,d/H.length(a,g));g/=3;return c[e]=g}var a;b?(a=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],b=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1])):(b=d*(1+Math.sqrt(5))/2,a=[-d,b,0,d,b,0,-d,-b,0,d,-b,0,0,-d,b,0,d,b,0,-d,-b,0,d,-b,b,0,-d,b,0,d,-b,0,-d,-b,0,d],b=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]));for(var g=0;g<a.length;g+=3)H.scale(a,
g,d/H.length(a,g));for(var c={},g=0;g<f;g++){for(var n=b.length,l=new Uint32Array(4*n),p=0;p<n;p+=3){var r=b[p],m=b[p+1],u=b[p+2],t=e(r,m),I=e(m,u),y=e(u,r),w=4*p;l[w]=r;l[w+1]=t;l[w+2]=y;l[w+3]=m;l[w+4]=I;l[w+5]=t;l[w+6]=u;l[w+7]=y;l[w+8]=I;l[w+9]=t;l[w+10]=I;l[w+11]=y}b=l;c={}}f=new Float32Array(a);for(g=0;g<f.length;g+=3)H.normalize(f,g);g={};g[k.POSITION]=b;g[k.NORMAL]=b;b={};b[k.POSITION]={size:3,data:new Float32Array(a)};b[k.NORMAL]={size:3,data:f};return new A(b,g)};t.createPointGeometry=function(d,
f,b,e,a,g,c){f=f?new Float32Array([f[0],f[1],f[2]]):new Float32Array([0,0,0]);d=d?new Float32Array([d[0],d[1],d[2]]):new Float32Array([0,0,1]);g=g?new Float32Array(g):new Float32Array([0,0]);var h=b?new Uint8Array([255*b[0],255*b[1],255*b[2],3<b.length?255*b[3]:255]):new Uint8Array([255,255,255,255]),l=null!=e&&2===e.length?new Float32Array(e):new Float32Array([1,1]);e=new Uint32Array([0]);b={};b[k.POSITION]=e;b[k.NORMAL]=e;b[k.UV0]=e;b[k.COLOR]=e;b[k.SIZE]=e;var p={};p[k.POSITION]={size:3,data:f};
p[k.NORMAL]={size:3,data:d};p[k.UV0]={size:g.length,data:g};p[k.COLOR]={size:4,data:h};p[k.SIZE]={size:2,data:l};null!=a&&(a=new Float32Array([a[0],a[1],a[2],a[3]]),b[k.AUXPOS1]=e,p[k.AUXPOS1]={size:4,data:a});null!=c&&(c=new Float32Array([c[0],c[1],c[2],c[3]]),b[k.AUXPOS2]=e,p[k.AUXPOS2]={size:4,data:c});return new A(p,b,A.DefaultOffsets,"point")};t.createPointArrayGeometry=function(d,f){for(var b=new Float32Array(3*d.length),a=new Float32Array(f?3*d.length:3),h=new Uint32Array(d.length),g=new Uint32Array(d.length),
c=0;c<d.length;c++)b[3*c]=d[c][0],b[3*c+1]=d[c][1],b[3*c+2]=d[c][2],f&&(a[3*c]=f[c][0],a[3*c+1]=f[c][1],a[3*c+2]=f[c][2]),h[c]=c,g[c]=0;f||(a[0]=0,a[1]=1,a[2]=0);d=new Float32Array(2);d[0]=0;d[1]=0;c={};c[k.POSITION]=h;c[k.NORMAL]=f?h:g;c[k.UV0]=g;f={};f[k.POSITION]={size:3,data:b};f[k.NORMAL]={size:3,data:a};f[k.UV0]={size:2,data:d};return new A(f,c,A.DefaultOffsets,"point")};t.createTriangleGeometry=function(){var d=new Float32Array([0,0,0,0,0,100,100,0,0]),a=new Uint32Array([0,1,2]),b=new Float32Array([0,
1,0]),e=new Uint32Array([0,0,0]),h=new Float32Array([0,0]),g=new Uint32Array([0,0,0]),c={};c[k.POSITION]=a;c[k.NORMAL]=e;c[k.UV0]=g;a={};a[k.POSITION]={size:3,data:d};a[k.NORMAL]={size:3,data:b};a[k.UV0]={size:2,data:h};return new A(a,c)};t.createSquareGeometry=function(a){var d=new Float32Array(12);if(a)for(var b=0;4>b;b++)for(var e=0;3>e;e++)d[3*b+e]=a[b][e];else d[0]=-1,d[1]=-1,d[2]=0,d[3]=1,d[4]=-1,d[5]=0,d[6]=1,d[7]=1,d[8]=0,d[9]=-1,d[10]=1,d[11]=0;var h=new Uint32Array([0,1,2,2,3,0]);a=new Float32Array([0,
0,1]);var g=new Uint32Array([0,0,0,0,0,0]),b=new Float32Array([0,0,1,0,1,1,0,1]),e=new Uint8Array([255,255,255,255]),c={};c[k.POSITION]=h;c[k.NORMAL]=g;c[k.UV0]=h;c[k.COLOR]=g;h={};h[k.POSITION]={size:3,data:d};h[k.NORMAL]={size:3,data:a};h[k.UV0]={size:2,data:b};h[k.COLOR]={size:4,data:e};return new A(h,c)};t.createConeGeometry=function(d,f,b,e){var h=0,g=a.vec3.createFrom(0,h,0),c=a.vec3.createFrom(0,h+d,0),n=a.vec3.createFrom(0,-1,0),l=a.vec3.createFrom(0,1,0);e&&(h=d,c=a.vec3.createFrom(0,0,0),
g=a.vec3.createFrom(0,h,0),n=a.vec3.createFrom(0,1,0),l=a.vec3.createFrom(0,-1,0));g=[c,g];n=[n,l];l=b+2;c=Math.sqrt(d*d+f*f);if(e)for(e=b-1;0<=e;e--)p=2*Math.PI/b*e,r=a.vec3.createFrom(Math.cos(p)*f,h,Math.sin(p)*f),g.push(r),p=a.vec3.createFrom(d*Math.cos(p)/c,-f/c,d*Math.sin(p)/c),n.push(p);else for(e=0;e<b;e++){var p=2*Math.PI/b*e,r=a.vec3.createFrom(Math.cos(p)*f,h,Math.sin(p)*f);g.push(r);p=a.vec3.createFrom(d*Math.cos(p)/c,f/c,d*Math.sin(p)/c);n.push(p)}d=new Uint32Array(6*(b+2));b=new Uint32Array(6*
(b+2));h=f=0;for(e=3;e<g.length;e++)d[f++]=1,d[f++]=e-1,d[f++]=e,b[h++]=0,b[h++]=0,b[h++]=0;d[f++]=g.length-1;d[f++]=2;d[f++]=1;b[h++]=0;b[h++]=0;b[h++]=0;for(e=3;e<g.length;e++)d[f++]=e,d[f++]=e-1,d[f++]=0,b[h++]=e,b[h++]=e-1,b[h++]=1;d[f++]=0;d[f++]=2;d[f++]=g.length-1;b[h++]=1;b[h++]=2;b[h++]=n.length-1;f=new Float32Array(3*l);for(e=0;e<l;e++)f[3*e]=g[e][0],f[3*e+1]=g[e][1],f[3*e+2]=g[e][2];g=new Float32Array(3*l);for(e=0;e<l;e++)g[3*e]=n[e][0],g[3*e+1]=n[e][1],g[3*e+2]=n[e][2];n={};n[k.POSITION]=
d;n[k.NORMAL]=b;l={};l[k.POSITION]={size:3,data:f};l[k.NORMAL]={size:3,data:g};return new A(l,n)};t.createCylinderGeometry=function(d,f,b,e,h,g){e=e?a.vec3.create(e):a.vec3.createFrom(1,0,0);h=h?a.vec3.create(h):a.vec3.createFrom(0,0,0);g=void 0===g?!0:g;var c=a.vec3.create();a.vec3.normalize(e,c);e=a.vec3.create();a.vec3.scale(c,Math.abs(d),e);var n=a.vec3.create();a.vec3.scale(e,-.5,n);a.vec3.add(n,h);var l=a.vec3.createFrom(0,1,0);.2>Math.abs(1-a.vec3.dot(c,l))&&a.vec3.set3(0,0,1,l);var p=a.vec3.create();
a.vec3.cross(c,l,p);a.vec3.normalize(p);a.vec3.cross(p,c,l);var r=2*b+(g?2:0),m=b+(g?2:0);d=new Float32Array(3*r);h=new Float32Array(3*m);var u=new Float32Array(2*r),t=new Uint32Array(3*b*(g?4:2)),I=new Uint32Array(3*b*(g?4:2));g&&(d[3*(r-2)+0]=n[0],d[3*(r-2)+1]=n[1],d[3*(r-2)+2]=n[2],u[2*(r-2)]=0,u[2*(r-2)+1]=0,d[3*(r-1)+0]=d[3*(r-2)+0]+e[0],d[3*(r-1)+1]=d[3*(r-2)+1]+e[1],d[3*(r-1)+2]=d[3*(r-2)+2]+e[2],u[2*(r-1)]=1,u[2*(r-1)+1]=1,h[3*(m-2)+0]=-c[0],h[3*(m-2)+1]=-c[1],h[3*(m-2)+2]=-c[2],h[3*(m-1)+
0]=c[0],h[3*(m-1)+1]=c[1],h[3*(m-1)+2]=c[2]);for(var c=function(b,d,a){t[b]=d;I[b]=a},y=0,w=a.vec3.create(),B=a.vec3.create(),q=0;q<b;q++){var x=2*Math.PI/b*q;a.vec3.scale(l,Math.sin(x),w);a.vec3.scale(p,Math.cos(x),B);a.vec3.add(w,B);h[3*q+0]=w[0];h[3*q+1]=w[1];h[3*q+2]=w[2];a.vec3.scale(w,f);a.vec3.add(w,n);d[3*q+0]=w[0];d[3*q+1]=w[1];d[3*q+2]=w[2];u[2*q+0]=q/b;u[2*q+1]=0;d[3*(q+b)+0]=d[3*q+0]+e[0];d[3*(q+b)+1]=d[3*q+1]+e[1];d[3*(q+b)+2]=d[3*q+2]+e[2];u[2*(q+b)+0]=q/b;u[2*q+1]=1;x=(q+1)%b;c(y++,
q,q);c(y++,q+b,q);c(y++,x,x);c(y++,x,x);c(y++,q+b,q);c(y++,x+b,x)}if(g){for(q=0;q<b;q++)x=(q+1)%b,c(y++,r-2,m-2),c(y++,q,m-2),c(y++,x,m-2);for(q=0;q<b;q++)x=(q+1)%b,c(y++,q+b,m-1),c(y++,r-1,m-1),c(y++,x+b,m-1)}f={};f[k.POSITION]=t;f[k.NORMAL]=I;f[k.UV0]=t;b={};b[k.POSITION]={size:3,data:d};b[k.NORMAL]={size:3,data:h};b[k.UV0]={size:2,data:u};return new A(b,f)};t.createTubeGeometry=function(d,a,b,e,h){b=b||10;e=null!=e?e:!0;F.assert(1<d.length);for(var f=[],c=[],k=0;k<b;k++){f.push([0,-k-1,-((k+1)%
b)-1]);var l=k/b*2*Math.PI;c.push([Math.cos(l)*a,Math.sin(l)*a])}return t.createPathExtrusionGeometry(c,d,[[0,0,0]],f,e,h)};t.createPathExtrusionGeometry=function(d,f,b,e,h,g){var c=d.length,n=new Float32Array(f.length*c*3+(6*b.length||0)),l=new Float32Array(f.length*c+(2*b.length||0)),p=new Float32Array(f.length*c*3+(b?6:0)),r=(f.length-1)*c*6+6*e.length,m=new Uint32Array(r),r=new Uint32Array(r),u=0,t=0,I=0,y=0,w=0,B=a.vec3.create(),q=a.vec3.create(),x=a.vec3.create(),F=a.vec3.create(),D=a.vec3.create(),
z=a.vec3.create(),H=a.vec3.create(),E=a.vec3.create(),K=a.vec3.create(),S=a.vec3.create(),O=a.vec3.create(),M=a.vec3.create(),P=a.vec3.create(),Q=U.plane.create();a.vec3.set3(0,1,0,K);a.vec3.subtract(f[1],f[0],q);a.vec3.normalize(q);h?(a.vec3.add(f[0],g,E),a.vec3.normalize(E,x)):a.vec3.set3(0,0,1,x);var C=aa;N(q,x,D,x,C)||N(q,K,D,x,C)||N(q,K,D,x,C);a.vec3.set(x,F);a.vec3.set(D,M);for(var v=0;v<b.length;v++)a.vec3.scale(D,b[v][0],z),a.vec3.scale(x,b[v][2],E),a.vec3.add(z,E),a.vec3.add(z,f[0]),n[u++]=
z[0],n[u++]=z[1],n[u++]=z[2],l[I++]=0;p[t++]=-q[0];p[t++]=-q[1];p[t++]=-q[2];for(v=0;v<e.length;v++)m[y++]=0<e[v][0]?e[v][0]:-e[v][0]-1+b.length,m[y++]=0<e[v][1]?e[v][1]:-e[v][1]-1+b.length,m[y++]=0<e[v][2]?e[v][2]:-e[v][2]-1+b.length,r[w++]=0,r[w++]=0,r[w++]=0;for(var C=b.length,v=b.length-1,J=0;J<f.length;J++){var R=!1;if(0<J){a.vec3.set(q,B);J<f.length-1?(a.vec3.subtract(f[J+1],f[J],q),a.vec3.normalize(q)):R=!0;a.vec3.add(B,q,S);a.vec3.normalize(S);a.vec3.add(f[J-1],F,O);U.plane.fromPositionAndNormal(f[J],
S,Q);if(U.plane.intersectRay(Q,O,B,E))a.vec3.subtract(E,f[J]),a.vec3.normalize(E,x),a.vec3.cross(S,x,D),a.vec3.normalize(D);else{var G=S,L=M,T=K,V=D,W=x,X=aa;N(G,F,V,W,X)||N(G,L,V,W,X)||N(G,T,V,W,X)}a.vec3.set(x,F);a.vec3.set(D,M)}h&&(a.vec3.add(f[J],g,E),a.vec3.normalize(E,P));for(G=0;G<c;G++)if(a.vec3.scale(D,d[G][0],z),a.vec3.scale(x,d[G][1],E),a.vec3.add(z,E),a.vec3.normalize(z,H),p[t++]=H[0],p[t++]=H[1],p[t++]=H[2],h?l[I++]=a.vec3.dot(z,P):l[I++]=z[2],a.vec3.add(z,f[J]),n[u++]=z[0],n[u++]=z[1],
n[u++]=z[2],!R)for(L=(G+1)%c,m[y++]=C+G,m[y++]=C+c+G,m[y++]=C+L,m[y++]=C+L,m[y++]=C+c+G,m[y++]=C+c+L,L=0;6>L;L++)r[w++]=m[y-6+L]-v;C+=c}d=f[f.length-1];for(v=0;v<b.length;v++)a.vec3.scale(D,b[v][0],z),a.vec3.scale(x,b[v][1],E),a.vec3.add(z,E),a.vec3.add(z,d),n[u++]=z[0],n[u++]=z[1],n[u++]=z[2],l[I++]=0;b=t/3;p[t++]=q[0];p[t++]=q[1];p[t++]=q[2];c=C-c;for(v=0;v<e.length;v++)m[y++]=0<=e[v][0]?C+e[v][0]:-e[v][0]-1+c,m[y++]=0<=e[v][2]?C+e[v][2]:-e[v][2]-1+c,m[y++]=0<=e[v][1]?C+e[v][1]:-e[v][1]-1+c,r[w++]=
b,r[w++]=b,r[w++]=b;e={};e[k.POSITION]=m;e[k.NORMAL]=r;m={};m[k.POSITION]={size:3,data:n};m.zOffset={size:1,data:l};m[k.NORMAL]={size:3,data:p};return new A(m,e)};t.createPolylineGeometry=function(a,f){F.assert(1<a.length,"createPolylineGeometry(): polyline needs at least 2 points");F.assert(3===a[0].length,"createPolylineGeometry(): malformed vertex");F.assert(void 0===f||f.length===a.length,"createPolylineGeometry: need same number of points and normals");F.assert(void 0===f||3===f[0].length,"createPolylineGeometry(): malformed normal");
for(var b=new Float32Array(3*a.length),d=new Uint32Array(2*(a.length-1)),h=0,g=0,c=0;c<a.length;c++){for(var n=0;3>n;n++)b[h++]=a[c][n];0<c&&(d[g++]=c-1,d[g++]=c)}h={};g={};h[k.POSITION]=d;g[k.POSITION]={size:3,data:b};if(f){for(var b=new Float32Array(3*f.length),l=0,c=0;c<a.length;c++)for(n=0;3>n;n++)b[l++]=f[c][n];h[k.NORMAL]=d;g[k.NORMAL]={size:3,data:b}}return new A(g,h,A.DefaultOffsets,"line")};t.addVertexColors=function(a,f){var b=f||[1,1,1,1];f=new Uint8Array(4);f[0]=255*b[0];f[1]=255*b[1];
f[2]=255*b[2];f[3]=255*(3<b.length?b[3]:1);var b={},d=a.getVertexAttr(),h;for(h in d)b[h]=d[h];b[k.COLOR]={size:4,data:f};f={};for(h in a.indices)f[h]=a.indices[h];f[k.COLOR]=new Uint32Array(f[k.POSITION].length);return a=new A(b,f,a.componentOffsets,a.primitiveType)};t.addNormals=function(d){var f=d.getVertexAttr();d=d.indices;for(var b=R.Vec3Compact.subtract,e=new Float32Array(d.position.length/3*3),h=f.position.data,g=0,c=d.position,n=new Uint32Array(c.length),l=0;l<c.length;l+=3){b(h,3*c[l],h,
3*c[l+2],T,0);b(h,3*c[l],h,3*c[l+1],K,0);a.vec3d.cross(K,T);a.vec3d.normalize(K);var p=g/3;e[g++]=K[0];e[g++]=K[1];e[g++]=K[2];n[l]=p;n[l+1]=p;n[l+2]=p}f[k.NORMAL]={size:3,data:e,offsetIdx:0,strideIdx:3};d[k.NORMAL]=n};t.cgToGIS=function(a){var d=a.getVertexAttr();a=d.position.data;if(d=d.normal.data)for(var b=0;b<d.length;b+=3){var e=d[b+1];d[b+1]=-d[b+2];d[b+2]=e}if(a)for(b=0;b<a.length;b+=3)e=a[b+1],a[b+1]=-a[b+2],a[b+2]=e}})(Q||(Q={}));var aa=.99619469809,K=a.vec3.create(),T=a.vec3.create();return Q});