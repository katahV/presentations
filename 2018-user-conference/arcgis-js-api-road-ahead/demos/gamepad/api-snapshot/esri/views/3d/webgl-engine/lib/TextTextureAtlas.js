// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/arrayUtils ./ModelContentType ./Texture ./Util ../../../webgl/Texture".split(" "),function(t,u,n,m,p,q,r){return function(){function c(a,b){this.dirty=!1;this.elementsToAdd={};this.elementsToRemove={};this.elementsToRender={};this.elements={};this.stageObjects={};this.id=p.idGen.gen(a);this.stage=b._stage;this.controller=b.resourceController;this.ctx=c.getOrCreate2DCanvas().getContext("2d");this.worker=this.run.bind(this);this.stage.add(m.TEXTURE,this);a=this.computeAtlasResolution(b.width,
b.height);this.createAtlasRegion(a);this.update2DCanvasSize()}c.prototype.setUnloadFunc=function(a){this.unloadFunc=a};c.prototype.unload=function(){null!=this.unloadFunc&&(this.unloadFunc(this.id),this.unloadFunc=null)};c.prototype.deferredLoading=function(){return!1};c.prototype.getWidth=function(){return this.atlas.size.width};c.prototype.getHeight=function(){return this.atlas.size.height};c.prototype.initializeThroughRender=function(a,b){b.wrapMode=33071;b.samplingMode=9987;b.flipped=!0;b.preMultiplyAlpha=
!0;b.hasMipmap=!0;return this.glTexture=new r(a,b,c.getOrCreate2DCanvas())};c.prototype.dispose=function(){this.elementsToRender=this.elementsToRemove=this.elementsToAdd=this.elements=null;this.glTexture&&(this.glTexture=null,this.stage.remove(m.TEXTURE,this.id))};c.getOrCreate2DCanvas=function(){c.canvas||(c.canvas=document.createElement("canvas"),c.canvas.setAttribute("id","canvas2d"),c.canvas.setAttribute("style","display:none"),c.canvas.setAttribute("width",(512).toString()),c.canvas.setAttribute("height",
(512).toString()));return c.canvas};c.prototype.update2DCanvasSize=function(){c.canvas&&(c.canvas.setAttribute("width",this.atlas.size.width.toString()),c.canvas.setAttribute("height",this.atlas.size.height.toString()))};c.prototype.generateTextId=function(a){return JSON.stringify(a.getParams())+"_"+a.getText()};c.prototype.createAtlasRegion=function(a){void 0===a&&(a=512);this.atlas={size:{width:a,height:a},cursor:{x:0,y:0},lineHeight:0}};c.prototype.computeAtlasResolution=function(a,b){a=Math.max(a,
b);a=q.nextHighestPowerOfTwo(a+256);return a=Math.min(a,4096)};c.prototype.resizeAtlas=function(a,b){b=b||a;var c=this.atlas;c.size.width=a;c.size.height=b;this.glTexture&&this.glTexture.resize(a,b);this.update2DCanvasSize()};c.prototype.resetAtlasCursor=function(){var a=this.atlas;a.cursor.x=0;a.cursor.y=0;a.lineHeight=0};c.prototype.getAtlasUsage=function(){var a=this.atlas;return(a.cursor.x+a.cursor.y*a.size.width)/(a.size.width*a.size.height)};c.prototype.getExpectedAtlasUsage=function(){var a=
Object.keys(this.elementsToRemove).length,b=Object.keys(this.elementsToAdd).length,c=Object.keys(this.elements).length;return this.getAtlasUsage()/c*(c+b-a)};c.prototype.addAtlasElement=function(a,b,c,e,f){var d=this.atlas;a.placement.offset.x=d.cursor.x;a.placement.offset.y=d.cursor.y;a.placement.size.width=b;a.placement.size.height=c;a.placement.uvMinMax=[a.placement.offset.x/d.size.width,1-(a.placement.offset.y+c)/d.size.height,(a.placement.offset.x+b)/d.size.width,1-a.placement.offset.y/d.size.height];
d.cursor.x+=e;d.lineHeight=Math.max(d.lineHeight,f)};c.prototype.removeAtlasElement=function(a){if(a&&this.elements[a.textId]){var b=a.placement.offset,c=a.placement.size;this.ctx.clearRect(b.x,b.y,c.width,c.height);delete this.elements[a.textId]}};c.prototype.addStageObject=function(a,b){this.stageObjects[a]||(this.stageObjects[a]=[]);-1===this.stageObjects[a].indexOf(b)&&this.stageObjects[a].push(b)};c.prototype.removeStageObject=function(a,b){this.stageObjects[a]&&n.removeUnordered(this.stageObjects[a],
b)&&(b.geometries[0].data.vertexAttributes.size.data=new Float32Array([0,0]),b.geometryVertexAttrsUpdated(0))};c.prototype.processAdditionRequest=function(a){var b=this.atlas,c=a.textId,e=a.textTexture.getRenderedWidth(),f=a.textTexture.getRenderedHeight(),g=e+2,h=f+2+2;if(b.cursor.x+g<b.size.width&&b.cursor.y+h<b.size.height)this.addAtlasElement(a,e,f,g,h),this.elements[c]=a,this.elementsToRender[c]=a,delete this.elementsToAdd[c];else if(b.cursor.y+h+b.lineHeight<b.size.height)b.cursor.x=2,b.cursor.y+=
b.lineHeight,b.lineHeight=0,this.addAtlasElement(a,e,f,g,h),this.elements[c]=a,this.elementsToRender[c]=a,delete this.elementsToAdd[c];else{a=this.getExpectedAtlasUsage();.85<a&&4096>b.size.width&&this.resizeAtlas(2*b.size.width,2*b.size.height);for(var k in this.elementsToRemove)0===this.stageObjects[k].length&&this.removeAtlasElement(this.elementsToRemove[k]),delete this.elementsToRemove[k];if(!(.95<a&&4096===b.size.width)){for(var l in this.elements)b=this.elements[l],b.rendered=!1,this.elementsToAdd[l]=
b,delete this.elements[l];this.resetAtlasCursor();this.elementsToRender={}}}};c.prototype.processRenderingRequest=function(a){var b=a.textId;this.ctx.clearRect(a.placement.offset.x,a.placement.offset.y,a.placement.size.width,a.placement.size.height);a.textTexture.renderText(a.placement.size.width,a.placement.size.height,this.ctx,a.placement.offset.x,a.placement.offset.y);for(var c=0,b=this.stageObjects[b];c<b.length;c++){var e=b[c];e.geometries[0].data.vertexAttributes.uv0.data=new Float32Array(a.placement.uvMinMax);
e.geometries[0].data.vertexAttributes.size.data=new Float32Array([a.placement.size.width,a.placement.size.height]);e.geometryVertexAttrsUpdated(0)}a.rendered=!0};c.prototype.run=function(a){if(this.dirty){for(var b in this.elementsToAdd)if(this.elements[b]&&this.elements[b].rendered){for(var d=0,e=this.stageObjects[b];d<e.length;d++){var f=e[d],g=f.geometries[0].data.vertexAttributes;g.uv0.data=new Float32Array(this.elements[b].placement.uvMinMax);g.size.data=new Float32Array([this.elements[b].placement.size.width,
this.elements[b].placement.size.height]);f.geometryVertexAttrsUpdated(0)}delete this.elementsToAdd[b]}else this.processAdditionRequest(this.elementsToAdd[b]);d=!1;for(b in this.elementsToRender){if(!a.remaining()){d&&this.glTexture.setData(c.canvas);return}this.processRenderingRequest(this.elementsToRender[b]);delete this.elementsToRender[b];d=!0}d&&this.glTexture.setData(c.canvas);this.dirty=!1;this.controller.deregisterFrameWorker(this.worker)}};c.prototype.addTextTexture=function(a,b){var c=this.generateTextId(a);
this.elementsToAdd[c]||(this.elementsToAdd[c]={textId:c,placement:{offset:{x:0,y:0},size:{width:0,height:0},uvMinMax:[]},textTexture:a,rendered:!1});this.addStageObject(c,b);delete this.elementsToRemove[c];this.setDirty()};c.prototype.removeTextTexture=function(a,b){a=this.generateTextId(a);this.elementsToRemove[a]=this.elements[a];this.removeStageObject(a,b);delete this.elementsToAdd[a]};Object.defineProperty(c.prototype,"textureId",{get:function(){return this.id},enumerable:!0,configurable:!0});
Object.defineProperty(c.prototype,"isDirty",{get:function(){return this.dirty},enumerable:!0,configurable:!0});c.prototype.setDirty=function(){this.dirty||(this.dirty=!0,this.controller.registerFrameWorker(this.worker))};return c}()});