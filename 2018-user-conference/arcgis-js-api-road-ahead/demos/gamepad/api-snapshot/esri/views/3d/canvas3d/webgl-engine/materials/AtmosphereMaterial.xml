<?xml version="1.0" encoding="UTF-8"?>

<snippets>

<snippet name="vsAtmosphere"><![CDATA[
	const float TWICEPI = 2.0*3.14159265;
	const float ATMOSPHERE_RIM_SEGMENTS = 128.0;

	uniform mat4 proj;
	uniform mat4 view;
	uniform mat4 model;

	uniform vec3 silCircleCenter;
	uniform vec3 silCircleV1;
	uniform vec3 silCircleV2;
	uniform vec3 lightDirection;
	uniform vec2 texV;

	attribute vec3 $position;
	varying vec2 vtc;
	varying float falloff;

	void main(void) {
		float phi = $position.x*(TWICEPI / ATMOSPHERE_RIM_SEGMENTS) + 1.0;
		vec3 pos = (sin(phi)*silCircleV1 + cos(phi)*silCircleV2 + silCircleCenter) * $position.y;
		
  	float ndotl = dot(normalize(pos), normalize(lightDirection));
  	falloff = max(0.0, (smoothstep(-1.0, 0.8, ndotl + ndotl)));
	
		vtc.x = $position.x / ATMOSPHERE_RIM_SEGMENTS;
		vtc.y = texV.x * (1.0 - $position.z) + texV.y * $position.z;

		gl_Position = proj * view * model * vec4(pos, 1.0);
		gl_Position.z = 0.0;
	}
]]></snippet>

<snippet name="fsAtmosphere"><![CDATA[
	precision mediump float;

	uniform sampler2D tex;
	uniform vec4 color;
	varying vec2 vtc;
	varying float falloff;

	void main() {
		vec4 texColor = texture2D(tex, vtc);
		gl_FragColor = texColor * color * falloff;
	}
]]></snippet>

</snippets>