// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
require({cache:{"url:esri/views/3d/canvas3d/webgl-engine/materials/internal/TexOnlyGLMaterial.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\r\n\r\n\x3csnippets\x3e\r\n\r\n\x3csnippet name\x3d"vertexShaderTexOnly"\x3e\x3c![CDATA[\r\n\tuniform mat4 proj;\r\n\tuniform mat4 view;\r\n\tuniform mat4 model;\r\n\tattribute vec3 $position;\r\n\tattribute vec2 $uv0;\r\n\tvarying vec2 vtc;\r\n\r\n\tvoid main(void) {\r\n\t\tgl_Position \x3d proj * view * vec4((model * vec4(position, 1.0)).xyz, 1.0);\r\n\t\tvtc \x3d $uv0;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3csnippet name\x3d"fragmentShaderTexOnly"\x3e\x3c![CDATA[\r\n\tprecision mediump float;\r\n\r\n\tuniform sampler2D tex;\r\n\tuniform vec4 color;\r\n\tvarying vec2 vtc;\r\n\r\n\tvoid main() {\r\n\t\tvec4 texColor \x3d texture2D(tex, vtc);\r\n\t\tgl_FragColor \x3d texColor * color;\r\n\t}\r\n]]\x3e\x3c/snippet\x3e\r\n\r\n\x3c/snippets\x3e'}});
define(["dojo/text!./TexOnlyGLMaterial.xml","./MaterialUtil","../../lib/GLSLProgram","../../lib/GLSLShader"],function(m,e,n,h){var k=e.Layouts.PosTex,l=function(b,p,g,c,f){this.id=e.__GLMaterial_id++;var d=b.get("texOnly");this.getId=function(){return this.id};this.beginSlot=function(a){return 0===a};this.getProgram=function(){return d};this.setColor=function(a){g=a};this.bind=function(a,b){d.use();d.uniformMatrix4fv("model",e.IDENTITY);d.uniformMatrix4fv("proj",b.proj);d.uniform4fv("color",void 0!==
g?g:[1,1,1,1]);d.uniform1i("tex",0);a.bindTexture(a.TEXTURE_2D,p);k.enableVertexAttribArrays(a,d);c&&a.enable(a.BLEND);void 0!==f&&a.depthFunc(f)};this.release=function(a){void 0!==f&&a.depthFunc(a.LESS);c&&a.disable(a.BLEND);k.disableVertexAttribArrays(a,d)};this.bindView=function(a,b){e.bindView(b.origin,b.view,d)};this.bindInstance=function(a,b){d.uniformMatrix4fv("model",b.transformation)};this.getDrawMode=function(a){return a.TRIANGLES}};l.loadShaders=function(b,e,g,c){b._parse(m);var f=new h(c.VERTEX_SHADER,
b.vertexShaderTexOnly,c);b=new h(c.FRAGMENT_SHADER,b.fragmentShaderTexOnly,c);c=new n([f,b],c);g.add("texOnly",c);e.add("vertexShaderTexOnly",f);e.add("fragmentShaderTexOnly",b)};return l});