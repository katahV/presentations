// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
require({cache:{"esri/views/2d/tiling/TileInfoViewPOT":function(){define("require exports ../../../core/tsSupport/extendsHelper ../../../core/tsSupport/decorateHelper ./TileInfoView ./TileKey".split(" "),function(q,e,a,b,c,d){return function(b){function c(){return null!==b&&b.apply(this,arguments)||this}a(c,b);c.prototype.getTileParentId=function(a){a=d.pool.acquire(a);var b=0===a.level?null:d.getId(a.level-1,a.row>>1,a.col>>1,a.world);d.pool.release(a);return b};c.prototype.getTileIdAtParent=function(a,
b){b=d.pool.acquire(b);var c=this._infoByLevel[b.level];if(a.resolution<c.resolution)throw d.pool.release(b),Error("Cannot calculate parent tile. destination LOD's resolution "+a.resolution+" is not a parent resolution of "+c.resolution);if(a.resolution===c.resolution)return a=b.id,d.pool.release(b),a;c=b.level-a.level;if(0>c)throw d.pool.release(b),Error("Wrong way...!");a=d.getId(a.level,b.row>>c,b.col>>c,b.world);d.pool.release(b);return a};c.prototype.getTileCoverage=function(a){a=b.prototype.getTileCoverage.call(this,
a);if(!a)return a;var c=1<<a.lodInfo.level;a.spans=a.spans.filter(function(a){return 0<=a.row&&a.row<c});return a};return c}(c)})},"esri/views/vectorTiles/TileHandler":function(){define("require exports dojo/Deferred dojo/has dojo/promise/all ../../request ../../core/LRUCache ../../core/promiseUtils ../../core/requireUtils ../../core/workers ../2d/tiling/TileKey ./GeometryUtils ./GlyphMosaic ./GlyphSource ./SpriteMosaic ./SpriteSource ./TileIndex ./VectorTileDisplayObject module".split(" "),function(q,
e,a,b,c,d,f,g,n,m,h,t,l,k,p,u,r,v,x){var z=new f(10),y=new Map;return function(){function b(a,b,c,k,p){void 0===k&&(k=!1);this.devicePixelRatio=c;this.allowUpdates=k;this._tileIndex=this._connection=this._glyphMosaic=this._spriteMosaic=null;this._updateQueue=new Map;this._ongoingRequests=new Map;this._vectorTileLayer=a;this._styleRepository=a.styleRepository;this._requestUpdate=b}b.prototype.destroy=function(){this.stop();this._vectorTileLayer=this._requestUpdate=this._styleRepository=null;this._spriteMosaic&&
(this._spriteMosaic.dispose(),this._spriteMosaic=null);this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null)};Object.defineProperty(b.prototype,"initialized",{get:function(){return this._broadcastPromise&&this._broadcastPromise.isFulfilled()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"spriteMosaic",{get:function(){return this._spriteMosaic},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"glyphMosaic",{get:function(){return this._glyphMosaic},
enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"ongoingRequestCount",{get:function(){return this._ongoingRequests.size},enumerable:!0,configurable:!0});b.prototype.start=function(){var b=this;this.stop();var f=this._styleRepository,d=new u(f.sprite,this.devicePixelRatio);d.devicePixelRatio=this.devicePixelRatio;var g=d.load().then(function(){b._spriteMosaic=new p(1024,1024,250);b._spriteMosaic.setSpriteSource(d)}),r=new k(f.glyphs);this._glyphMosaic=new l(1024,1024,r);var h=this._fetchTileMap(this._vectorTileLayer.tileIndexUrl),
t=m.open(n.getAbsMid("./WorkerTileHandler",q,x),{client:this}).then(function(a){b._connection=a}),v=new a(function(a){g.isFulfilled()||g.cancel();h.isFulfilled()||h.cancel();t.isFulfilled()||t.cancel()});c([g,h,t]).then(function(a){c(b._connection.broadcast("setLayers",f.styleJSON)).then(function(){v.resolve()})});return this._broadcastPromise=v.promise};b.prototype.stop=function(){this._broadcastPromise&&!this._broadcastPromise.isFulfilled()&&this._broadcastPromise.cancel();this._updateQueue.forEach(function(a){return a.cancel()});
this._ongoingRequests.forEach(function(a){return a.cancel()});this._connection&&(this._connection.close(),this._connection=null)};b.prototype.updateTile=function(a,b){var c=this;if(!this.allowUpdates)return g.resolve(null);if(!this._broadcastPromise.isFulfilled()||!this._connection)return g.reject(Error("no connection"));b=Math.round(t.degToByte(b.state.rotation));if(a.rotation===b)return g.resolve(null);var k,p=a.key;this._updateQueue.has(p.id)&&(k=this._updateQueue.get(p.id),k.cancel());a.rotation=
b;k=this._connection.invoke("update",{key:a.id,rotation:b},null,{client:a.client}).then(function(b){a.updateSymbolData(b);return b}).always(function(){c._updateQueue["delete"](p.id)});this._updateQueue.set(a.id,k);return k};b.prototype.getVectorTileWithLRC=function(a,b,c,k){var p=this;void 0===k&&(k=0);var f=new h(a,b,c,0);return this.getRefKey(f).then(function(a){var b=new v(f,a,p._vectorTileLayer.tileInfo,p._styleRepository,0);if(a)return p.getTileData(b.key,0).then(function(a){b.setData(a.tileData,
a.client);return b});b.setData(null,null);return b})};b.prototype.getTileData=function(a,b){var c=this;return this._broadcastPromise.isFulfilled()&&this._connection?this.getRefKey(a).then(function(k){if(!k)return g.resolve(null);var p=Math.round(t.degToByte(b));return c._getTileData(c._connection,a,k,p).then(function(a){return a&&a.tileData?{tileData:a.tileData,client:a.client}:g.reject("No data")})}):g.reject(Error("no connection"))};b.prototype.getRefKey=function(a){return this._tileIndex?this._tileIndex.dataKey(a):
g.resolve(a)};b.prototype.fetchTileData=function(a){a=h.pool.acquire(a);var b=this._vectorTileLayer.getTileUrl(a.level,a.row,a.col);h.pool.release(a);return d(b,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(a){return{result:a.data,transferList:[a.data]}})};b.prototype.getSprites=function(a){return this._spriteMosaic.getSpriteItems(a)};b.prototype.getGlyphs=function(a){return this._glyphMosaic.getGlyphItems(a.tileID,a.font,a.codePoints)};b.prototype.getStyleRepository=function(){return this._styleRepository};
b.prototype.getTileIndex=function(){return this._tileIndex};b.prototype._getTileData=function(a,b,c,k){var p=this,f={client:null};if(a=this._ongoingRequests.get(b.id))return a;a=this._connection.invoke("getTile",{key:b.id,refKey:c.id,rotation:k,cacheTile:this.allowUpdates},null,f).then(function(a){p._ongoingRequests["delete"](b.id);return{tileData:a,client:f.client}}).catch(function(a){p._ongoingRequests["delete"](b.id);p._connection.invoke("destructTileData",b.id,null,f);return g.reject(a)});this._ongoingRequests.set(b.id,
a);return a};b.prototype._fetchTileMap=function(a){var b=this;if(this._vectorTileLayer.capabilities.supportsTileMapIndexing&&this._vectorTileLayer.tilemapCache)return this._tileIndex=new r(this._vectorTileLayer.tilemapCache),g.resolve();if(!a)return g.resolve();if(z.has(a))return this._tileIndex=z.use(a),g.resolve();if(y.has(a))return y.get(a).then(function(a){b._tileIndex=new r(a.data)});var c=d(a,{callbackParamName:"callback",responseType:"json"});c.then(function(c){b._tileIndex=new r(c.data);y["delete"](a);
z.insert(a,b._tileIndex)});y.set(a,c);return c};return b}()})},"esri/core/LRUCache":function(){define(["require","exports"],function(q,e){return function(){function a(a){this._cache={};this._lruQueue=[];if(0>=a)throw Error("LRU cache size must be bigger than zero!");this._maxSize=a}a.prototype.has=function(a){return void 0!==this._cache[a]};a.prototype.insert=function(a,c){null!==this.use(a)?this._cache[a]=c:(this._collect(),this._cache[a]=c,this._lruQueue.unshift(a))};a.prototype.use=function(a){var b=
this._cache[a];if(!b)return null;this._lruQueue.splice(this._lruQueue.indexOf(a),1);this._lruQueue.unshift(a);return b};a.prototype.print=function(){for(var a=0,c=this._lruQueue;a<c.length;a++){var d=c[a];console.log("key: "+d+", value: "+this._cache[d])}};a.prototype._collect=function(){if(!(this._lruQueue.length<this._maxSize)){var a=this._lruQueue.pop(),c=this._cache[a];c&&c.release&&c.release();delete this._cache[a]}};return a}()})},"esri/core/requireUtils":function(){define(["require","exports",
"dojo/Deferred"],function(q,e,a){function b(c,d){if(Array.isArray(d)){var f=new a;c(d,function(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];f.resolve(a)});return f.promise}return b(c,[d]).then(function(a){return a[0]})}Object.defineProperty(e,"__esModule",{value:!0});e.when=b;e.getAbsMid=function(a,b,f){return b.toAbsMid?b.toAbsMid(a):f.id.replace(/\/[^\/]*$/gi,"/")+a}})},"esri/views/vectorTiles/GeometryUtils":function(){define(["require","exports"],function(q,e){function a(a,b){a%=
b;return 0<=a?a:a+b}Object.defineProperty(e,"__esModule",{value:!0});e.C_INFINITY=Number.POSITIVE_INFINITY;e.C_PI=Math.PI;e.C_2PI=2*e.C_PI;e.C_PI_BY_2=e.C_PI/2;e.C_RAD_TO_256=128/e.C_PI;e.C_256_TO_RAD=e.C_PI/128;e.C_DEG_TO_256=256/360;e.C_DEG_TO_RAD=e.C_PI/180;e.C_SQRT2=1.414213562;e.C_SQRT2_INV=1/e.C_SQRT2;var b=1/Math.LN2;e.positiveMod=a;e.radToByte=function(b){return a(b*e.C_RAD_TO_256,256)};e.degToByte=function(b){return a(b*e.C_DEG_TO_256,256)};e.log2=function(a){return Math.log(a)*b};e.sqr=
function(a){return a*a};e.clamp=function(a,b,f){return Math.min(Math.max(a,b),f)};e.interpolate=function(a,b,f){return a*(1-f)+b*f};e.between=function(a,b,f){return a>=b&&a<=f||a>=f&&a<=b}})},"esri/views/vectorTiles/GlyphMosaic":function(){define("require exports dojo/has ../../core/promiseUtils ./Rect ./RectangleBinPack ../webgl/Texture".split(" "),function(q,e,a,b,c,d,f){return function(){function a(a,b,c){this.height=this.width=0;this._dirties=[];this._glyphData=[];this._currentPage=0;this._glyphIndex=
{};this._textures=[];this._rangePromises=new Map;(0>=a||0>=b)&&console.error("Glyph mosaic width and height must be greater than zero!");this.width=a;this.height=b;this._glyphSource=c;this._binPack=new d(a-4,b-4);this._glyphData.push(new Uint8Array(a*b));this._dirties.push(!0);this._textures.push(void 0)}a.prototype.getGlyphItems=function(a,f,g){var h=this,l=[],k=this._glyphSource;a=new Set;for(var p=1/256,u=0;u<g.length;u++)a.add(Math.floor(g[u]*p));var r=[];a.forEach(function(a){if(256>=a){var b=
f+a;h._rangePromises.has(b)?r.push(h._rangePromises.get(b)):(a=k.getRange(f,a).always(function(){h._rangePromises["delete"](b)}),h._rangePromises.set(b,a),r.push(a))}});return b.all(r).then(function(a){var b=h._glyphIndex[f];b||(b={},h._glyphIndex[f]=b);for(var p=0;p<g.length;p++){a=g[p];var r=b[a];if(r)l[a]={rect:r.rect,metrics:r.metrics,page:r.page};else{var u=k.getGlyph(f,a);if(u&&u.metrics){var r=u.metrics,n=void 0;if(0===r.width)n=new c(0,0,0,0);else{var m=r.width+6,v=r.height+6,t=m%4?4-m%4:
4,e=v%4?4-v%4:4;1===t&&(t=5);1===e&&(e=5);n=h._binPack.allocate(m+t,v+e);n.isEmpty&&(h._dirties[h._currentPage]||(h._glyphData[h._currentPage]=null),h._currentPage=h._glyphData.length,h._glyphData.push(new Uint8Array(h.width*h.height)),h._dirties.push(!0),h._textures.push(void 0),h._binPack=new d(h.width-4,h.height-4),n=h._binPack.allocate(m+t,v+e));var t=h._glyphData[h._currentPage],u=u.bitmap,q=e=void 0;if(u)for(var I=0;I<v;I++)for(var e=m*I,q=h.width*(n.y+I+1)+n.x,J=0;J<m;J++)t[q+J+1]=u[e+J]}b[a]=
{rect:n,metrics:r,tileIDs:null,page:h._currentPage};l[a]={rect:n,metrics:r,page:h._currentPage};h._dirties[h._currentPage]=!0}}}return l})};a.prototype.removeGlyphs=function(a){for(var b in this._glyphIndex){var c=this._glyphIndex[b];if(c){var f=void 0,d;for(d in c)if(f=c[d],f.tileIDs["delete"](a),0===f.tileIDs.size){for(var k=this._glyphData[f.page],p=f.rect,g=void 0,r=void 0,n=0;n<p.height;n++)for(g=this.width*(p.y+n)+p.x,r=0;r<p.width;r++)k[g+r]=0;delete c[d];this._dirties[f.page]=!0}}}};a.prototype.bind=
function(a,b,c,d){void 0===d&&(d=0);this._textures[c]||(this._textures[c]=new f(a,{pixelFormat:6406,dataType:5121,width:this.width,height:this.height},new Uint8Array(this.width*this.height)));var g=this._textures[c];g.setSamplingMode(b);this._dirties[c]&&g.setData(this._glyphData[c]);a.bindTexture(g,d);this._dirties[c]=!1};a.prototype.dispose=function(){this._binPack=null;for(var a=0,b=this._textures;a<b.length;a++){var c=b[a];c&&c.dispose()}this._textures.length=0};return a}()})},"esri/views/vectorTiles/Rect":function(){define(["require",
"exports"],function(q,e){return function(){function a(a,c,d,f){void 0===a&&(a=0);void 0===c&&(c=0);void 0===d&&(d=0);void 0===f&&(f=0);this.x=a;this.y=c;this.width=d;this.height=f}Object.defineProperty(a.prototype,"isEmpty",{get:function(){return 0>=this.width||0>=this.height},enumerable:!0,configurable:!0});return a}()})},"esri/views/vectorTiles/RectangleBinPack":function(){define(["require","exports","./Rect"],function(q,e,a){return function(){function b(b,d){this._height=this._width=0;this._free=
[];this._width=b;this._height=d;this._free.push(new a(0,0,b,d))}Object.defineProperty(b.prototype,"width",{get:function(){return this._width},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"height",{get:function(){return this._height},enumerable:!0,configurable:!0});b.prototype.allocate=function(b,d){if(b>this._width||d>this._height)return new a;for(var c=null,g=-1,n=0;n<this._free.length;++n){var m=this._free[n];b<=m.width&&d<=m.height&&(null===c||m.y<=c.y&&m.x<=c.x)&&(c=m,g=n)}if(null===
c)return new a;this._free.splice(g,1);c.width<c.height?(c.width>b&&this._free.push(new a(c.x+b,c.y,c.width-b,d)),c.height>d&&this._free.push(new a(c.x,c.y+d,c.width,c.height-d))):(c.width>b&&this._free.push(new a(c.x+b,c.y,c.width-b,c.height)),c.height>d&&this._free.push(new a(c.x,c.y+d,b,c.height-d)));return new a(c.x,c.y,b,d)};b.prototype.release=function(a){for(var b=0;b<this._free.length;++b){var c=this._free[b];if(c.y===a.y&&c.height===a.height&&c.x+c.width===a.x)c.width+=a.width;else if(c.x===
a.x&&c.width===a.width&&c.y+c.height===a.y)c.height+=a.height;else if(a.y===c.y&&a.height===c.height&&a.x+a.width===c.x)c.x=a.x,c.width+=a.width;else if(a.x===c.x&&a.width===c.width&&a.y+a.height===c.y)c.y=a.y,c.height+=a.height;else continue;this._free.splice(b,1);this.release(a)}this._free.push(a)};return b}()})},"esri/views/vectorTiles/GlyphSource":function(){define(["require","exports","../../request","../../core/pbf","../../core/promiseUtils"],function(q,e,a,b,c){var d=function(){function a(a){this._metrics=
[];this._bitmaps=[];if(a)for(;a.next();)switch(a.tag()){case 1:for(var b=a.getMessage();b.next();)switch(b.tag()){case 3:for(var c=b.getMessage(),d=void 0,f=void 0,k=void 0,p=void 0,g=void 0,r=void 0,n=void 0;c.next();)switch(c.tag()){case 1:d=c.getUInt32();break;case 2:f=c.getBytes();break;case 3:k=c.getUInt32();break;case 4:p=c.getUInt32();break;case 5:g=c.getSInt32();break;case 6:r=c.getSInt32();break;case 7:n=c.getUInt32();break;default:c.skip()}d&&(this._metrics[d]={width:k,height:p,left:g,top:r,
advance:n},this._bitmaps[d]=f);break;default:b.skip()}break;default:a.skip()}}a.prototype.getMetrics=function(a){return this._metrics[a]};a.prototype.getBitmap=function(a){return this._bitmaps[a]};return a}(),f=function(){function a(){this._ranges=[]}a.prototype.getRange=function(a){return this._ranges[a]};a.prototype.addRange=function(a,b){this._ranges[a]=b};return a}();return function(){function g(a){this._glyphInfo={};this._baseURL=a}g.prototype.getRange=function(f,g){var h=this._getFontStack(f);
if(h.getRange(g))return c.resolve();var m=256*g,l=m+255;f=this._baseURL.replace("{fontstack}",f).replace("{range}",m+"-"+l);return a(f,{callbackParamName:"callback",responseType:"array-buffer"}).then(function(a){h.addRange(g,new d(new b(new Uint8Array(a.data),new DataView(a.data))))}).catch(function(){h.addRange(g,new d)})};g.prototype.getGlyph=function(a,b){if(a=this._getFontStack(a)){var c=Math.floor(b/256);if(!(256<c)&&(a=a.getRange(c)))return{metrics:a.getMetrics(b),bitmap:a.getBitmap(b)}}};g.prototype._getFontStack=
function(a){var b=this._glyphInfo[a];b||(b=this._glyphInfo[a]=new f);return b};return g}()})},"esri/views/vectorTiles/SpriteMosaic":function(){define("require exports ./GeometryUtils ./Rect ./RectangleBinPack ../webgl/Texture".split(" "),function(q,e,a,b,c,d){return function(){function f(a,b,d){void 0===d&&(d=0);this._size=[];this._mosaicsData=[];this._textures=[];this._dirties=[];this._pageHeight=this._pageWidth=this._currentPage=this._maxItemSize=0;this._mosaicRects={};this.pixelRatio=1;(0>=a||
0>=b)&&console.error("Sprites mosaic defaultWidth and defaultHeight must be greater than zero!");this._pageWidth=a;this._pageHeight=b;0<d&&(this._maxItemSize=d);this._binPack=new c(a-4,b-4)}f.prototype.getWidth=function(a){return a>=this._size.length?-1:this._size[a][0]};f.prototype.getHeight=function(a){return a>=this._size.length?-1:this._size[a][1]};f.prototype.setSpriteSource=function(a){this.dispose();this.pixelRatio=a.devicePixelRatio;if(0===this._mosaicsData.length){this._binPack=new c(this._pageWidth-
4,this._pageHeight-4);var b=new Uint32Array(Math.floor(this._pageWidth)*Math.floor(this._pageHeight));this._mosaicsData[0]=b;this._dirties.push(!0);this._size.push([this._pageWidth,this._pageHeight]);this._textures.push(void 0)}this._sprites=a};f.prototype.getSpriteItem=function(a,b){void 0===b&&(b=!1);var c=this._mosaicRects[a];if(c)return c;if(!this._sprites||"loaded"!==this._sprites.loadStatus)return null;c=this._sprites.getSpriteInfo(a);if(!c||!c.width||!c.height||0>c.width||0>c.height)return null;
var d=c.width,f=c.height,l=this._allocateImage(d,f),k=l[0],p=l[1];if(0>=k.width)return null;this._copy(k,c,p,l[2],b);c={rect:k,width:d,height:f,anchorX:0,anchorY:0,sdf:c.sdf,pixelRatio:c.pixelRatio,page:p};return this._mosaicRects[a]=c};f.prototype.preloadSpriteItems=function(){for(var a=0,b=this._sprites.spriteNames;a<b.length;a++)this.getSpriteItem(b[a],!0)};f.prototype.getSpriteItems=function(a){for(var b={},c=0;c<a.length;c++){var d=a[c];b[d]=this.getSpriteItem(d)}return b};f.prototype.getMosaicItemPosition=
function(a,b){b=(a=this.getSpriteItem(a,b))&&a.rect;if(!b)return null;b.width=a.width;b.height=a.height;return{size:[a.width,a.height],tl:[(b.x+2)/this._size[a.page][0],(b.y+2)/this._size[a.page][1]],br:[(b.x+2+a.width)/this._size[a.page][0],(b.y+2+a.height)/this._size[a.page][1]],page:a.page}};f.prototype.bind=function(a,b,c,f){void 0===c&&(c=0);void 0===f&&(f=0);this._textures[c]||(this._textures[c]=new d(a,{pixelFormat:6408,dataType:5121,width:this._size[c][0],height:this._size[c][1]},new Uint8Array(this._mosaicsData[c].buffer)));
var g=this._textures[c];g.setSamplingMode(b);this._dirties[c]&&g.setData(new Uint8Array(this._mosaicsData[c].buffer));a.bindTexture(g,f);this._dirties[c]=!1};f._copyBits=function(a,b,c,d,f,l,k,p,u,r,v){var g=d*b+c;k=p*l+k;if(v)for(k-=l,v=-1;v<=r;v++,g=((v+r)%r+d)*b+c,k+=l)for(p=-1;p<=u;p++)f[k+p]=a[g+(p+u)%u];else for(v=0;v<r;v++){for(p=0;p<u;p++)f[k+p]=a[g+p];g+=b;k+=l}};f.prototype._copy=function(a,b,c,d,e,l){if(this._sprites&&"loaded"===this._sprites.loadStatus&&!(c>=this._mosaicsData.length)){var k=
new Uint32Array(l?l.buffer:this._sprites.image.buffer),p=this._mosaicsData[c];p&&k||console.error("Source or target images are uninitialized!");f._copyBits(k,l?b.width:this._sprites.width,b.x,b.y,p,d[0],a.x+2,a.y+2,b.width,b.height,e);this._dirties[c]=!0}};f.prototype._allocateImage=function(d,f){d+=2;f+=2;var g=Math.max(d,f);if(this._maxItemSize&&this._maxItemSize<g){var g=Math.pow(2,Math.ceil(a.log2(d))),h=Math.pow(2,Math.ceil(a.log2(f)));d=new b(0,0,d,f);this._mosaicsData.push(new Uint32Array(g*
h));this._dirties.push(!0);this._size.push([g,h]);this._textures.push(void 0);return[d,this._mosaicsData.length-1,[g,h]]}g=d%4?4-d%4:4;h=f%4?4-f%4:4;1===g&&(g=5);1===h&&(h=5);g=this._binPack.allocate(d+g,f+h);return 0>=g.width?(this._dirties[this._currentPage]||(this._mosaicsData[this._currentPage]=null),this._currentPage=this._mosaicsData.length,this._mosaicsData.push(new Uint32Array(this._pageWidth*this._pageHeight)),this._dirties.push(!0),this._size.push([this._pageWidth,this._pageHeight]),this._textures.push(void 0),
this._binPack=new c(this._pageWidth-4,this._pageHeight-4),this._allocateImage(d,f)):[g,this._currentPage,[this._pageWidth,this._pageHeight]]};f.prototype.dispose=function(){this._binPack=null;this._mosaicRects={};for(var a=0,b=this._textures;a<b.length;a++){var c=b[a];c&&c.dispose()}this._textures.length=0};return f}()})},"esri/views/vectorTiles/SpriteSource":function(){define("require exports ../../core/tsSupport/extendsHelper ../../core/tsSupport/decorateHelper dojo/Deferred ../../kernel ../../request ../../core/promiseUtils ../../core/urlUtils".split(" "),
function(q,e,a,b,c,d,f,g,n){return function(){function a(a,b){this.baseURL=a;this.devicePixelRatio=b;this._isRetina=!1;this._spritesData={};this.height=this.width=this.image=null;this.loadStatus="not-loaded"}Object.defineProperty(a.prototype,"spriteNames",{get:function(){var a=[],b;for(b in this._spritesData)a.push(b);a.sort();return a},enumerable:!0,configurable:!0});a.prototype.getSpriteInfo=function(a){return this._spritesData[a]};a.prototype.load=function(){var a=this;this.loadStatus="loading";
return this.baseURL?this._loadSprites().then(function(){a.loadStatus="loaded";return a}).catch(function(b){a.loadStatus="failed";return a}):g.resolve(this)};a.prototype._loadSprites=function(){var a=this;this._isRetina=1.15<this.devicePixelRatio?!0:!1;var b=this.baseURL,l=this._isRetina?"@2x":"";return f(b+l+".json",{callbackParamName:"callback",responseType:"json"}).then(function(k){var p=Object.keys(k.data);if(!p||0===p.length||1===p.length&&"_ssl"===p[0])return g.resolve(null);a._spritesData=k.data;
var f=new c,r=new Image;r.crossOrigin="anonymous";r.onload=function(){r.onload=null;a.width=r.width;a.height=r.height;var b=document.createElement("canvas");b.width=r.width;b.height=r.height;b=b.getContext("2d");b.drawImage(r,0,0,r.width,r.height);for(var b=b.getImageData(0,0,r.width,r.height),b=new Uint8Array(b.data),c,k=0;k<b.length;k+=4)c=b[k+3]/255,b[k]*=c,b[k+1]*=c,b[k+2]*=c;a.image=b;f.resolve()};k=""+b+l+".png";d.id&&(p=d.id.findCredential(k))&&p.token&&(k+="?token\x3d"+p.token);r.src=n.addProxy(k);
return f})};return a}()})},"esri/views/vectorTiles/TileIndex":function(){define(["require","exports","../../core/promiseUtils","../../layers/support/TilemapCache","../2d/tiling/TileKey"],function(q,e,a,b,c){return function(){function d(a){if(a instanceof b)this._tilemapCache=a;else if(a&&"index"in a)this._tilemap=a.index;else throw Error("Invalid tilemap!");}d.prototype.dataKey=function(a){if(this._tilemapCache){var b=a.level,d=a.row,f=a.col,h=new c(a);return this._tilemapCache.fetchAvailabilityUpsample(b,
d,f,h).then(function(){return h}).catch(function(a){if(a&&"cancel"===a.dojoType)throw a;h.level=b;h.row=d;h.col=f;return h})}return this._getIndexedDataKey(a)};d.prototype.forEach=function(a,b,c,d,h){this._callback=h;this._maxLevel=b+a;this._forEach(this._tilemap,b,c,d)};d.prototype._forEach=function(a,b,c,d){0!==a&&(this._callback(b,c,d),b!==this._maxLevel&&"object"===typeof a&&(this._forEach(a[0],b+1,2*c,2*d),this._forEach(a[1],b+1,2*c,2*d+1),this._forEach(a[2],b+1,2*c+1,2*d),this._forEach(a[3],
b+1,2*c+1,2*d+1)))};d.prototype._getIndexedDataKey=function(b){var d=[b];if(0>b.level||0>b.row||0>b.col||0<b.row>>b.level||0<b.col>>b.level)return a.resolve(null);for(;0!==b.level;)b=new c(b.level-1,b.row>>1,b.col>>1,b.world),d.push(b);b=this._tilemap;var f=d.pop(),e,h;if(1===b)return a.resolve(f);for(;d.length;)if(e=d.pop(),h=(e.col&1)+((e.row&1)<<1),b)if(0===b[h]){f=null;break}else if(1===b[h]){f=e;break}else f=e,b=b[h];return a.resolve(f)};return d}()})},"esri/views/vectorTiles/VectorTileDisplayObject":function(){define("require exports ../../core/tsSupport/extendsHelper ../../core/ObjectPool ../../core/libs/gl-matrix/mat4 ../../core/libs/gl-matrix/vec2 ../../geometry/support/spatialReferenceUtils ../2d/engine/DisplayObject ../2d/tiling/TileKey ./RenderBucket ../webgl/BufferObject".split(" "),
function(q,e,a,b,c,d,f,g,n,m,h){return function(g){function l(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];b=g.call(this)||this;b._renderBuckets=[];b._vectorTileData=null;b._symbolUpdateData=null;b.status=5;b.coords=[0,0];b.bounds=[0,0,0,0];b.tileTransform={transform:Float32Array[16],displayCoord:Float32Array[2]};b.stencilData={mask:0,reference:0};b.status=0;b.tileTransform.transform=c.create();b.tileTransform.displayCoord=d.create();0<a.length&&(f=b.acquire).call.apply(f,[b].concat(a));
return b;var f}a(l,g);l.prototype.reset=function(){n.pool.release(this.key);this.refKey=this.key=null;this.coords[0]=0;this.coords[1]=0;this.bounds[0]=0;this.bounds[1]=0;this.bounds[2]=0;this.height=this.width=this.bounds[3]=0;this.resolution=null;this.rotation=0;this.id=this.client=this.styleLayers=this._vectorTileData=null;this.tileTransform.transform.fill(0);this.tileTransform.displayCoord.fill(0);this.stencilData.mask=0;this.stencilData.reference=0;this._renderBuckets.length=0;this._symbolUpdateData=
null;this.status=0};l.prototype.acquire=function(a,b,c,d,l){this.key=a;this.refKey=b;b=c.lodAt(a.level).resolution;var k=c.size[0]*b,p=c.origin,r=a.col*k,g=a.row*k,u=c.spatialReference,h=0;u&&(u._isWrappable?u._isWrappable():u.isWrappable)&&(u=f.getInfo(u),h=u.valid[1]-u.valid[0]);r=p.x+r+a.world*h;p=p.y-g;this.coords[0]=r;this.coords[1]=p;this.bounds[0]=r;this.bounds[1]=p;this.bounds[2]=r+k;this.bounds[3]=p-k;this.widthInPixels=c.size[1];this.coordRange=4096;this.resolution=b;this.rotation=l;this.styleLayers=
d;this.id=a.id;this.status=1};l.prototype.setData=function(a,b){this._vectorTileData=a;this.client=b;this.status=3};l.prototype.updateSymbolData=function(a){a&&(this._symbolUpdateData=a,this.requestRender())};l.prototype.dispose=function(){this.fillVertexArrayObject&&(this.fillVertexArrayObject.dispose(),this.fillVertexArrayObject=null);this.fillDDVertexArrayObject&&(this.fillDDVertexArrayObject.dispose(),this.fillDDVertexArrayObject=null);this.outlineVertexArrayObject&&(this.outlineVertexArrayObject.dispose(),
this.outlineVertexArrayObject=null);this.outlineDDVertexArrayObject&&(this.outlineDDVertexArrayObject.dispose(),this.outlineDDVertexArrayObject=null);this.lineVertexArrayObject&&(this.lineVertexArrayObject.dispose(),this.lineVertexArrayObject=null);this.lineDDVertexArrayObject&&(this.lineDDVertexArrayObject.dispose(),this.lineDDVertexArrayObject=null);this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null);this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),
this.iconDDVertexArrayObject=null);this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null);this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null);this.circleVertexArrayObject&&(this.circleVertexArrayObject.dispose(),this.circleVertexArrayObject=null);this.fillVertexBuffer&&(this.fillVertexBuffer.dispose(),this.fillVertexBuffer=null);this.fillDDVertexBuffer&&(this.fillDDVertexBuffer.dispose(),this.fillDDVertexBuffer=
null);this.fillIndexBuffer&&(this.fillIndexBuffer.dispose(),this.fillIndexBuffer=null);this.outlineVertexBuffer&&(this.outlineVertexBuffer.dispose(),this.outlineVertexBuffer=null);this.outlineDDVertexBuffer&&(this.outlineDDVertexBuffer.dispose(),this.outlineDDVertexBuffer=null);this.outlineIndexBuffer&&(this.outlineIndexBuffer.dispose(),this.outlineIndexBuffer=null);this.lineVertexBuffer&&(this.lineVertexBuffer.dispose(),this.lineVertexBuffer=null);this.lineDDVertexBuffer&&(this.lineDDVertexBuffer.dispose(),
this.lineDDVertexBuffer=null);this.lineIndexBuffer&&(this.lineIndexBuffer.dispose(),this.lineIndexBuffer=null);this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null);this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null);this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null);this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null);this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),
this.textDDVertexBuffer=null);this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null);this.circleVertexBuffer&&(this.circleVertexBuffer.dispose(),this.circleVertexBuffer=null);this.circleIndexBuffer&&(this.circleIndexBuffer.dispose(),this.circleIndexBuffer=null);this.texture&&(this.texture.dispose(),this.texture=null);this._renderBuckets.length=0;this.status=7};l.prototype.getCpuMemoryUsage=function(){return null!=this._vectorTileData&&this._vectorTileData.bufferData?this._vectorTileData.bufferData.reduce(function(a,
b){return a+b.byteLength},0)+this._vectorTileData.bufferDataInfo.byteLength+this._vectorTileData.bucketDataInfo.byteLength:0};l.prototype.getGpuMemoryUsage=function(){var a=0;this.fillVertexBuffer&&(a+=this.fillVertexBuffer.size);this.fillDDVertexBuffer&&(a+=this.fillDDVertexBuffer.size);this.fillIndexBuffer&&(a+=this.fillIndexBuffer.size);this.outlineVertexBuffer&&(a+=this.outlineVertexBuffer.size);this.outlineDDVertexBuffer&&(a+=this.outlineDDVertexBuffer.size);this.outlineIndexBuffer&&(a+=this.outlineIndexBuffer.size);
this.lineVertexBuffer&&(a+=this.lineVertexBuffer.size);this.lineDDVertexBuffer&&(a+=this.lineDDVertexBuffer.size);this.lineIndexBuffer&&(a+=this.lineIndexBuffer.size);this.iconVertexBuffer&&(a+=this.iconVertexBuffer.size);this.iconDDVertexBuffer&&(a+=this.iconDDVertexBuffer.size);this.iconIndexBuffer&&(a+=this.iconIndexBuffer.size);this.textVertexBuffer&&(a+=this.textVertexBuffer.size);this.textDDVertexBuffer&&(a+=this.textDDVertexBuffer.size);this.textIndexBuffer&&(a+=this.textIndexBuffer.size);
this.circleVertexBuffer&&(a+=this.circleVertexBuffer.size);this.circleIndexBuffer&&(a+=this.circleIndexBuffer.size);this.texture&&(a+=this.texture.descriptor.width*this.texture.descriptor.height*4);return a};l.prototype.attach=function(a){if(4===this.status)return!0;this.status=3;if(!this._vectorTileData||!this._vectorTileData.bufferDataInfo)return this.status=4,!0;if(0===this._renderBuckets.length)for(var b=new Uint32Array(this._vectorTileData.bucketDataInfo),c=b.length,d=0;d<c;){var k=b[d],f=b[d+
1];if(0===f)f=new m.BackgroundRenderBucket,f.layerID=k,this._renderBuckets.push(f),d+=2;else if(1===f)f=new m.FillRenderBucket,f.layerID=k,f.triangleElementStart=b[d+2],f.triangleElementCount=b[d+3],f.outlineElementStart=b[d+4],f.outlineElementCount=b[d+5],this._renderBuckets.push(f),d+=6;else if(2===f)f=new m.LineRenderBucket,f.layerID=k,f.triangleElementStart=b[d+2],f.triangleElementCount=b[d+3],this._renderBuckets.push(f),d+=4;else if(3===f){f=new m.SymbolRenderBucket;f.layerID=k;f.isSDF=0!==b[d+
2];var l=d+3,k=b[l];l++;if(0<k)for(var g=void 0,e=void 0,t=void 0,n=0;n<k;n++)g=b[l],e=b[l+1],t=b[l+2],f.markerPerPageElementsMap.set(g,[e,t]),l+=3;var q=b[l];l++;if(0<q)for(t=e=g=void 0,n=0;n<q;n++)g=b[l],e=b[l+1],t=b[l+2],f.glyphPerPageElementsMap.set(g,[e,t]),l+=3;this._renderBuckets.push(f);d+=5+3*k+3*q}else 4===f?(f=new m.CircleRenderBucket,f.layerID=k,f.triangleElementStart=b[d+2],f.triangleElementCount=b[d+3],this._renderBuckets.push(f),d+=4):console.error("Bad bucket type!")}a=a.context;b=
new Uint32Array(this._vectorTileData.bufferDataInfo);c=b.length;for(f=d=0;f<c;f+=2,d++)if(!(0>=b[f+1]||0===this._vectorTileData.bufferData[d].byteLength))switch(b[f]){case 1:this.fillVertexBuffer?this.fillVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.fillVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 2:this.fillDDVertexBuffer?this.fillDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.fillDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);
break;case 3:this.fillIndexBuffer?this.fillIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.fillIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 4:this.outlineVertexBuffer?this.outlineVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.outlineVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 5:this.outlineDDVertexBuffer?this.outlineDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.outlineDDVertexBuffer=
h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 6:this.outlineIndexBuffer?this.outlineIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.outlineIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 7:this.lineVertexBuffer?this.lineVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.lineVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 8:this.lineDDVertexBuffer?this.lineDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):
this.lineDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 9:this.lineIndexBuffer?this.lineIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.lineIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 10:this.iconVertexBuffer?this.iconVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.iconVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 11:this.iconDDVertexBuffer?this.iconDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):
this.iconDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 12:this.iconIndexBuffer?this.iconIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.iconIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 13:this.textVertexBuffer?this.textVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.textVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 14:this.textDDVertexBuffer?this.textDDVertexBuffer.setData(this._vectorTileData.bufferData[d]):
this.textDDVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 15:this.textIndexBuffer?this.textIndexBuffer.setData(this._vectorTileData.bufferData[d]):this.textIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[d]);break;case 16:this.circleVertexBuffer?this.circleVertexBuffer.setData(this._vectorTileData.bufferData[d]):this.circleVertexBuffer=h.createVertex(a,35044,this._vectorTileData.bufferData[d]);break;case 17:this.circleIndexBuffer?this.circleIndexBuffer.setData(this._vectorTileData.bufferData[d]):
this.circleIndexBuffer=h.createIndex(a,35044,this._vectorTileData.bufferData[d])}this._vectorTileData=null;this.status=4;return!0};l.prototype.detach=function(a){this.client&&6!==this.status&&7!==this.status&&this.client.invoke("destructTileData",this.id);this.dispose();g.prototype.detach.call(this,a)};l.prototype.doRender=function(a){if(this.visible&&4===this.status){var b=a.context,c=a.renderer;if(b&&c){var d=a.drawphase;this._symbolUpdateData&&this._updateSymbolData(a);b.setStencilFunction(514,
this.stencilData.reference,this.stencilData.mask);var f=this.styleLayers,k=void 0!==a.layerOpacity?a.layerOpacity:1;if(0!==k){var l,g=this._renderBuckets.length,e=0;if(0===d)for(e=g-1;0<=e;e--)l=this._renderBuckets[e],3!==l.type&&4!==l.type&&l.hasData()&&c.renderBucket(b,l,a.displayLevel,a.requiredLevel,d,this,f.layers[l.layerID],k);else for(e=0;e<g;e++)l=this._renderBuckets[e],l.hasData()&&c.renderBucket(b,l,a.displayLevel,a.requiredLevel,d,this,f.layers[l.layerID],k)}}}};l.prototype._updateSymbolData=
function(a){if(!this._symbolUpdateData.bucketDataInfo)return!0;var b=new Uint32Array(this._symbolUpdateData.bucketDataInfo),c=b.length;if(0===c)return this._symbolUpdateData=null,!0;if(4!==this.status)return this.requestRender(),!1;a=a.context;for(var d=new Uint32Array(this._symbolUpdateData.bufferDataInfo),f=d.length,k=0,l=0;l<f;l+=2,k++)switch(d[l]){case 10:this.iconVertexBuffer&&(this.iconVertexBuffer.dispose(),this.iconVertexBuffer=null);this.iconVertexBuffer=h.createVertex(a,35044,this._symbolUpdateData.bufferData[k]);
break;case 11:this.iconDDVertexBuffer&&(this.iconDDVertexBuffer.dispose(),this.iconDDVertexBuffer=null);this.iconDDVertexBuffer=h.createVertex(a,35044,this._symbolUpdateData.bufferData[k]);break;case 12:this.iconIndexBuffer&&(this.iconIndexBuffer.dispose(),this.iconIndexBuffer=null);this.iconIndexBuffer=h.createIndex(a,35044,this._symbolUpdateData.bufferData[k]);break;case 13:this.textVertexBuffer&&(this.textVertexBuffer.dispose(),this.textVertexBuffer=null);this.textVertexBuffer=h.createVertex(a,
35044,this._symbolUpdateData.bufferData[k]);break;case 14:this.textDDVertexBuffer&&(this.textDDVertexBuffer.dispose(),this.textDDVertexBuffer=null);this.textDDVertexBuffer=h.createVertex(a,35044,this._symbolUpdateData.bufferData[k]);break;case 15:this.textIndexBuffer&&(this.textIndexBuffer.dispose(),this.textIndexBuffer=null),this.textIndexBuffer=h.createIndex(a,35044,this._symbolUpdateData.bufferData[k])}a=this._renderBuckets.length;for(d=0;d<a;d++)this._renderBuckets[d]instanceof m.SymbolRenderBucket&&
(f=this._renderBuckets[d],f.markerPerPageElementsMap.clear(),f.glyphPerPageElementsMap.clear());for(a=0;a<c;){f=b[a];k=-1;l=this._renderBuckets.length;for(d=0;d<l;d++)if(this._renderBuckets[d].layerID===f){k=d;break}d=this._renderBuckets[k];d||(d=new m.SymbolRenderBucket,d.layerID=f,d.isSDF=0!==b[a+2],this._renderBuckets.push(d));var g=a+3,f=b[g];g++;if(0<f)for(var e=l=k=void 0,t=0;t<f;t++)k=b[g],l=b[g+1],e=b[g+2],d.markerPerPageElementsMap.set(k,[l,e]),g+=3;var n=b[g];g++;if(0<n)for(e=l=k=void 0,
t=0;t<n;t++)k=b[g],l=b[g+1],e=b[g+2],d.glyphPerPageElementsMap.set(k,[l,e]),g+=3;a+=5+3*f+3*n}this.iconVertexArrayObject&&(this.iconVertexArrayObject.dispose(),this.iconVertexArrayObject=null);this.iconDDVertexArrayObject&&(this.iconDDVertexArrayObject.dispose(),this.iconDDVertexArrayObject=null);this.textVertexArrayObject&&(this.textVertexArrayObject.dispose(),this.textVertexArrayObject=null);this.textDDVertexArrayObject&&(this.textDDVertexArrayObject.dispose(),this.textDDVertexArrayObject=null);
this._symbolUpdateData=null;return!0};l.pool=new b(l);return l}(g)})},"esri/core/libs/gl-matrix/vec2":function(){define(["./common"],function(q){var e={create:function(){var a=new q.ARRAY_TYPE(2);a[0]=0;a[1]=0;return a},clone:function(a){var b=new q.ARRAY_TYPE(2);b[0]=a[0];b[1]=a[1];return b},fromValues:function(a,b){var c=new q.ARRAY_TYPE(2);c[0]=a;c[1]=b;return c},copy:function(a,b){a[0]=b[0];a[1]=b[1];return a},set:function(a,b,c){a[0]=b;a[1]=c;return a},add:function(a,b,c){a[0]=b[0]+c[0];a[1]=
b[1]+c[1];return a},subtract:function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];return a}};e.sub=e.subtract;e.multiply=function(a,b,c){a[0]=b[0]*c[0];a[1]=b[1]*c[1];return a};e.mul=e.multiply;e.divide=function(a,b,c){a[0]=b[0]/c[0];a[1]=b[1]/c[1];return a};e.div=e.divide;e.ceil=function(a,b){a[0]=Math.ceil(b[0]);a[1]=Math.ceil(b[1]);return a};e.floor=function(a,b){a[0]=Math.floor(b[0]);a[1]=Math.floor(b[1]);return a};e.min=function(a,b,c){a[0]=Math.min(b[0],c[0]);a[1]=Math.min(b[1],c[1]);return a};e.max=
function(a,b,c){a[0]=Math.max(b[0],c[0]);a[1]=Math.max(b[1],c[1]);return a};e.round=function(a,b){a[0]=Math.round(b[0]);a[1]=Math.round(b[1]);return a};e.scale=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;return a};e.scaleAndAdd=function(a,b,c,d){a[0]=b[0]+c[0]*d;a[1]=b[1]+c[1]*d;return a};e.distance=function(a,b){var c=b[0]-a[0];a=b[1]-a[1];return Math.sqrt(c*c+a*a)};e.dist=e.distance;e.squaredDistance=function(a,b){var c=b[0]-a[0];a=b[1]-a[1];return c*c+a*a};e.sqrDist=e.squaredDistance;e.length=function(a){var b=
a[0];a=a[1];return Math.sqrt(b*b+a*a)};e.len=e.length;e.squaredLength=function(a){var b=a[0];a=a[1];return b*b+a*a};e.sqrLen=e.squaredLength;e.negate=function(a,b){a[0]=-b[0];a[1]=-b[1];return a};e.inverse=function(a,b){a[0]=1/b[0];a[1]=1/b[1];return a};e.normalize=function(a,b){var c=b[0],d=b[1],c=c*c+d*d;0<c&&(c=1/Math.sqrt(c),a[0]=b[0]*c,a[1]=b[1]*c);return a};e.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]};e.cross=function(a,b,c){b=b[0]*c[1]-b[1]*c[0];a[0]=a[1]=0;a[2]=b;return a};e.lerp=function(a,
b,c,d){var f=b[0];b=b[1];a[0]=f+d*(c[0]-f);a[1]=b+d*(c[1]-b);return a};e.random=function(a,b){b=b||1;var c=2*q.RANDOM()*Math.PI;a[0]=Math.cos(c)*b;a[1]=Math.sin(c)*b;return a};e.transformMat2=function(a,b,c){var d=b[0];b=b[1];a[0]=c[0]*d+c[2]*b;a[1]=c[1]*d+c[3]*b;return a};e.transformMat2d=function(a,b,c){var d=b[0];b=b[1];a[0]=c[0]*d+c[2]*b+c[4];a[1]=c[1]*d+c[3]*b+c[5];return a};e.transformMat3=function(a,b,c){var d=b[0];b=b[1];a[0]=c[0]*d+c[3]*b+c[6];a[1]=c[1]*d+c[4]*b+c[7];return a};e.transformMat4=
function(a,b,c){var d=b[0];b=b[1];a[0]=c[0]*d+c[4]*b+c[12];a[1]=c[1]*d+c[5]*b+c[13];return a};e.forEach=function(){var a=e.create();return function(b,c,d,f,g,e){c||(c=2);d||(d=0);for(f=f?Math.min(f*c+d,b.length):b.length;d<f;d+=c)a[0]=b[d],a[1]=b[d+1],g(a,a,e),b[d]=a[0],b[d+1]=a[1];return b}}();e.str=function(a){return"vec2("+a[0]+", "+a[1]+")"};e.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]};e.equals=function(a,b){var c=a[0];a=a[1];var d=b[0];b=b[1];return Math.abs(c-d)<=q.EPSILON*Math.max(1,
Math.abs(c),Math.abs(d))&&Math.abs(a-b)<=q.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))};return e})},"esri/views/vectorTiles/RenderBucket":function(){define(["require","exports","../../core/tsSupport/extendsHelper","../../core/tsSupport/decorateHelper"],function(q,e,a,b){Object.defineProperty(e,"__esModule",{value:!0});q=function(){return function(a){this.type=a}}();e.RenderBucket=q;b=function(b){function c(){var a=b.call(this,2)||this;a.triangleElementStart=0;a.triangleElementCount=0;return a}a(c,
b);c.prototype.hasData=function(){return 0<this.triangleElementCount};return c}(q);e.LineRenderBucket=b;b=function(b){function c(){var a=b.call(this,1)||this;a.triangleElementStart=0;a.triangleElementCount=0;a.outlineElementStart=0;a.outlineElementCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount||0<this.outlineElementCount};return c}(q);e.FillRenderBucket=b;b=function(b){function c(){var a=b.call(this,3)||this;a.markerPerPageElementsMap=new Map;a.glyphPerPageElementsMap=
new Map;a.isSDF=!1;return a}a(c,b);c.prototype.hasData=function(){return 0<this.markerPerPageElementsMap.size||0<this.glyphPerPageElementsMap.size};return c}(q);e.SymbolRenderBucket=b;b=function(b){function c(){var a=b.call(this,4)||this;a.triangleElementStart=0;a.triangleElementCount=0;return a}a(c,b);c.prototype.hasData=function(){return 0<this.triangleElementCount};return c}(q);e.CircleRenderBucket=b;q=function(b){function c(){return b.call(this,0)||this}a(c,b);c.prototype.hasData=function(){return!0};
return c}(q);e.BackgroundRenderBucket=q})},"esri/views/vectorTiles/VectorTileContainer":function(){define("require exports ../../core/tsSupport/extendsHelper dojo/has ../../core/promiseUtils ../../core/libs/gl-matrix/mat4 ../../core/libs/gl-matrix/vec3 ../2d/engine/Container ./GeometryUtils ./renderers/Renderer".split(" "),function(q,e,a,b,c,d,f,g,n,m){return function(g){function e(){var a=g.call(this)||this;a.isInitialized=!1;a._displayWidth=0;a._displayHeight=0;a._pointToCallbacks=new Map;a._tileCoordinateScale=
f.create();a._orientationVec=f.create();a._displayScale=f.create();a._orientationVec.set([0,0,1]);a._defaultTransform=d.create();return a}a(e,g);e.prototype.initialize=function(a,b,c,d){this._renderer=new m;this._renderer.initialize(a,b);this._tileInfoView=d;this._tileInfo=c;this.isInitialized=!0};e.prototype.destroy=function(){this._renderer&&(this._renderer.dispose(),this._renderer=null)};e.prototype.hittest=function(a,b){var d=this,f=[a,b];return c.create(function(a,b){d._pointToCallbacks.set(f,
{resolve:a,reject:b});d.requestRender()},function(){d._pointToCallbacks.has(f)&&d._pointToCallbacks.delete(f)})};e.prototype.prepareChildrenRenderParameters=function(a){var b=a.state;if(!b||!this._tileInfo||!this.isInitialized)return a;a.displayLevel=this._tileInfo.scaleToZoom(b.scale);a.requiredLevel=this._tileInfoView.getClosestInfoForScale(b.scale).level;a.renderer=this._renderer;return a};e.prototype.renderChildren=function(a){var c=this;if(0!==this.children.length&&this.isInitialized&&a&&a.state){this.sortChildren(function(a,
b){return a.key.level-b.key.level});for(var d=this.children.length,f=1;f<=d;f++){var l=this.children[f-1];l.attached&&(l.stencilData.reference=f,l.stencilData.mask=255)}this._updateTilesTransform(a.state,this._tileInfoView.getClosestInfoForScale(a.state.scale).level,this.children);d=a.context;d.setDepthWriteEnabled(!0);this._renderer.setStateParams(a.state,a.pixelRatio,a.displayLevel);this._renderer.drawClippingMasks(d,this.children);d.setStencilWriteMask(0);d.setBlendFunctionSeparate(1,771,1,771);
d.setStencilOp(7680,7680,7681);d.setDepthFunction(515);d.setBlendingEnabled(!1);d.setStencilTestEnabled(!0);d.setDepthTestEnabled(!0);d.setDepthWriteEnabled(!0);a.drawphase=0;g.prototype.renderChildren.call(this,a);d.setDepthWriteEnabled(!1);d.setBlendingEnabled(!0);a.drawphase=1;g.prototype.renderChildren.call(this,a);a.drawphase=2;g.prototype.renderChildren.call(this,a);d.setStencilTestEnabled(!1);d.setDepthTestEnabled(!1);if(b("esri-vector-tiles-debug"))for(f=0,l=this.children;f<l.length;f++){var e=
l[f];e.attached&&e.visible&&this._renderer.renderTileInfo(d,e)}0<this._pointToCallbacks.size&&(this._pointToCallbacks.forEach(function(b,d){b.resolve(c._hitTest(a,d[0],d[1]))}),this._pointToCallbacks.clear());this._renderer.needsRedraw()&&this.requestRender()}};e.prototype.removeAllChildren=function(){for(var a=0;a<this.children.length;a++)this.children[a].dispose();g.prototype.removeAllChildren.call(this)};e.prototype._hitTest=function(a,b,c){var d=this._tileInfoView.getClosestInfoForScale(a.state.scale).level,
f=[0,0];a.state.toMap(f,[b,c]);var k=a.state.clone(),p=k.viewpoint.clone(),g=p.targetGeometry;g.x=f[0];g.y=f[1];p.targetGeometry=g;k.viewpoint=p;k.size=[3,3];this._renderer.setStateParams(k,a.pixelRatio,a.displayLevel);return(a=this._renderer.hitTest({pixelRatio:a.pixelRatio,stationary:a.stationary,opacity:a.opacity,context:a.context,displayLevel:a.displayLevel,requiredLevel:a.requiredLevel,renderer:a.renderer,layerOpacity:a.layerOpacity,state:k,drawphase:3,painter:null},b,c,this.children,d,3,this._updateTilesTransform.bind(this)))&&
0!==a.length?a[0]:null};e.prototype._updateTilesTransform=function(a,b,c){var d=1/a.width,f=1/a.height,k=[0,0];this._calculateRelativeViewProjMat(this._tileInfo.lodAt(b).resolution,a.resolution,a.rotation,this._tileInfo.size[1],4096,a.width,a.height,this._defaultTransform);for(var p=0;p<c.length;p++){var g=c[p];a.toScreen(k,g.coords);k[1]=a.height-k[1];g.tileTransform.displayCoord[0]=2*k[0]*d-1;g.tileTransform.displayCoord[1]=2*k[1]*f-1;g.key.level===b&&4096===g.coordRange?g.tileTransform.transform.set(this._defaultTransform):
this._calculateRelativeViewProjMat(this._tileInfo.lodAt(g.key.level).resolution,a.resolution,a.rotation,this._tileInfo.size[1],g.coordRange,a.width,a.height,g.tileTransform.transform)}};e.prototype._calculateRelativeViewProjMat=function(a,b,c,f,g,e,h,t){var k=.125;512!==f&&4096!==g&&(k=f/g);a=a/b*k;this._tileCoordinateScale.set([a,a,1]);if(e!==this._displayWidth||h!==this._displayHeight)this._displayScale.set([2/e,-2/h,1]),this._displayWidth=e,this._displayHeight=h;d.identity(t);d.scale(t,t,this._tileCoordinateScale);
d.rotate(t,t,-c*n.C_DEG_TO_RAD,this._orientationVec);d.scale(t,t,this._displayScale);d.transpose(t,t)};return e}(g)})},"esri/core/libs/gl-matrix/vec3":function(){define(["./common"],function(q){var e={create:function(){var a=new q.ARRAY_TYPE(3);a[0]=0;a[1]=0;a[2]=0;return a},clone:function(a){var b=new q.ARRAY_TYPE(3);b[0]=a[0];b[1]=a[1];b[2]=a[2];return b},fromValues:function(a,b,c){var d=new q.ARRAY_TYPE(3);d[0]=a;d[1]=b;d[2]=c;return d},copy:function(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];return a},
set:function(a,b,c,d){a[0]=b;a[1]=c;a[2]=d;return a},add:function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];a[2]=b[2]+c[2];return a},subtract:function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];a[2]=b[2]-c[2];return a}};e.sub=e.subtract;e.multiply=function(a,b,c){a[0]=b[0]*c[0];a[1]=b[1]*c[1];a[2]=b[2]*c[2];return a};e.mul=e.multiply;e.divide=function(a,b,c){a[0]=b[0]/c[0];a[1]=b[1]/c[1];a[2]=b[2]/c[2];return a};e.div=e.divide;e.ceil=function(a,b){a[0]=Math.ceil(b[0]);a[1]=Math.ceil(b[1]);a[2]=Math.ceil(b[2]);
return a};e.floor=function(a,b){a[0]=Math.floor(b[0]);a[1]=Math.floor(b[1]);a[2]=Math.floor(b[2]);return a};e.min=function(a,b,c){a[0]=Math.min(b[0],c[0]);a[1]=Math.min(b[1],c[1]);a[2]=Math.min(b[2],c[2]);return a};e.max=function(a,b,c){a[0]=Math.max(b[0],c[0]);a[1]=Math.max(b[1],c[1]);a[2]=Math.max(b[2],c[2]);return a};e.round=function(a,b){a[0]=Math.round(b[0]);a[1]=Math.round(b[1]);a[2]=Math.round(b[2]);return a};e.scale=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;a[2]=b[2]*c;return a};e.scaleAndAdd=
function(a,b,c,d){a[0]=b[0]+c[0]*d;a[1]=b[1]+c[1]*d;a[2]=b[2]+c[2]*d;return a};e.distance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];a=b[2]-a[2];return Math.sqrt(c*c+d*d+a*a)};e.dist=e.distance;e.squaredDistance=function(a,b){var c=b[0]-a[0],d=b[1]-a[1];a=b[2]-a[2];return c*c+d*d+a*a};e.sqrDist=e.squaredDistance;e.length=function(a){var b=a[0],c=a[1];a=a[2];return Math.sqrt(b*b+c*c+a*a)};e.len=e.length;e.squaredLength=function(a){var b=a[0],c=a[1];a=a[2];return b*b+c*c+a*a};e.sqrLen=e.squaredLength;
e.negate=function(a,b){a[0]=-b[0];a[1]=-b[1];a[2]=-b[2];return a};e.inverse=function(a,b){a[0]=1/b[0];a[1]=1/b[1];a[2]=1/b[2];return a};e.normalize=function(a,b){var c=b[0],d=b[1],f=b[2],c=c*c+d*d+f*f;0<c&&(c=1/Math.sqrt(c),a[0]=b[0]*c,a[1]=b[1]*c,a[2]=b[2]*c);return a};e.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]};e.cross=function(a,b,c){var d=b[0],f=b[1];b=b[2];var g=c[0],e=c[1];c=c[2];a[0]=f*c-b*e;a[1]=b*g-d*c;a[2]=d*e-f*g;return a};e.lerp=function(a,b,c,d){var f=b[0],g=b[1];b=b[2];
a[0]=f+d*(c[0]-f);a[1]=g+d*(c[1]-g);a[2]=b+d*(c[2]-b);return a};e.hermite=function(a,b,c,d,f,g){var e=g*g,m=e*(2*g-3)+1,h=e*(g-2)+g,t=e*(g-1);g=e*(3-2*g);a[0]=b[0]*m+c[0]*h+d[0]*t+f[0]*g;a[1]=b[1]*m+c[1]*h+d[1]*t+f[1]*g;a[2]=b[2]*m+c[2]*h+d[2]*t+f[2]*g;return a};e.bezier=function(a,b,c,d,f,g){var e=1-g,m=e*e,h=g*g,t=m*e,m=3*g*m,e=3*h*e;g*=h;a[0]=b[0]*t+c[0]*m+d[0]*e+f[0]*g;a[1]=b[1]*t+c[1]*m+d[1]*e+f[1]*g;a[2]=b[2]*t+c[2]*m+d[2]*e+f[2]*g;return a};e.random=function(a,b){b=b||1;var c=2*q.RANDOM()*
Math.PI,d=2*q.RANDOM()-1,f=Math.sqrt(1-d*d)*b;a[0]=Math.cos(c)*f;a[1]=Math.sin(c)*f;a[2]=d*b;return a};e.transformMat4=function(a,b,c){var d=b[0],f=b[1];b=b[2];var g=c[3]*d+c[7]*f+c[11]*b+c[15],g=g||1;a[0]=(c[0]*d+c[4]*f+c[8]*b+c[12])/g;a[1]=(c[1]*d+c[5]*f+c[9]*b+c[13])/g;a[2]=(c[2]*d+c[6]*f+c[10]*b+c[14])/g;return a};e.transformMat3=function(a,b,c){var d=b[0],f=b[1];b=b[2];a[0]=d*c[0]+f*c[3]+b*c[6];a[1]=d*c[1]+f*c[4]+b*c[7];a[2]=d*c[2]+f*c[5]+b*c[8];return a};e.transformQuat=function(a,b,c){var d=
b[0],f=b[1],g=b[2];b=c[0];var e=c[1],m=c[2];c=c[3];var h=c*d+e*g-m*f,t=c*f+m*d-b*g,l=c*g+b*f-e*d,d=-b*d-e*f-m*g;a[0]=h*c+d*-b+t*-m-l*-e;a[1]=t*c+d*-e+l*-b-h*-m;a[2]=l*c+d*-m+h*-e-t*-b;return a};e.rotateX=function(a,b,c,d){var f=[],g=[];f[0]=b[0]-c[0];f[1]=b[1]-c[1];f[2]=b[2]-c[2];g[0]=f[0];g[1]=f[1]*Math.cos(d)-f[2]*Math.sin(d);g[2]=f[1]*Math.sin(d)+f[2]*Math.cos(d);a[0]=g[0]+c[0];a[1]=g[1]+c[1];a[2]=g[2]+c[2];return a};e.rotateY=function(a,b,c,d){var f=[],g=[];f[0]=b[0]-c[0];f[1]=b[1]-c[1];f[2]=
b[2]-c[2];g[0]=f[2]*Math.sin(d)+f[0]*Math.cos(d);g[1]=f[1];g[2]=f[2]*Math.cos(d)-f[0]*Math.sin(d);a[0]=g[0]+c[0];a[1]=g[1]+c[1];a[2]=g[2]+c[2];return a};e.rotateZ=function(a,b,c,d){var f=[],g=[];f[0]=b[0]-c[0];f[1]=b[1]-c[1];f[2]=b[2]-c[2];g[0]=f[0]*Math.cos(d)-f[1]*Math.sin(d);g[1]=f[0]*Math.sin(d)+f[1]*Math.cos(d);g[2]=f[2];a[0]=g[0]+c[0];a[1]=g[1]+c[1];a[2]=g[2]+c[2];return a};e.forEach=function(){var a=e.create();return function(b,c,d,f,g,e){c||(c=3);d||(d=0);for(f=f?Math.min(f*c+d,b.length):
b.length;d<f;d+=c)a[0]=b[d],a[1]=b[d+1],a[2]=b[d+2],g(a,a,e),b[d]=a[0],b[d+1]=a[1],b[d+2]=a[2];return b}}();e.angle=function(a,b){a=e.fromValues(a[0],a[1],a[2]);b=e.fromValues(b[0],b[1],b[2]);e.normalize(a,a);e.normalize(b,b);b=e.dot(a,b);return 1<b?0:Math.acos(b)};e.str=function(a){return"vec3("+a[0]+", "+a[1]+", "+a[2]+")"};e.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===b[1]&&a[2]===b[2]};e.equals=function(a,b){var c=a[0],d=a[1];a=a[2];var f=b[0],g=b[1];b=b[2];return Math.abs(c-f)<=q.EPSILON*
Math.max(1,Math.abs(c),Math.abs(f))&&Math.abs(d-g)<=q.EPSILON*Math.max(1,Math.abs(d),Math.abs(g))&&Math.abs(a-b)<=q.EPSILON*Math.max(1,Math.abs(a),Math.abs(b))};return e})},"esri/views/vectorTiles/renderers/Renderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../GeometryUtils ./BackgroundRenderer ./CircleRenderer ./FadeRecorder ./FillRenderer ./LineRenderer ./SymbolRenderer ./TileInfoRenderer ../../webgl/FramebufferObject".split(" "),function(q,e,a,b,c,d,f,g,n,m,h,t){return function(){function e(){this._extrudeRotateVector=
new Float32Array([0,0,1]);this._extrudeScaleVector=new Float32Array([1,1,1]);this._state={rotation:0,width:0,height:0};this._cachedRotation=this._cachedHeight=this._cachedWidth=0}e.prototype.initialize=function(a,b,e){void 0===e&&(e=!0);this._SpriteMosaic=a;this._glyphMosaic=b;this._ignoreSpeed=!e;this._backgroundRenderer=new c;this._lineRenderer=new n;this._fillRenderer=new g;this._symbolRenderer=new m;this._circleRenderer=new d;this._tileInfoRenderer=new h;this._fadeRecorder=new f.FadeRecorder(300);
this._extrudeMatrix=new Float32Array(16);this._extrudeNoRotationMatrix=new Float32Array(16);this._backgroundColor=new Float32Array([1,0,0,1])};e.prototype.dispose=function(){this._backgroundRenderer&&(this._backgroundRenderer.dispose(),this._backgroundRenderer=null);this._lineRenderer&&(this._lineRenderer.dispose(),this._lineRenderer=null);this._fillRenderer&&(this._fillRenderer.dispose(),this._fillRenderer=null);this._symbolRenderer&&(this._symbolRenderer.dispose(),this._symbolRenderer=null);this._circleRenderer&&
(this._circleRenderer.dispose(),this._circleRenderer=null);this._tileInfoRenderer&&(this._tileInfoRenderer.dispose(),this._tileInfoRenderer=null);this._hittestFBO&&(this._hittestFBO.dispose(),this._hittestFBO=null)};e.prototype.setStateParams=function(c,d,f){this._fadeRecorder.recordLevel(f);this._state=c;if(this._state.width!==this._cachedWidth||this._state.height!==this._cachedHeight||this._state.rotation!==this._cachedRotation)this._extrudeScaleVector[0]=2/c.width,this._extrudeScaleVector[1]=-2/
c.height,a.identity(this._extrudeMatrix),a.rotate(this._extrudeMatrix,this._extrudeMatrix,-c.rotation*b.C_DEG_TO_RAD,this._extrudeRotateVector),a.scale(this._extrudeMatrix,this._extrudeMatrix,this._extrudeScaleVector),a.transpose(this._extrudeMatrix,this._extrudeMatrix),a.identity(this._extrudeNoRotationMatrix),a.scale(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix,this._extrudeScaleVector),a.transpose(this._extrudeNoRotationMatrix,this._extrudeNoRotationMatrix),this._cachedWidth=this._state.width,
this._cachedHeight=this._state.height,this._cachedRotation=this._state.rotation};e.prototype.drawClippingMasks=function(a,b){if(0!==b.length){a.setDepthWriteEnabled(!1);a.setDepthTestEnabled(!1);a.setStencilTestEnabled(!0);a.setBlendingEnabled(!1);a.setColorMask(!1,!1,!1,!1);a.setStencilOp(7680,7680,7681);a.setStencilWriteMask(255);a.setClearStencil(0);a.clear(a.gl.STENCIL_BUFFER_BIT);for(var c=0;c<b.length;c++){var d=b[c];d.attached&&d.visible&&(a.setStencilFunctionSeparate(1032,519,d.stencilData.reference,
d.stencilData.mask),this._backgroundRenderer.renderSolidColor(a,{u_matrix:d.tileTransform.transform,u_normalized_origin:d.tileTransform.displayCoord,u_coord_range:d.coordRange,u_depth:0,u_color:this._backgroundColor}))}a.setColorMask(!0,!0,!0,!0);a.setBlendingEnabled(!0)}};e.prototype.renderDebug=function(a,b){var c=b.key;this._backgroundColor.set([c.col%2,c.row%2,0===c.col%2&&0===c.row%2?1:0,.5]);this._backgroundRenderer.renderSolidColor(a,{u_matrix:b.tileTransform.transform,u_normalized_origin:b.tileTransform.displayCoord,
u_coord_range:b.coordRange,u_depth:0,u_color:this._backgroundColor})};e.prototype.renderBucket=function(a,b,c,d,f,e,g,l){if(!(void 0!==g.minzoom&&g.minzoom>c||void 0!==g.maxzoom&&g.maxzoom<=c))switch(b.type){case 0:2!==f&&this._renderBackground(a,b,c,f,e,g,l);break;case 1:2!==f&&this._renderFill(a,b,c,f,e,g,l);break;case 2:1!==f&&3!==f||this._renderLine(a,b,c,f,e,g,l);break;case 3:2!==f&&3!==f||this._renderSymbol(a,b,c,f,d,e,g,l);break;case 4:2!==f&&3!==f||this._renderCircle(a,b,c,f,d,e,g,l)}};e.prototype.renderTileInfo=
function(a,b){this._tileInfoRenderer.render(a,b)};e.prototype.needsRedraw=function(){return this._fadeRecorder.needsRedraw()};e.prototype.hitTest=function(a,b,c,d,f,e,g){var k=[0,0],p=[0,0],l=a.state;l.toMap(k,[0,0]);l.toMap(p,[e,e]);b=d.filter(function(a){return!(k[0]>a.bounds[2]||p[0]<a.bounds[0]||k[1]<a.bounds[3]||p[1]>a.bounds[1])});if(0===b.length)return[];b.sort(function(a,b){return a.key.level-b.key.level});c=b.length;for(d=1;d<=c;d++){var h=b[d-1];h.attached&&(h.stencilData.reference=d,h.stencilData.mask=
255)}g(l,f,b);f=a.context;this._hittestFBO||(this._hittestFBO=t.create(f,{colorTarget:0,depthStencilTarget:3,width:e,height:e}));g=f.getViewport();l=f.getBoundFramebufferObject();f.bindFramebuffer(this._hittestFBO);f.setViewport(0,0,e,e);d=f.gl;f.setDepthWriteEnabled(!0);f.setStencilWriteMask(255);f.setClearColor(1,1,1,1);f.setClearDepth(1);f.setClearStencil(0);f.clear(d.COLOR_BUFFER_BIT|d.DEPTH_BUFFER_BIT|d.STENCIL_BUFFER_BIT);f.setDepthWriteEnabled(!1);this.drawClippingMasks(f,b);f.setBlendingEnabled(!1);
f.setStencilWriteMask(0);f.setStencilOp(7680,7680,7681);f.setDepthFunction(515);f.setDepthTestEnabled(!0);f.setDepthWriteEnabled(!0);f.setStencilTestEnabled(!0);for(d=0;d<c;d++)h=b[d],h.attached&&h.doRender(a);f.setStencilTestEnabled(!1);f.setDepthTestEnabled(!1);this._readbackBuffer||(this._readbackBuffer=new Uint8Array(4*e*e),this._readbackBuffer32=new Uint32Array(this._readbackBuffer.buffer));this._hittestFBO.readPixels(0,0,e,e,6408,5121,this._readbackBuffer);a=new Set;e*=e;b=this._readbackBuffer32[Math.round(e/
2)];4294967295!==b&&a.add(b);for(d=0;d<e;d++)b=this._readbackBuffer32[d],4294967295!==b&&a.add(b);f.bindFramebuffer(l);f.setViewport(g.x,g.y,g.width,g.height);var u=[];a.forEach(function(a){u.push(a)});return u};e.prototype._renderBackground=function(a,b,c,d,f,e,g){this._backgroundRenderer.render(a,b,c,d,f,e,this._SpriteMosaic,this._SpriteMosaic.pixelRatio,g)};e.prototype._renderLine=function(a,b,c,d,f,e,g){this._lineRenderer.render(a,b,c,d,this._state,f,e,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,
g)};e.prototype._renderFill=function(a,b,c,d,f,e,g){this._fillRenderer.render(a,b,c,this._state.rotation,d,f,e,this._SpriteMosaic,this._extrudeMatrix,this._SpriteMosaic.pixelRatio,g)};e.prototype._renderCircle=function(a,b,c,d,f,e,g,l){var k=!0;f===e.key.level&&(k=!1);a.setStencilTestEnabled(k);this._circleRenderer.render(a,b,c,d,this._state.rotation,e,g,this._extrudeMatrix,l)};e.prototype._renderSymbol=function(a,b,c,d,f,e,g,l){var k=!0;f===e.key.level&&(k=!1);a.setStencilTestEnabled(k);this._symbolRenderer.render(a,
b,c,d,this._state.rotation,this._fadeRecorder.getFadeValues(this._ignoreSpeed),e,g,this._SpriteMosaic,this._glyphMosaic,this._extrudeMatrix,this._extrudeNoRotationMatrix,this._SpriteMosaic.pixelRatio,l)};return e}()})},"esri/views/vectorTiles/renderers/BackgroundRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/vec4 ../MemoryBuffer ./rendererUtils ./vtShaderSnippets ../../webgl/BufferObject ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),
function(q,e,a,b,c,d,f,g,n,m){return function(){function e(){this._solidAttributeLocations={a_pos:0};this._attributeLocations={a_pos:0,a_id:1};this._patternMatrix=a.create();this._color=b.create();this._rendererInitialized=this._solidrendererInitialized=!1;this._color.set([1,0,0,1])}e.prototype.dispose=function(){this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null);this._vertexArrayObject&&(this._vertexArrayObject.dispose(),this._vertexArrayObject=
null)};e.prototype.renderSolidColor=function(a,b){this._solidrendererInitialized||this._initializeSolidRenderer(a);a.bindVAO(this._solidVertexArrayObject);var c=this._shaderVariations.getProgram([!1,!1],void 0,void 0,this._solidAttributeLocations);a.bindProgram(c);c.setUniformMatrix4fv("u_transformMatrix",b.u_matrix);c.setUniform2fv("u_normalized_origin",b.u_normalized_origin);c.setUniform1f("u_coord_range",b.u_coord_range||4096);c.setUniform1f("u_depth",b.u_depth||0);c.setUniform4fv("u_color",b.u_color||
this._color);a.drawArrays(5,0,4);a.bindVAO()};e.prototype.render=function(b,c,f,e,g,h,m,n,q){this._rendererInitialized||this._initialize(b);var k=h.getPaintValue("background-color",f);q*=h.getPaintValue("background-opacity",f);var l=h.getPaintValue("background-pattern",f),p=void 0!==l,u=k[3]*q,t=p||1>u;if(!t||0!==e)if(t||1!==e){t=3===e;e=this._shaderVariations.getProgram([p,t],void 0,void 0,this._attributeLocations);b.bindVAO(this._vertexArrayObject);b.bindProgram(e);e.setUniform1f("u_coord_range",
g.coordRange);e.setUniform1f("u_depth",h.z||0);e.setUniformMatrix4fv("u_transformMatrix",g.tileTransform.transform);e.setUniform2fv("u_normalized_origin",g.tileTransform.displayCoord);if(p){h=m.getMosaicItemPosition(l,!0);if(!h)return;f=512*Math.pow(2,Math.floor(f)-g.key.level)*n;a.identity(this._patternMatrix);g=f/h.size[1];this._patternMatrix[0]=f/h.size[0];this._patternMatrix[4]=g;m.bind(b,9729,0);e.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix);e.setUniform1f("u_opacity",q);e.setUniform2f("u_pattern_tl",
h.tl[0],h.tl[1]);e.setUniform2f("u_pattern_br",h.br[0],h.br[1]);e.setUniform1i("u_texture",0)}else this._color[0]=u*k[0],this._color[1]=u*k[1],this._color[2]=u*k[2],this._color[3]=u,e.setUniform4fv("u_color",this._color);t&&(c=d.int32To4Bytes(c.layerID),e.setUniform4f("u_id",c[0],c[1],c[2],c[3]));b.drawArrays(5,0,4);b.bindVAO()}};e.prototype._initializeSolidRenderer=function(a){if(this._solidrendererInitialized)return!0;if(!this._shaderVariations){var b=new n("background",["backgroundVS","backgroundFS"],
[],f,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=b}b=new Int8Array([0,0,1,0,0,1,1,1]);b=g.createVertex(a,35044,b);this._solidVertexArrayObject=new m(a,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},{geometry:b});return this._solidrendererInitialized=!0};e.prototype._initialize=function(a){if(this._rendererInitialized)return!0;if(!this._shaderVariations){var b=new n("background",
["backgroundVS","backgroundFS"],[],f,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=b}b=[];b.push(c.i1616to32(0,0));b.push(c.i1616to32(1,0));b.push(c.i1616to32(0,1));b.push(c.i1616to32(1,1));b=new Uint32Array(b);b=g.createVertex(a,35044,b);this._vertexArrayObject=new m(a,{a_pos:0},{geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]},{geometry:b});return this._rendererInitialized=!0};return e}()})},
"esri/core/libs/gl-matrix/mat3":function(){define(["./common"],function(q){var e={create:function(){var a=new q.ARRAY_TYPE(9);a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a},fromMat4:function(a,b){a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[4];a[4]=b[5];a[5]=b[6];a[6]=b[8];a[7]=b[9];a[8]=b[10];return a},clone:function(a){var b=new q.ARRAY_TYPE(9);b[0]=a[0];b[1]=a[1];b[2]=a[2];b[3]=a[3];b[4]=a[4];b[5]=a[5];b[6]=a[6];b[7]=a[7];b[8]=a[8];return b},copy:function(a,b){a[0]=b[0];a[1]=
b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];return a},fromValues:function(a,b,c,d,f,e,n,m,h){var g=new q.ARRAY_TYPE(9);g[0]=a;g[1]=b;g[2]=c;g[3]=d;g[4]=f;g[5]=e;g[6]=n;g[7]=m;g[8]=h;return g},set:function(a,b,c,d,f,e,n,m,h,t){a[0]=b;a[1]=c;a[2]=d;a[3]=f;a[4]=e;a[5]=n;a[6]=m;a[7]=h;a[8]=t;return a},identity:function(a){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a},transpose:function(a,b){if(a===b){var c=b[1],d=b[2],f=b[5];a[1]=b[3];a[2]=b[6];
a[3]=c;a[5]=b[7];a[6]=d;a[7]=f}else a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8];return a},invert:function(a,b){var c=b[0],d=b[1],f=b[2],e=b[3],n=b[4],m=b[5],h=b[6],t=b[7];b=b[8];var l=b*n-m*t,k=-b*e+m*h,p=t*e-n*h,u=c*l+d*k+f*p;if(!u)return null;u=1/u;a[0]=l*u;a[1]=(-b*d+f*t)*u;a[2]=(m*d-f*n)*u;a[3]=k*u;a[4]=(b*c-f*h)*u;a[5]=(-m*c+f*e)*u;a[6]=p*u;a[7]=(-t*c+d*h)*u;a[8]=(n*c-d*e)*u;return a},adjoint:function(a,b){var c=b[0],d=b[1],f=b[2],e=b[3],n=b[4],m=
b[5],h=b[6],t=b[7];b=b[8];a[0]=n*b-m*t;a[1]=f*t-d*b;a[2]=d*m-f*n;a[3]=m*h-e*b;a[4]=c*b-f*h;a[5]=f*e-c*m;a[6]=e*t-n*h;a[7]=d*h-c*t;a[8]=c*n-d*e;return a},determinant:function(a){var b=a[3],c=a[4],d=a[5],f=a[6],e=a[7],n=a[8];return a[0]*(n*c-d*e)+a[1]*(-n*b+d*f)+a[2]*(e*b-c*f)},multiply:function(a,b,c){var d=b[0],f=b[1],e=b[2],n=b[3],m=b[4],h=b[5],t=b[6],l=b[7];b=b[8];var k=c[0],p=c[1],u=c[2],r=c[3],q=c[4],x=c[5],z=c[6],y=c[7];c=c[8];a[0]=k*d+p*n+u*t;a[1]=k*f+p*m+u*l;a[2]=k*e+p*h+u*b;a[3]=r*d+q*n+x*
t;a[4]=r*f+q*m+x*l;a[5]=r*e+q*h+x*b;a[6]=z*d+y*n+c*t;a[7]=z*f+y*m+c*l;a[8]=z*e+y*h+c*b;return a}};e.mul=e.multiply;e.translate=function(a,b,c){var d=b[0],f=b[1],e=b[2],n=b[3],m=b[4],h=b[5],t=b[6],l=b[7];b=b[8];var k=c[0];c=c[1];a[0]=d;a[1]=f;a[2]=e;a[3]=n;a[4]=m;a[5]=h;a[6]=k*d+c*n+t;a[7]=k*f+c*m+l;a[8]=k*e+c*h+b;return a};e.rotate=function(a,b,c){var d=b[0],f=b[1],e=b[2],n=b[3],m=b[4],h=b[5],t=b[6],l=b[7];b=b[8];var k=Math.sin(c);c=Math.cos(c);a[0]=c*d+k*n;a[1]=c*f+k*m;a[2]=c*e+k*h;a[3]=c*n-k*d;
a[4]=c*m-k*f;a[5]=c*h-k*e;a[6]=t;a[7]=l;a[8]=b;return a};e.scale=function(a,b,c){var d=c[0];c=c[1];a[0]=d*b[0];a[1]=d*b[1];a[2]=d*b[2];a[3]=c*b[3];a[4]=c*b[4];a[5]=c*b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];return a};e.fromTranslation=function(a,b){a[0]=1;a[1]=0;a[2]=0;a[3]=0;a[4]=1;a[5]=0;a[6]=b[0];a[7]=b[1];a[8]=1;return a};e.fromRotation=function(a,b){var c=Math.sin(b);b=Math.cos(b);a[0]=b;a[1]=c;a[2]=0;a[3]=-c;a[4]=b;a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};e.fromScaling=function(a,b){a[0]=b[0];a[1]=0;
a[2]=0;a[3]=0;a[4]=b[1];a[5]=0;a[6]=0;a[7]=0;a[8]=1;return a};e.fromMat2d=function(a,b){a[0]=b[0];a[1]=b[1];a[2]=0;a[3]=b[2];a[4]=b[3];a[5]=0;a[6]=b[4];a[7]=b[5];a[8]=1;return a};e.fromQuat=function(a,b){var c=b[0],d=b[1],f=b[2];b=b[3];var e=c+c,n=d+d,m=f+f,c=c*e,h=d*e,d=d*n,t=f*e,l=f*n,f=f*m,e=b*e,n=b*n;b*=m;a[0]=1-d-f;a[3]=h-b;a[6]=t+n;a[1]=h+b;a[4]=1-c-f;a[7]=l-e;a[2]=t-n;a[5]=l+e;a[8]=1-c-d;return a};e.normalFromMat4=function(a,b){var c=b[0],d=b[1],f=b[2],e=b[3],n=b[4],m=b[5],h=b[6],t=b[7],l=
b[8],k=b[9],p=b[10],u=b[11],r=b[12],q=b[13],x=b[14];b=b[15];var z=c*m-d*n,y=c*h-f*n,D=c*t-e*n,w=d*h-f*m,B=d*t-e*m,F=f*t-e*h,E=l*q-k*r,K=l*x-p*r,l=l*b-u*r,L=k*x-p*q,k=k*b-u*q,p=p*b-u*x,u=z*p-y*k+D*L+w*l-B*K+F*E;if(!u)return null;u=1/u;a[0]=(m*p-h*k+t*L)*u;a[1]=(h*l-n*p-t*K)*u;a[2]=(n*k-m*l+t*E)*u;a[3]=(f*k-d*p-e*L)*u;a[4]=(c*p-f*l+e*K)*u;a[5]=(d*l-c*k-e*E)*u;a[6]=(q*F-x*B+b*w)*u;a[7]=(x*D-r*F-b*y)*u;a[8]=(r*B-q*D+b*z)*u;return a};e.str=function(a){return"mat3("+a[0]+", "+a[1]+", "+a[2]+", "+a[3]+", "+
a[4]+", "+a[5]+", "+a[6]+", "+a[7]+", "+a[8]+")"};e.frob=function(a){return Math.sqrt(Math.pow(a[0],2)+Math.pow(a[1],2)+Math.pow(a[2],2)+Math.pow(a[3],2)+Math.pow(a[4],2)+Math.pow(a[5],2)+Math.pow(a[6],2)+Math.pow(a[7],2)+Math.pow(a[8],2))};e.add=function(a,b,c){a[0]=b[0]+c[0];a[1]=b[1]+c[1];a[2]=b[2]+c[2];a[3]=b[3]+c[3];a[4]=b[4]+c[4];a[5]=b[5]+c[5];a[6]=b[6]+c[6];a[7]=b[7]+c[7];a[8]=b[8]+c[8];return a};e.subtract=function(a,b,c){a[0]=b[0]-c[0];a[1]=b[1]-c[1];a[2]=b[2]-c[2];a[3]=b[3]-c[3];a[4]=b[4]-
c[4];a[5]=b[5]-c[5];a[6]=b[6]-c[6];a[7]=b[7]-c[7];a[8]=b[8]-c[8];return a};e.sub=e.subtract;e.multiplyScalar=function(a,b,c){a[0]=b[0]*c;a[1]=b[1]*c;a[2]=b[2]*c;a[3]=b[3]*c;a[4]=b[4]*c;a[5]=b[5]*c;a[6]=b[6]*c;a[7]=b[7]*c;a[8]=b[8]*c;return a};e.multiplyScalarAndAdd=function(a,b,c,d){a[0]=b[0]+c[0]*d;a[1]=b[1]+c[1]*d;a[2]=b[2]+c[2]*d;a[3]=b[3]+c[3]*d;a[4]=b[4]+c[4]*d;a[5]=b[5]+c[5]*d;a[6]=b[6]+c[6]*d;a[7]=b[7]+c[7]*d;a[8]=b[8]+c[8]*d;return a};e.exactEquals=function(a,b){return a[0]===b[0]&&a[1]===
b[1]&&a[2]===b[2]&&a[3]===b[3]&&a[4]===b[4]&&a[5]===b[5]&&a[6]===b[6]&&a[7]===b[7]&&a[8]===b[8]};e.equals=function(a,b){var c=a[0],d=a[1],f=a[2],e=a[3],n=a[4],m=a[5],h=a[6],t=a[7],l=a[8],k=b[0],p=b[1],u=b[2],r=b[3],v=b[4],x=b[5];a=a[6];var z=b[7];b=b[8];return Math.abs(c-k)<=q.EPSILON*Math.max(1,Math.abs(c),Math.abs(k))&&Math.abs(d-p)<=q.EPSILON*Math.max(1,Math.abs(d),Math.abs(p))&&Math.abs(f-u)<=q.EPSILON*Math.max(1,Math.abs(f),Math.abs(u))&&Math.abs(e-r)<=q.EPSILON*Math.max(1,Math.abs(e),Math.abs(r))&&
Math.abs(n-v)<=q.EPSILON*Math.max(1,Math.abs(n),Math.abs(v))&&Math.abs(m-x)<=q.EPSILON*Math.max(1,Math.abs(m),Math.abs(x))&&Math.abs(h-a)<=q.EPSILON*Math.max(1,Math.abs(h),Math.abs(a))&&Math.abs(t-z)<=q.EPSILON*Math.max(1,Math.abs(t),Math.abs(z))&&Math.abs(l-b)<=q.EPSILON*Math.max(1,Math.abs(l),Math.abs(b))};return e})},"esri/views/vectorTiles/MemoryBuffer":function(){define(["require","exports"],function(q,e){return function(){function a(a){this._array=[];0>=a&&console.error("strideInBytes must be positive!");
this._stride=a}Object.defineProperty(a.prototype,"array",{get:function(){return this._array},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"index",{get:function(){return 4*this._array.length/this._stride},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"itemSize",{get:function(){return this._stride},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"sizeInBytes",{get:function(){return 4*this._array.length},enumerable:!0,configurable:!0});a.prototype.reset=
function(){this.array.length=0};a.prototype.toBuffer=function(){return(new Uint32Array(this._array)).buffer};a.i1616to32=function(a,c){return 65535&a|c<<16};a.i8888to32=function(a,c,d,f){return a&255|(c&255)<<8|(d&255)<<16|f<<24};a.i8816to32=function(a,c,d){return a&255|(c&255)<<8|d<<16};return a}()})},"esri/views/vectorTiles/renderers/rendererUtils":function(){define(["require","exports"],function(q,e){Object.defineProperty(e,"__esModule",{value:!0});var a=new Uint32Array(1),b=new Uint8Array(a.buffer);
e.int32To4Bytes=function(c){a[0]=c|0;return[b[0],b[1],b[2],b[3]]}})},"esri/views/vectorTiles/renderers/vtShaderSnippets":function(){define("require exports dojo/text!../../2d/engine/webgl/shaders/tileInfo.xml dojo/text!./shaders/backgroundShaders.xml dojo/text!./shaders/circleShaders.xml dojo/text!./shaders/fillShaders.xml dojo/text!./shaders/iconShaders.xml dojo/text!./shaders/lineShaders.xml dojo/text!./shaders/outlineShaders.xml dojo/text!./shaders/textShaders.xml ../../webgl/ShaderSnippets".split(" "),
function(q,e,a,b,c,d,f,g,n,m,h){q=new h;h.parse(b,q);h.parse(a,q);h.parse(d,q);h.parse(n,q);h.parse(g,q);h.parse(f,q);h.parse(m,q);h.parse(c,q);return q})},"esri/views/vectorTiles/renderers/CircleRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),function(q,e,a,b,c,d,f,g,n,m){return function(){function e(){this._attributeLocations=
{a_pos:0,a_color:1,a_stroke_color:2,a_data:3};this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=b.create();this._color=c.create();this._strokeColor=c.create()}e.prototype.dispose=function(){};e.prototype.render=function(b,c,e,g,h,r,m,n,q){if(0!==c.triangleElementCount){this._initialized||this._initialize(b);var k=m.hasDataDrivenRadius?1:m.getPaintValue("circle-radius",e),p=m.hasDataDrivenColor?[1,1,1,1]:m.getPaintValue("circle-color",e),l=m.hasDataDrivenOpacity?1:m.getPaintValue("circle-opacity",
e),u=m.hasDataDrivenStrokeWidth?1:m.getPaintValue("circle-stroke-width",e),t=m.hasDataDrivenStrokeColor?[1,1,1,1]:m.getPaintValue("circle-stroke-color",e),E=m.hasDataDrivenStrokeOpacity?1:m.getPaintValue("circle-stroke-opacity",e),x=m.hasDataDrivenBlur?0:m.getPaintValue("circle-blur",e),l=l*p[3]*q;this._color[0]=l*p[0];this._color[1]=l*p[1];this._color[2]=l*p[2];this._color[3]=l;l=E*t[3]*q;this._strokeColor[0]=l*t[0];this._strokeColor[1]=l*t[1];this._strokeColor[2]=l*t[2];this._strokeColor[3]=l;q=
r.tileTransform.transform;p=m.getPaintValue("circle-translate",e);if(0!==p[0]||0!==p[1])a.copy(this._viewProjMat,r.tileTransform.transform),q=p[0],p=p[1],E=t=0,E=(1<<r.key.level)/Math.pow(2,e)*(r.coordRange/512),1===m.getPaintValue("circle-translate-anchor",e)?(h*=-d.C_DEG_TO_RAD,e=Math.sin(h),h=Math.cos(h),t=E*(q*h-p*e),E*=q*e+p*h):(t=E*q,E*=p),this._offsetVector[0]=t,this._offsetVector[1]=E,this._offsetVector[2]=0,a.translate(this._viewProjMat,this._viewProjMat,this._offsetVector),q=this._viewProjMat;
if(e=this._getCircleVAO(b,r))b.bindVAO(e),e=3===g,g=this._shaderVariations.getProgram([e],void 0,void 0,this._attributeLocations),b.bindProgram(g),g.setUniformMatrix4fv("u_transformMatrix",q),g.setUniformMatrix4fv("u_extrudeMatrix",n),g.setUniform2fv("u_normalized_origin",r.tileTransform.displayCoord),g.setUniform1f("u_depth",m.z),g.setUniform1f("u_radius",k),g.setUniform4fv("u_color",this._color),g.setUniform1f("u_blur",x),g.setUniform1f("u_stroke_width",u),g.setUniform4fv("u_stroke_color",this._strokeColor),
g.setUniform1f("u_antialiasingWidth",1.2),e&&(r=f.int32To4Bytes(c.layerID),g.setUniform4f("u_id",r[0],r[1],r[2],r[3])),b.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart),b.bindVAO()}};e.prototype._initialize=function(a){if(this._initialized)return!0;a=new n("circle",["circleVS","circleFS"],[],g,a);a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_color",
count:4,type:5121,offset:4,stride:16,normalized:!0,divisor:0},{name:"a_stroke_color",count:4,type:5121,offset:8,stride:16,normalized:!0,divisor:0},{name:"a_data",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getCircleVAO=function(a,b){if(b.circleVertexArrayObject)return b.circleVertexArrayObject;var c=b.circleVertexBuffer,d=b.circleIndexBuffer;if(!c||!d)return null;b.circleVertexArrayObject=new m(a,this._attributeLocations,this._vertexAttributes,
{geometry:c},d);return b.circleVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/FadeRecorder":function(){define(["require","exports","../../../core/now"],function(q,e,a){Object.defineProperty(e,"__esModule",{value:!0});(function(){return function(a,c){this.level=a;this.now=c}})();q=function(){return function(a,c,d,e){this.fadeSpeed=a;this.minfadeLevel=c;this.maxfadeLevel=d;this.fadeChange=e}}();e.FadeProperties=q;q=function(){function b(a){void 0===a&&(a=300);this._levelSnapshots=
[];this._duration=a}b.prototype.recordLevel=function(b){var c=a(),e=this._levelSnapshots;0===e.length&&(e.push({level:b,now:0}),e.push({level:b,now:0}));2!==e.length&&e[0].level===b||e.push({level:b,now:c})};b.prototype.needsRedraw=function(){if(0===this._levelSnapshots.length)return!1;for(var a=this._duration,b=this._levelSnapshots,e=b.length,g=b[e-1],n=-1;e>n+1&&b[n+1].now+a<g.now;)n++;for(0>n&&(n=0);n<e;n++)if(b[n].level!==g.level)return!0;return!1};b.prototype.getFadeValues=function(b){void 0===
b&&(b=!1);for(var c=this._duration,e=a(),g=this._levelSnapshots;3<g.length&&g[1].now+c<e;)g.shift();g[1].now+c<e&&(g[0].level=g[1].level);var n=g[0].level,m=g[g.length-1],h=m.level,t=Math.min(n,h),n=Math.max(n,h),g=(m.level-g[1].level)/((m.now-g[1].now)/c);return b?{fadeSpeed:0,minfadeLevel:t,maxfadeLevel:n,fadeChange:0}:{fadeSpeed:g,minfadeLevel:t,maxfadeLevel:n,fadeChange:(e-m.now)/c*g}};return b}();e.FadeRecorder=q})},"esri/views/vectorTiles/renderers/FillRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat3 ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),
function(q,e,a,b,c,d,f,g,n,m,h){var t=1/65536;return function(){function e(){this._fillAttributeLocations={a_pos:0};this._fillAttributeLocationsDD={a_pos:0,a_color:1};this._outlineAttributeLocations={a_pos:0,a_offset:1,a_xnormal:2};this._outlineAttributeLocationsDD={a_pos:0,a_offset:1,a_xnormal:2,a_color:3};this._initialized=!1;this._viewProjMat=b.create();this._offsetVector=c.create();this._patternMatrix=a.create();this._color=d.create();this._outlineColor=d.create()}e.prototype.dispose=function(){};
e.prototype.render=function(a,c,d,e,h,l,m,n,q,w,B){if(0!==c.triangleElementCount){this._initialized||this._initialize(a);var k=void 0!==m.getPaintValue("fill-pattern",d),p=m.hasDataDrivenColor?[1,1,1,1]:m.getPaintValue("fill-color",d),u=m.hasDataDrivenOpacity?1:m.getPaintValue("fill-opacity",d),r=u*p[3]*B;this._color[0]=r*p[0];this._color[1]=r*p[1];this._color[2]=r*p[2];this._color[3]=r;var p=3===h,x;p&&(x=g.int32To4Bytes(c.layerID));var r=l.tileTransform.transform,v=l.coordRange/512,y=m.getPaintValue("fill-translate",
d);if(0!==y[0]||0!==y[1]){b.copy(this._viewProjMat,l.tileTransform.transform);var r=y[0],y=y[1],z=0,D=0,v=(1<<l.key.level)/Math.pow(2,d)*v;1===m.getPaintValue("fill-translate-anchor",d)?(z=-f.C_DEG_TO_RAD*e,e=Math.sin(z),D=Math.cos(z),z=v*(r*D-y*e),D=v*(r*e+y*D)):(z=v*r,D=v*y);this._offsetVector[0]=z;this._offsetVector[1]=D;this._offsetVector[2]=0;b.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);r=this._viewProjMat}this._drawFill(a,c,d,h,l,m,n,r,w,B,p,x);if(m.getPaintValue("fill-antialias",
d)&&!k&&0<c.outlineElementCount&&(1===h||3===h)){h=m.hasDataDrivenOutline;if(m.outlineUsesFillColor){if(1!==this._color[3])return;this._outlineColor[0]=this._color[0];this._outlineColor[1]=this._color[1];this._outlineColor[2]=this._color[2];this._outlineColor[3]=this._color[3]}else d=m.hasDataDrivenOutlineColor?[1,1,1,1]:m.getPaintValue("fill-outline-color",d),B*=u*d[3],this._outlineColor[0]=B*d[0],this._outlineColor[1]=B*d[1],this._outlineColor[2]=B*d[2],this._outlineColor[3]=B;w=.75/w;if(B=this._getOutlineVAO(a,
l,h))a.bindVAO(B),B=this._outlineShaderVariations.getProgram([h,p],void 0,void 0,h?this._outlineAttributeLocationsDD:this._outlineAttributeLocations),a.bindProgram(B),B.setUniformMatrix4fv("u_transformMatrix",r),B.setUniformMatrix4fv("u_extrudeMatrix",q),B.setUniform2fv("u_normalized_origin",l.tileTransform.displayCoord),B.setUniform1f("u_depth",m.z+t),B.setUniform1f("u_outline_width",w),B.setUniform4fv("u_color",this._outlineColor),p&&B.setUniform4f("u_id",x[0],x[1],x[2],x[3]),a.drawElements(4,c.outlineElementCount,
5125,12*c.outlineElementStart),a.bindVAO()}}};e.prototype._initialize=function(a){if(this._initialized)return!0;var b=new m("fill",["fillVS","fillFS"],[],n,a);b.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");b.addDefine("DD","DD",[!0,!1],"DD");b.addDefine("ID","ID",[!0,!0],"ID");this._fillShaderVariations=b;this._fillVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:4,normalized:!1,divisor:0}]};this._fillVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,
stride:8,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:4,stride:8,normalized:!0,divisor:0}]};a=new m("outline",["outlineVS","outlineFS"],[],n,a);a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._outlineShaderVariations=a;this._outlineVertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:8,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:8,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,
stride:8,normalized:!1,divisor:0}]};this._outlineVertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offset",count:2,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_xnormal",count:2,type:5120,offset:6,stride:12,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:8,stride:12,normalized:!0,divisor:0}]};return this._initialized=!0};e.prototype._drawFill=function(b,c,d,e,f,g,h,l,m,n,q,F){var k=g.getPaintValue("fill-pattern",
d),p=void 0!==k,u=g.hasDataDrivenOpacity?1:n*g.getPaintValue("fill-opacity",d),r=g.hasDataDrivenColor?[1,1,1,1]:g.getPaintValue("fill-color",d);n*=u*r[3];this._color[0]=n*r[0];this._color[1]=n*r[1];this._color[2]=n*r[2];this._color[3]=n;r=g.hasDataDrivenFill;u=!1;!p&&(r?0:1===n)&&(u=!0);if(!p||0!==e)if(!u||1!==e)if(p||u||0!==e)if(e=this._getFillVAO(b,f,r))b.bindVAO(e),e=this._fillShaderVariations.getProgram([p,r,q],void 0,void 0,r?this._fillAttributeLocationsDD:this._fillAttributeLocations),b.bindProgram(e),
p&&(k=h.getMosaicItemPosition(k,!0))&&(d=f.coordRange/512/Math.pow(2,Math.round(d)-f.key.level)/m,a.identity(this._patternMatrix),m=1/(k.size[1]*d),this._patternMatrix[0]=1/(k.size[0]*d),this._patternMatrix[4]=m,h.bind(b,9729,k.page,1),e.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix),e.setUniform2f("u_pattern_tl",k.tl[0],k.tl[1]),e.setUniform2f("u_pattern_br",k.br[0],k.br[1]),e.setUniform1i("u_texture",1)),e.setUniformMatrix4fv("u_transformMatrix",l),e.setUniform2fv("u_normalized_origin",
f.tileTransform.displayCoord),e.setUniform1f("u_depth",g.z+t),e.setUniform4fv("u_color",this._color),q&&e.setUniform4f("u_id",F[0],F[1],F[2],F[3]),b.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart),b.bindVAO()};e.prototype._getFillVAO=function(a,b,c){if(c){if(b.fillDDVertexArrayObject)return b.fillDDVertexArrayObject;c=b.fillDDVertexBuffer;var d=b.fillIndexBuffer;if(!c||!d)return null;b.fillDDVertexArrayObject=new h(a,this._fillAttributeLocationsDD,this._fillVertexAttributesDD,
{geometry:c},d);return b.fillDDVertexArrayObject}if(b.fillVertexArrayObject)return b.fillVertexArrayObject;c=b.fillVertexBuffer;d=b.fillIndexBuffer;if(!c||!d)return null;b.fillVertexArrayObject=new h(a,this._fillAttributeLocations,this._fillVertexAttributes,{geometry:c},d);return b.fillVertexArrayObject};e.prototype._getOutlineVAO=function(a,b,c){if(c){if(b.outlineDDVertexArrayObject)return b.outlineDDVertexArrayObject;c=b.outlineDDVertexBuffer;var d=b.outlineIndexBuffer;if(!c||!d)return null;b.outlineDDVertexArrayObject=
new h(a,this._outlineAttributeLocationsDD,this._outlineVertexAttributesDD,{geometry:c},d);return b.outlineDDVertexArrayObject}if(b.outlineVertexArrayObject)return b.outlineVertexArrayObject;c=b.outlineVertexBuffer;d=b.outlineIndexBuffer;if(!c||!d)return null;b.outlineVertexArrayObject=new h(a,this._outlineAttributeLocations,this._outlineVertexAttributes,{geometry:c},d);return b.outlineVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/LineRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec2 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),
function(q,e,a,b,c,d,f,g,n,m,h){return function(){function e(){this._attributeLocations={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2};this._attributeLocationsDD={a_pos:0,a_offsetAndNormal:1,a_accumulatedDistance:2,a_color:3,a_width:4};this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=c.create();this._color=d.create();this._dashArray=b.create()}e.prototype.dispose=function(){};e.prototype.render=function(b,c,d,e,h,m,n,t,q,D,w){if(0!==c.triangleElementCount){this._initialized||
this._initialize(b);var k=m.tileTransform.transform,l=m.coordRange/512,p=n.getPaintValue("line-translate",d);if(0!==p[0]||0!==p[1]){a.copy(this._viewProjMat,m.tileTransform.transform);var k=p[0],p=p[1],u=0,r=0,r=(1<<m.key.level)/Math.pow(2,d)*l;h=h.rotation;if(1===n.getPaintValue("line-translate-anchor",d)){u=-f.C_DEG_TO_RAD*h;h=Math.sin(u);var x=Math.cos(u),u=r*(k*x-p*h),r=r*(k*h+p*x)}else u=r*k,r*=p;this._offsetVector[0]=u;this._offsetVector[1]=r;this._offsetVector[2]=0;a.translate(this._viewProjMat,
this._viewProjMat,this._offsetVector);k=this._viewProjMat}p=n.getPaintValue("line-pattern",d);r=void 0!==p;D=1/D;h=n.getPaintValue("line-blur",d);var x=n.hasDataDrivenColor?[1,1,1,1]:n.getPaintValue("line-color",d),y=n.hasDataDrivenOpacity?1:n.getPaintValue("line-opacity",d),u=n.hasDataDrivenWidth?1:n.getPaintValue("line-width",d);w*=y*x[3];this._color[0]=w*x[0];this._color[1]=w*x[1];this._color[2]=w*x[2];this._color[3]=w;w=n.hasDataDrivenLine;e=3===e;var v;e&&(v=g.int32To4Bytes(c.layerID));if(x=
this._getLineVAO(b,m,w)){b.bindVAO(x);w=this._shaderVariations.getProgram([r,w,e],void 0,void 0,w?this._attributeLocationsDD:this._attributeLocations);b.bindProgram(w);w.setUniformMatrix4fv("u_transformMatrix",k);w.setUniformMatrix4fv("u_extrudeMatrix",q);w.setUniform2fv("u_normalized_origin",m.tileTransform.displayCoord);w.setUniform1f("u_depth",n.z);w.setUniform1f("u_blur",h);w.setUniform1f("u_antialiasing",D);w.setUniform4fv("u_color",this._color);w.setUniform1f("u_width",u);e&&w.setUniform4f("u_id",
v[0],v[1],v[2],v[3]);if(r){if(d=t.getMosaicItemPosition(p,!0))t.bind(b,9729,d.page,1),w.setUniform2f("u_pattern_tl",d.tl[0],d.br[1]),w.setUniform2f("u_pattern_br",d.br[0],d.tl[1]),w.setUniform2f("u_spriteSize",l*d.size[0],d.size[1]),w.setUniform1i("u_texture",1)}else t=n.getPaintValue("line-dasharray",d),2>t.length&&(t=[1,-1]),this._dashArray[0]=l*t[0],this._dashArray[1]=l*t[1],w.setUniform2fv("u_dasharray",this._dashArray);b.drawElements(4,c.triangleElementCount,5125,12*c.triangleElementStart);b.bindVAO()}}};
e.prototype._initialize=function(a){if(this._initialized)return!0;a=new m("line",["lineVS","lineFS"],[],n,a);a.addDefine("PATTERN","PATTERN",[!0,!0],"PATTERN");a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:12,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:12,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5123,
offset:8,stride:12,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:20,normalized:!1,divisor:0},{name:"a_offsetAndNormal",count:4,type:5120,offset:4,stride:20,normalized:!1,divisor:0},{name:"a_accumulatedDistance",count:2,type:5122,offset:8,stride:20,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:12,stride:20,normalized:!0,divisor:0},{name:"a_width",count:1,type:5126,offset:16,stride:20,normalized:!1,divisor:0}]};return this._initialized=
!0};e.prototype._getLineVAO=function(a,b,c){if(c){if(b.lineDDVertexArrayObject)return b.lineDDVertexArrayObject;c=b.lineDDVertexBuffer;var d=b.lineIndexBuffer;if(!c||!d)return null;b.lineDDVertexArrayObject=new h(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.lineDDVertexArrayObject}if(b.lineVertexArrayObject)return b.lineVertexArrayObject;c=b.lineVertexBuffer;d=b.lineIndexBuffer;if(!c||!d)return null;b.lineVertexArrayObject=new h(a,this._attributeLocations,this._vertexAttributes,
{geometry:c},d);return b.lineVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/SymbolRenderer":function(){define(["require","exports","./IconRenderer","./SDFRenderer"],function(q,e,a,b){return function(){function c(){this._iconRenderer=new a;this._sdfRenderer=new b}c.prototype.dispose=function(){this._iconRenderer&&(this._iconRenderer.dispose(),this._iconRenderer=null);this._sdfRenderer&&(this._sdfRenderer.dispose(),this._sdfRenderer=null)};c.prototype.render=function(a,b,c,e,m,
h,t,l,k,p,u,r,q,x){b.hasData()&&(0<b.markerPerPageElementsMap.size&&this._iconRenderer.render(a,b,c,e,m,h,t,l,k,u,r,x),0<b.glyphPerPageElementsMap.size&&this._sdfRenderer.render(a,b,c,e,m,h,t,l,p,u,r,q,x))};return c}()})},"esri/views/vectorTiles/renderers/IconRenderer":function(){define("require exports ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),
function(q,e,a,b,c,d,f,g,n,m){return function(){function e(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3};this._attributeLocationsDD={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5};this._spritesTextureSize=new Float32Array(2);this._initialized=!1;this._viewProjMat=a.create();this._offsetVector=b.create();this._extrudeMat=a.create();this._color=c.create()}e.prototype.dispose=function(){};e.prototype.render=function(b,c,e,g,h,m,n,q,z,y,D,w){var k=this;
this._initialized||this._initialize(b);var l=q.hasDataDrivenIconSize?1:q.getLayoutValue("icon-size",e),p=q.hasDataDrivenIconColor?[1,1,1,1]:q.getPaintValue("icon-color",e),t=q.hasDataDrivenIconOpacity?1:q.getPaintValue("icon-opacity",e);w*=p[3]*t;this._color[0]=w*p[0];this._color[1]=w*p[1];this._color[2]=w*p[2];this._color[3]=w;p=q.getLayoutValue("icon-rotation-alignment",e);2===p&&(p=1===q.getLayoutValue("symbol-placement",e)?0:1);var r=0===p;w=c.isSDF;t=q.hasDataDrivenIcon;g=3===g;var p=d.degToByte(h),
u=n.tileTransform.transform,x=q.getPaintValue("icon-translate",e);if(0!==x[0]||0!==x[1]){a.copy(this._viewProjMat,n.tileTransform.transform);var u=x[0],x=x[1],v=0,G=0,G=(1<<n.key.level)/Math.pow(2,e)*(n.coordRange/512);if(1===q.getPaintValue("icon-translate-anchor",e)){v=-d.C_DEG_TO_RAD*h;h=Math.sin(v);var M=Math.cos(v),v=G*(u*M-x*h),G=G*(u*h+x*M)}else v=G*u,G*=x;this._offsetVector[0]=v;this._offsetVector[1]=G;this._offsetVector[2]=0;a.translate(this._viewProjMat,this._viewProjMat,this._offsetVector);
u=this._viewProjMat}r?a.copy(this._extrudeMat,y):a.copy(this._extrudeMat,D);if(y=this._getIconVAO(b,n,t)){b.bindVAO(y);var A=this._shaderVariations.getProgram([w,t,g],void 0,void 0,t?this._attributeLocationsDD:this._attributeLocations);b.bindProgram(A);w&&(y=q.getPaintValue("icon-halo-color",e),D=q.getPaintValue("icon-halo-width",e),A.setUniform4f("u_outlineColor",y[0],y[1],y[2],y[3]),A.setUniform1f("u_outlineSize",D));A.setUniformMatrix4fv("u_transformMatrix",u);A.setUniformMatrix4fv("u_extrudeMatrix",
this._extrudeMat);A.setUniform2fv("u_normalized_origin",n.tileTransform.displayCoord);A.setUniform1f("u_depth",q.z);A.setUniform1f("u_mapRotation",p);A.setUniform1f("u_keepUpright",0);A.setUniform1f("u_level",10*e);A.setUniform1f("u_fadeSpeed",10*m.fadeSpeed);A.setUniform1f("u_minfadeLevel",10*m.minfadeLevel);A.setUniform1f("u_maxfadeLevel",10*m.maxfadeLevel);A.setUniform1f("u_fadeChange",10*(e+m.fadeChange));A.setUniform1i("u_texture",1);A.setUniform1f("u_size",l);A.setUniform4fv("u_color",this._color);
g&&(e=f.int32To4Bytes(c.layerID),A.setUniform4f("u_id",e[0],e[1],e[2],e[3]));c.markerPerPageElementsMap.forEach(function(a,c){k._spritesTextureSize[0]=z.getWidth(c)/4;k._spritesTextureSize[1]=z.getHeight(c)/4;A.setUniform2fv("u_mosaicSize",k._spritesTextureSize);z.bind(b,9729,c,1);b.drawElements(4,a[1],5125,12*a[0])});b.bindVAO()}};e.prototype._initialize=function(a){if(this._initialized)return!0;a=new n("icon",["iconVS","iconFS"],[],g,a);a.addDefine("SDF","SDF",[!0,!0],"SDF");a.addDefine("DD","DD",
[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,
stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getIconVAO=function(a,
b,c){if(c){if(b.iconDDVertexArrayObject)return b.iconDDVertexArrayObject;c=b.iconDDVertexBuffer;var d=b.iconIndexBuffer;if(!c||!d)return null;b.iconDDVertexArrayObject=new m(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.iconDDVertexArrayObject}if(b.iconVertexArrayObject)return b.iconVertexArrayObject;c=b.iconVertexBuffer;d=b.iconIndexBuffer;if(!c||!d)return null;b.iconVertexArrayObject=new m(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.iconVertexArrayObject};
return e}()})},"esri/views/vectorTiles/renderers/SDFRenderer":function(){define("require exports dojo/has ../../../core/libs/gl-matrix/mat4 ../../../core/libs/gl-matrix/vec3 ../../../core/libs/gl-matrix/vec4 ../GeometryUtils ./rendererUtils ./vtShaderSnippets ../../webgl/ShaderVariations ../../webgl/VertexArrayObject".split(" "),function(q,e,a,b,c,d,f,g,n,m,h){var t=1/65536;return function(){function e(){this._attributeLocations={a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3};this._attributeLocationsDD=
{a_pos:0,a_vertexOffset:1,a_tex:2,a_levelInfo:3,a_color:4,a_size:5};this._initialized=!1;this._viewProjMat=b.create();this._offsetVector=c.create();this._extrudeMat=b.create();this._haloColor=d.create();this._sdfColor=d.create();this._scaleVec=c.create()}e.prototype.dispose=function(){};e.prototype.render=function(c,d,e,h,m,l,n,q,D,w,B,F,E){var k=this;if(!a("esri-vector-tiles-avoid-text")){this._initialized||this._initialize(c);var p=f.degToByte(m),r=q.getLayoutValue("text-rotation-alignment",e);
2===r&&(r=1===q.getLayoutValue("symbol-placement",e)?0:1);var u=0===r,r=q.getLayoutValue("text-keep-upright",e)&&u;h=3===h;F=.8*3/F;var x=q.hasDataDrivenTextSize?1:q.getLayoutValue("text-size",e),v=q.hasDataDrivenTextColor?[1,1,1,1]:q.getPaintValue("text-color",e),y=q.hasDataDrivenTextOpacity?1:q.getPaintValue("text-opacity",e),A=v[3]*y*E;this._sdfColor[0]=A*v[0];this._sdfColor[1]=A*v[1];this._sdfColor[2]=A*v[2];this._sdfColor[3]=A;this._glyphTextureSize||(this._glyphTextureSize=new Float32Array([D.width/
4,D.height/4]));v=n.tileTransform.transform;A=q.getPaintValue("text-translate",e);if(0!==A[0]||0!==A[1]){b.copy(this._viewProjMat,n.tileTransform.transform);var v=A[0],A=A[1],z=0,H=0,H=(1<<n.key.level)/Math.pow(2,e)*(n.coordRange/512);if(1===q.getPaintValue("text-translate-anchor",e)){z=-f.C_DEG_TO_RAD*m;m=Math.sin(z);var N=Math.cos(z),z=H*(v*N-A*m),H=H*(v*m+A*N)}else z=H*v,H*=A;this._offsetVector[0]=z;this._offsetVector[1]=H;this._offsetVector[2]=0;b.translate(this._viewProjMat,this._viewProjMat,
this._offsetVector);v=this._viewProjMat}u?b.copy(this._extrudeMat,w):b.copy(this._extrudeMat,B);this._scaleVec[0]=1/24;this._scaleVec[1]=1/24;this._scaleVec[2]=1;b.scale(this._extrudeMat,this._extrudeMat,this._scaleVec);w=q.hasDataDrivenText;if(B=this._getSDFVAO(c,n,w)){c.bindVAO(B);var C=this._shaderVariations.getProgram([w,h],void 0,void 0,w?this._attributeLocationsDD:this._attributeLocations);c.bindProgram(C);C.setUniformMatrix4fv("u_transformMatrix",v);C.setUniformMatrix4fv("u_extrudeMatrix",
this._extrudeMat);C.setUniform2fv("u_normalized_origin",n.tileTransform.displayCoord);C.setUniform1f("u_depth",q.z+t);C.setUniform2fv("u_mosaicSize",this._glyphTextureSize);C.setUniform1f("u_mapRotation",p);C.setUniform1f("u_keepUpright",r?1:0);C.setUniform1f("u_level",10*e);C.setUniform1f("u_fadeSpeed",10*l.fadeSpeed);C.setUniform1f("u_minfadeLevel",10*l.minfadeLevel);C.setUniform1f("u_maxfadeLevel",10*l.maxfadeLevel);C.setUniform1f("u_fadeChange",10*(e+l.fadeChange));C.setUniform1i("u_texture",
0);C.setUniform1f("u_size",x);C.setUniform1f("u_antialiasingWidth",F);h&&(l=g.int32To4Bytes(d.layerID),C.setUniform4f("u_id",l[0],l[1],l[2],l[3]));d.glyphPerPageElementsMap.forEach(function(a,b){D.bind(c,9729,b,0);var d=q.getPaintValue("text-halo-color",e);b=q.getPaintValue("text-halo-width",e);if(0<d[3]&&0<b){var f=d[3]*y*E;k._haloColor[0]=f*d[0];k._haloColor[1]=f*d[1];k._haloColor[2]=f*d[2];k._haloColor[3]=f;d=3*q.getPaintValue("text-halo-blur",e);b*=3;C.setUniform4fv("u_color",k._haloColor);C.setUniform1f("u_halo",
1);C.setUniform1f("u_edgeDistance",b);C.setUniform1f("u_edgeBlur",d);c.drawElements(4,a[1],5125,12*a[0])}0<k._sdfColor[3]&&(C.setUniform4fv("u_color",k._sdfColor),C.setUniform1f("u_halo",0),C.setUniform1f("u_edgeDistance",0),C.setUniform1f("u_edgeBlur",0),c.drawElements(4,a[1],5125,12*a[0]))});c.bindVAO()}}};e.prototype._initialize=function(a){if(this._initialized)return!0;a=new m("text",["textVS","textFS"],[],n,a);a.addDefine("DD","DD",[!0,!1],"DD");a.addDefine("ID","ID",[!0,!0],"ID");this._shaderVariations=
a;this._vertexAttributes={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:16,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,type:5122,offset:4,stride:16,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:16,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:16,normalized:!1,divisor:0}]};this._vertexAttributesDD={geometry:[{name:"a_pos",count:2,type:5122,offset:0,stride:24,normalized:!1,divisor:0},{name:"a_vertexOffset",count:2,
type:5122,offset:4,stride:24,normalized:!1,divisor:0},{name:"a_tex",count:4,type:5121,offset:8,stride:24,normalized:!1,divisor:0},{name:"a_levelInfo",count:4,type:5121,offset:12,stride:24,normalized:!1,divisor:0},{name:"a_color",count:4,type:5121,offset:16,stride:24,normalized:!0,divisor:0},{name:"a_size",count:1,type:5126,offset:20,stride:24,normalized:!1,divisor:0}]};return this._initialized=!0};e.prototype._getSDFVAO=function(a,b,c){if(c){if(b.textDDVertexArrayObject)return b.textDDVertexArrayObject;
c=b.textDDVertexBuffer;var d=b.textIndexBuffer;if(!c||!d)return null;b.textDDVertexArrayObject=new h(a,this._attributeLocationsDD,this._vertexAttributesDD,{geometry:c},d);return b.textDDVertexArrayObject}if(b.textVertexArrayObject)return b.textVertexArrayObject;c=b.textVertexBuffer;d=b.textIndexBuffer;if(!c||!d)return null;b.textVertexArrayObject=new h(a,this._attributeLocations,this._vertexAttributes,{geometry:c},d);return b.textVertexArrayObject};return e}()})},"esri/views/vectorTiles/renderers/TileInfoRenderer":function(){define("require exports ../GeometryUtils ./vtShaderSnippets ../../webgl/BufferObject ../../webgl/Program ../../webgl/Texture ../../webgl/VertexArrayObject".split(" "),
function(q,e,a,b,c,d,f,g){return function(){function e(){this._initialized=!1;this._maxWidth=0;this._color=new Float32Array([1,0,0,1])}e.prototype.dispose=function(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null);this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null);this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null);this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),
this._tileInfoVertexArrayObject=null)};e.prototype.render=function(a,b){this._initialized||this._initialize(a);a.bindVAO(this._outlineVertexArrayObject);a.bindProgram(this._outlineProgram);this._outlineProgram.setUniformMatrix4fv("u_transformMatrix",b.tileTransform.transform);this._outlineProgram.setUniform2fv("u_normalized_origin",b.tileTransform.displayCoord);this._outlineProgram.setUniform1f("u_coord_range",b.coordRange);this._outlineProgram.setUniform1f("u_depth",0);this._outlineProgram.setUniform4fv("u_color",
this._color);a.setLineWidth(2);a.drawArrays(3,0,4);a.bindVAO();var c=this._getTexture(a,b);c&&(a.bindVAO(this._tileInfoVertexArrayObject),a.bindProgram(this._tileInfoProgram),a.bindTexture(c,0),this._tileInfoProgram.setUniformMatrix4fv("u_transformMatrix",b.tileTransform.transform),this._tileInfoProgram.setUniform2fv("u_normalized_origin",b.tileTransform.displayCoord),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform1f("u_coord_ratio",b.coordRange/512),this._tileInfoProgram.setUniform2f("u_delta",
8,8),this._tileInfoProgram.setUniform2f("u_dimensions",c.descriptor.width,c.descriptor.height),a.drawArrays(5,0,4),a.bindVAO())};e.prototype._initialize=function(a){if(this._initialized)return!0;var e={a_pos:0},f=new d(a,b.backgroundVS,b.backgroundFS,e),l=new d(a,b.tileInfoVS,b.tileInfoFS,e),k={geometry:[{name:"a_pos",count:2,type:5120,offset:0,stride:2,normalized:!1,divisor:0}]},m=new Int8Array([0,0,1,0,1,1,0,1]),m=c.createVertex(a,35044,m),m=new g(a,e,k,{geometry:m}),n=new Int8Array([0,0,1,0,0,
1,1,1]),n=c.createVertex(a,35044,n);a=new g(a,e,k,{geometry:n});this._outlineProgram=f;this._tileInfoProgram=l;this._outlineVertexArrayObject=m;this._tileInfoVertexArrayObject=a;return this._initialized=!0};e.prototype._getTexture=function(b,c){if(c.texture)return c.texture;this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","canvas2d"),this._canvas.setAttribute("width","256"),this._canvas.setAttribute("height","32"),this._canvas.setAttribute("style","display:none"));
var d=c.key.id,e=this._canvas.getContext("2d");e.font="24px sans-serif";e.textAlign="left";e.textBaseline="middle";var g=e.measureText(d),g=Math.pow(2,Math.ceil(a.log2(g.width+2)));g>this._maxWidth&&(this._maxWidth=g);e.clearRect(0,0,this._maxWidth,32);e.fillStyle=c.key.level>c.refKey.level?"red":"blue";e.fillText(d,0,16);c.texture=new f(b,{target:3553,pixelFormat:6408,dataType:5121,samplingMode:9728},this._canvas);return c.texture};return e}()})},"url:esri/views/vectorTiles/renderers/shaders/backgroundShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n\x3csnippets\x3e\n  \x3csnippet name\x3d"backgroundVS"\x3e\n    \x3c![CDATA[\n    precision mediump float;\n\n    attribute vec2 a_pos;\n\n  #ifdef ID\n    uniform mediump vec4 u_id;\n    varying mediump vec4 v_id;\n  #endif // ID\n\n    uniform highp mat4 u_transformMatrix;\n    uniform mediump vec2 u_normalized_origin;\n    uniform mediump float u_coord_range;\n    uniform mediump float u_depth;\n\n  #ifdef PATTERN\n    uniform mediump mat3 u_pattern_matrix; // can we use medium precision?\n    varying mediump vec2 v_tileTextureCoord;\n  #endif // PATTERN\n\n    void main() {\n      gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(u_coord_range * a_pos, 0.0, 1.0);\n\n  #ifdef PATTERN\n      // calculate the texture coordinates of the current vertex. It will of course get interpolated.\n      // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\n      v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\n  #endif // PATTERN\n\n  #ifdef ID\n      v_id \x3d u_id / 255.0;\n  #endif // ID\n    }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"backgroundFS"\x3e\n    \x3c![CDATA[\n  #ifdef PATTERN\n    uniform lowp float u_opacity;\n    uniform mediump vec2 u_pattern_tl;\n    uniform mediump vec2 u_pattern_br;\n    uniform sampler2D u_texture;\n\n    varying mediump vec2 v_tileTextureCoord;\n  #else\n    uniform lowp vec4 u_color;\n  #endif // PATTERN\n\n  #ifdef ID\n    varying mediump vec4 v_id;\n  #endif // ID\n\n    void main() {\n  #ifdef PATTERN\n      // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\n      mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\n\n      // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\n      // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\n      // we need to only sample from area that has our sprite in the mosaic.\n      mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\n\n      // sample the sprite mosaic\n      lowp vec4 color \x3d texture2D(u_texture, samplePos);\n      gl_FragColor \x3d u_opacity * color;\n  #else\n      gl_FragColor \x3d u_color;\n  #endif // PATTERN\n\n  #ifdef ID\n      if (gl_FragColor.a \x3c 1.0 / 255.0) {\n        discard;\n      }\n      gl_FragColor \x3d v_id;\n  #endif // ID\n    }\n    ]]\x3e\n  \x3c/snippet\x3e\n\x3c/snippets\x3e\n',
"url:esri/views/vectorTiles/renderers/shaders/circleShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n\x3csnippets\x3e\n\n  \x3csnippet name\x3d"circleVS"\x3e\n    \x3c![CDATA[\n      precision mediump float;\n\n      attribute vec2 a_pos;\n      attribute vec4 a_color;\n      attribute vec4 a_stroke_color;\n      attribute vec4 a_data;\n\n      const float sizePrecision \x3d 0.25; // 1/4\n      const float blurPrecision \x3d 0.03125; // 1/32\n\n      varying lowp vec4 v_color;\n      varying lowp vec4 v_stroke_color;\n      varying mediump float v_blur;\n      varying mediump float v_stroke_width;\n      varying mediump float v_radius;\n      varying mediump vec2 v_offset;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the opacity of the layer given by the painter\n      uniform mediump float u_radius;\n      uniform lowp vec4 u_color;\n      uniform mediump float u_blur;\n      uniform mediump float u_stroke_width;\n      uniform lowp vec4 u_stroke_color;\n\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\n\n      void main()\n      {\n        v_color \x3d a_color * u_color;\n        v_stroke_color \x3d a_stroke_color * u_stroke_color;\n        v_stroke_width \x3d a_data[1] * sizePrecision * u_stroke_width;\n        v_radius \x3d a_data[2] * u_radius;\n        v_blur \x3d max(a_data[0] * blurPrecision + u_blur, u_antialiasingWidth / (v_radius + v_stroke_width));\n\n        mediump vec2 offset \x3d vec2(mod(a_pos, 2.0) * 2.0 - 1.0);\n        v_offset \x3d offset;\n\n      #ifdef ID\n        v_id \x3d u_id / 255.0;\n      #endif // ID\n\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos * 0.5, 0.0, 1.0) + u_extrudeMatrix * (v_radius + v_stroke_width) * vec4(offset, 0.0, 0.0);\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"circleFS"\x3e\n    \x3c![CDATA[\n      precision lowp float;\n\n      varying lowp vec4 v_color;\n      varying lowp vec4 v_stroke_color;\n      varying mediump float v_blur;\n      varying mediump float v_stroke_width;\n      varying mediump float v_radius;\n      varying mediump vec2 v_offset;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      void main()\n      {\n        mediump float dist \x3d length(v_offset);\n\n        mediump float alpha \x3d smoothstep(0.0, -v_blur, dist - 1.0);\n\n        lowp float color_mix_ratio \x3d v_stroke_width \x3c 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));\n\n        gl_FragColor \x3d alpha * mix(v_color, v_stroke_color, color_mix_ratio);\n\n      #ifdef ID\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor \x3d v_id;\n      #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n\x3c/snippets\x3e\n\n',
"url:esri/views/vectorTiles/renderers/shaders/fillShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n\x3csnippets\x3e\n  \x3csnippet name\x3d"fillVS"\x3e\n    \x3c![CDATA[\n      precision mediump float;\n\n      attribute vec2 a_pos;\n\n      uniform highp mat4 u_transformMatrix;\n      uniform highp vec2 u_normalized_origin;\n      uniform mediump float u_depth;\n\n    #ifdef PATTERN\n      uniform mediump mat3 u_pattern_matrix;\n      varying mediump vec2 v_tileTextureCoord;\n    #endif // PATTERN\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n    #ifdef DD\n      attribute vec4 a_color;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      varying lowp vec4 v_color;\n\n      void main()\n      {\n      #ifdef DD\n        v_color \x3d a_color * u_color;\n      #else\n        v_color \x3d u_color;\n      #endif // DD\n\n      #ifdef ID\n        v_id \x3d u_id / 255.0;\n      #endif // ID\n\n      #ifdef PATTERN\n        // calculate the texture coordinates of the current vertex. It will of course get interpolated.\n        // The pattern matrix is a 3x3 scale matrix which \'tiles\' the texture inside the tile, translating from tile coordinates\n        // (-4k to 8k -1) to texture coordinates.\n        v_tileTextureCoord \x3d (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\n      #endif // PATTERN\n\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0, 1.0);\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"fillFS"\x3e\n    \x3c![CDATA[\n      precision lowp float;\n\n    #ifdef PATTERN\n      uniform mediump vec2 u_pattern_tl;\n      uniform mediump vec2 u_pattern_br;\n      uniform lowp sampler2D u_texture;\n      varying mediump vec2 v_tileTextureCoord;\n    #endif // PATTERN\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      varying lowp vec4 v_color;\n\n      vec4 mixColors(vec4 color1, vec4 color2) {\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\n        float compositeAlpha \x3d color2.a + color1.a * (1.0 - color2.a);\n        vec3 compositeColor \x3d color2.rgb + color1.rgb * (1.0 - color2.a);\n\n        return vec4(compositeColor, compositeAlpha);\n      }\n      void main()\n      {\n      #ifdef PATTERN\n        // normalize the calculated texture coordinate such that it fits in the range of 0 to 1.\n        mediump vec2 normalizedTextureCoord \x3d mod(v_tileTextureCoord, 1.0);\n\n        // interpolate the image coordinate between the top-left and the bottom right to get the actual position to sample.\n        // after normalizing the position, we get a value ranging between 0 and 1 which refers to the entire texture, however\n        // we need to only sample from area that has our sprite in the mosaic.\n        mediump vec2 samplePos \x3d mix(u_pattern_tl, u_pattern_br, normalizedTextureCoord);\n\n        // sample the sprite mosaic\n        lowp vec4 color \x3d texture2D(u_texture, samplePos);\n        gl_FragColor \x3d v_color[3] * color;\n      #else\n        gl_FragColor \x3d v_color;\n      #endif // PATTERN\n\n      #ifdef ID\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor \x3d v_id;\n      #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\x3c/snippets\x3e\n',
"url:esri/views/vectorTiles/renderers/shaders/iconShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n\x3csnippets\x3e\n\n  \x3csnippet name\x3d"rgba2float"\x3e\x3c![CDATA[\n    // TODO consider moving this snippet into a util.xml file\n    const vec4 rgba2float_factors \x3d vec4(\n        255.0 / (256.0),\n        255.0 / (256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n      );\n\n    float rgba2float(vec4 rgba) {\n      // Convert components from 0-\x3e1 back to 0-\x3e255 and then\n      // add the components together with their corresponding\n      // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)\n      return dot(rgba, rgba2float_factors);\n    }\n  ]]\x3e\x3c/snippet\x3e\n\n  \x3csnippet name\x3d"iconVS"\x3e\n    \x3c![CDATA[\n      attribute vec2 a_pos;\n      attribute vec2 a_vertexOffset;\n      attribute vec4 a_tex;\n      attribute vec4 a_levelInfo;\n\n    #ifdef DD\n      attribute vec4 a_color;\n      attribute mediump float a_size;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      uniform mediump float u_size;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      varying lowp vec4 v_color;\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      // the size of the mosaic given in pixels\n      uniform vec2 u_mosaicSize;\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the map\'s rotation from the north\n      uniform mediump float u_mapRotation;\n      uniform mediump float u_level;\n\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\n      uniform lowp float u_keepUpright;\n\n      // the rate of the change in the opacity (fade) of the icons\n      uniform mediump float u_fadeSpeed;\n\n      // the low level we transition (to/from)\n      uniform mediump float u_minfadeLevel;\n\n      // the high level we transition (to/from)\n      uniform mediump float u_maxfadeLevel;\n\n      // the amount of fade given teh current time past the last recorded level\n      uniform mediump float u_fadeChange;\n\n      // the opacity of the layer given by the painter\n      uniform mediump float u_opacity;\n\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\n      varying mediump vec2 v_tex;\n\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\n      // opacity of the layer given by the painter\n      varying lowp float v_transparency;\n\n      varying mediump vec2 v_size;\n\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precision we multiply the values\n      // by 8 and then at the shader devide by the same number\n      const float C_OFFSET_PRECISION \x3d 1.0 / 8.0;\n\n      const float C_256_TO_RAD \x3d 3.14159265359 / 128.0;\n      const float C_DEG_TO_RAD \x3d 3.14159265359 / 180.0;\n      const float tileCoordRatio \x3d 1.0 / 8.0;\n\n      void main()\n      {\n        mediump float a_labelMinLevel \x3d a_levelInfo[0];\n        mediump float a_angle         \x3d a_levelInfo[1];\n        mediump float a_minLevel      \x3d a_levelInfo[2];\n        mediump float a_maxLevel      \x3d a_levelInfo[3];\n\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\n        mediump float delta_z \x3d 0.0;\n\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\n        mediump float rotated \x3d mod(a_angle + u_mapRotation, 256.0);\n        delta_z +\x3d (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z +\x3d (flip \x3e 0) \x26\x26 (64 \x3c\x3d rotated) \x26\x26 (rotated \x3c 192)\n\n        // u_level is the current service level adjusted for the change in font size\n        delta_z +\x3d 1.0 - step(a_minLevel, u_level); // Test if (level \x3c minLevel)\n        delta_z +\x3d step(a_maxLevel, u_level); // Test if (maxLevel \x3c\x3d level)\n\n        // calculate the alpha given the change in the fade and the fade-speed\n        lowp float alpha \x3d clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\n\n        // if the speed is positive we are zooming in and therefore we need to \'fade-in\'. Else we need to \'fade-out\'\n        v_transparency \x3d (u_fadeSpeed \x3e\x3d 0.0 ? alpha : 1.0 - alpha);\n\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\n        if (u_maxfadeLevel \x3c a_labelMinLevel)\n        {\n          v_transparency \x3d 0.0;\n        }\n        if (u_minfadeLevel \x3e\x3d a_labelMinLevel)\n        {\n          v_transparency \x3d 1.0;\n        }\n\n        // if label had been faded out, clip it\n        delta_z +\x3d step(v_transparency, 0.0);\n\n        vec2 offset \x3d C_OFFSET_PRECISION * a_vertexOffset;\n\n        v_size \x3d abs(offset);\n\n      #ifdef SDF\n        offset \x3d (120.0 / 86.0) * offset;\n      #endif // SDF\n\n      #ifdef DD\n        mediump float icon_size \x3d a_size * u_size;\n      #else\n        mediump float icon_size \x3d u_size;\n      #endif // DD\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * icon_size * vec4(offset, delta_z, 0.0);\n\n      #ifdef DD\n        v_color \x3d a_color * u_color;\n      #else\n        v_color \x3d u_color;\n      #endif // DD\n\n      #ifdef ID\n        v_id \x3d u_id / 255.0;\n      #endif // ID\n\n        v_tex \x3d a_tex.xy / u_mosaicSize;\n        v_transparency *\x3d v_color.w;\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"iconFS"\x3e\n    \x3c![CDATA[\n      precision mediump float;\n\n      uniform lowp sampler2D u_texture; // SDF texture\n    #ifdef SDF\n      uniform lowp vec4 u_color; // a color to override the one of the vertex\n      uniform lowp vec4 u_outlineColor;\n      uniform mediump float u_outlineSize;\n    #endif // SDF\n\n      varying mediump vec2 v_tex;\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\n      // opacity of the layer given by the painter\n      varying lowp float v_transparency;\n\n      varying mediump vec2 v_size;\n\n      varying lowp vec4 v_color;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      // we need the conversion function from RGBA to float\n      $rgba2float\n\n      vec4 mixColors(vec4 color1, vec4 color2) {\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Alpha_blending)\n        // we use pre-multiplied colors hence the need for this kind of mixing. At lease we save ourselves an extra division...\n        float compositeAlpha \x3d color2.a + color1.a * (1.0 - color2.a);\n        vec3 compositeColor \x3d color2.rgb + color1.rgb * (1.0 - color2.a);\n\n        return vec4(compositeColor, compositeAlpha);\n      }\n\n      void main()\n      {\n      #ifdef SDF\n        lowp vec4 fillPixelColor \x3d v_color;\n\n        // calculate the distance from the edge [-0.5, 0.5]\n        float d \x3d rgba2float(texture2D(u_texture, v_tex)) - 0.5;\n\n        // the soft edge ratio is about 1.5 pixels allocated for the soft edge.\n        // 1 / 86 represents a single pixel given the size of the SDF is 128 and we add 4 pixels margins to deal with\n        // other non SDF types.\n        // The rasterized geometry takes only 86 pixels because of the extra 16 pixels margin for the outline.\n        const float sofetEdgeRatio \x3d 0.248062016; // \x3d\x3d\x3e (32.0 / 86.0) / 1.5;\n        float size \x3d max(v_size.x, v_size.y);\n        float dist \x3d d * sofetEdgeRatio * size;\n\n        // set the fragment\'s transparency according to the distance from the edge\n        fillPixelColor *\x3d clamp(0.5 - dist, 0.0, 1.0);\n\n        // count for the outline\n        // therefore tint the entire icon area.\n        if (u_outlineSize \x3e 0.25) {\n          lowp vec4 outlinePixelColor \x3d u_outlineColor;\n          // the outline limit ratio is derived from the 16 pixels allocated for the outline and the fact that 1/86 represents\n          // a single pixel.\n          const float outlineLimitRatio \x3d (16.0 / 86.0);\n          float clampedOutlineSize \x3d sofetEdgeRatio * min(u_outlineSize, outlineLimitRatio * max(v_size.x, v_size.y));\n\n          outlinePixelColor *\x3d clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\n\n          // finally combine the outline and the fill colors\n          gl_FragColor \x3d v_transparency * mixColors(fillPixelColor, outlinePixelColor);\n        }\n        else {\n          gl_FragColor \x3d v_transparency * fillPixelColor;\n        }\n      #else // not an SDF\n        lowp vec4 texColor \x3d texture2D(u_texture, v_tex);\n        gl_FragColor \x3d v_transparency * texColor;\n      #endif // SDF\n\n      #ifdef ID\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor \x3d v_id;\n      #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n\x3c/snippets\x3e\n\n',
"url:esri/views/vectorTiles/renderers/shaders/lineShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n\x3csnippets\x3e\n  \x3csnippet name\x3d"lineVS"\x3e\n    \x3c![CDATA[\n      /* The implementation of the renderer is based on the article and implementation of MB described here:\n      * https://www.mapbox.com/blog/drawing-antialiased-lines/\n      */\n\n      attribute vec2 a_pos;\n      attribute vec4 a_offsetAndNormal;\n      attribute vec2 a_accumulatedDistance;\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      uniform mediump float u_blur;\n      uniform mediump float u_antialiasing; // the feather distance at which the line edge fades out\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the interpolated normal to the line. the information is packed into the two LSBs of the vertex coordinate\n      varying mediump vec2 v_normal;\n\n      // the accumulated distance along the line. We need this information in order to render the dashes.\n      varying highp float v_accumulatedDistance;\n\n      const float scale \x3d 1.0 / 31.0;\n\n    #ifdef DD\n      attribute vec4 a_color;\n      attribute mediump float a_width;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      uniform mediump float u_width;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      varying lowp vec4 v_color;\n      varying mediump float v_lineHalfWidth; // the inset and outset of the line\n      varying mediump float v_blur;\n\n    #ifndef PATTERN\n      uniform mediump vec2 u_dasharray;\n      varying mediump vec2 v_dasharray;\n    #endif\n\n      void main()\n      {\n        v_normal \x3d a_offsetAndNormal.zw * scale;\n\n      #ifdef DD\n        v_lineHalfWidth \x3d a_width * u_width;\n      #else\n        v_lineHalfWidth \x3d u_width;\n      #endif // DD\n\n        v_lineHalfWidth +\x3d u_antialiasing;\n        v_lineHalfWidth *\x3d 0.5;\n\n      #ifndef PATTERN\n      #ifdef DD\n        v_dasharray \x3d u_dasharray * a_width;\n      #else\n        v_dasharray \x3d u_dasharray * u_width;\n      #endif // DD\n      #endif\n\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\n        mediump vec2 dist \x3d v_lineHalfWidth * a_offsetAndNormal.xy * scale;\n\n        // transform the vertex\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * vec4(dist, 0.0, 0.0);\n\n        // the accumulated distance will be used to calculate the dashes (or the no-data...)\n        v_accumulatedDistance \x3d a_accumulatedDistance.x;\n\n        v_blur \x3d u_blur + u_antialiasing;\n\n        #ifdef DD\n          v_color \x3d a_color * u_color;\n        #else\n          v_color \x3d u_color;\n        #endif // DD\n\n        #ifdef ID\n          v_id \x3d u_id / 255.0;\n        #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"lineFS"\x3e\n    \x3c![CDATA[\n      varying mediump vec2 v_normal;\n      varying highp float v_accumulatedDistance;\n\n      varying mediump float v_lineHalfWidth;\n      varying lowp vec4 v_color;\n\n      varying mediump float v_blur;\n\n    #ifdef PATTERN\n      uniform mediump vec2 u_pattern_tl;\n      uniform mediump vec2 u_pattern_br;\n      uniform mediump vec2 u_spriteSize;\n      uniform sampler2D u_texture;\n\n      // Horizontal scale is used to scale the horizontal texture coordinate v_normal.x before adding it as an offset to the\n      // accumulated distance. Most vertices will have v_normal.x \x3d\x3d 0, because the pattern must be sampled only depending on\n      // the v_accumulatedDistance value. But tessellation at caps can have vertices with v_normal.x !\x3d 0, thus allowing to\n      // "keep moving" for a few more pixel even when the line has ended or has not started yet.\n      const mediump float tileCoordRatio \x3d 8.0;\n    #else\n      varying mediump vec2 v_dasharray;\n    #endif\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      void main()\n      {\n        // dist represent the distance of the fragment from the line. 1.0 or -1.0 will be the values on the edge of the line,\n        // and any value in between will be inside the line (the sign represent the direction - right or left).\n        // since u_linewidth.s (half line width) is represented in pixels, dist is also given in pixels\n        mediump float fragDist \x3d length(v_normal) * v_lineHalfWidth;\n\n        // calculate the alpha given the difference between the line-width and the distance of the fragment from the center-line.\n        // We need to count for both sides of the line.\n        lowp float alpha \x3d clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);\n\n      #ifdef PATTERN\n        // we need to calculate the relative portion of the line texture along the line given the accumulated distance aliong the line\n        // The computed value should is anumber btween 0 and 1 which will later be used to interpolate btween the BR and TL values\n        mediump float relativeTexX \x3d mod((v_accumulatedDistance + v_normal.x * v_lineHalfWidth * tileCoordRatio) / u_spriteSize.x, 1.0);\n\n        // in order to calculate the texture coordinates perpendicular to the line (Y axis), we use the interpolated normal values\n        // which range from -1.0 to 1.0. On the line\'s centerline, the value of the interpolated normal is 0.0, however the relative\n        // texture value should be 0.5 (given that at the bottom of the line, the texture coordinate must be equal to 0.0)\n        // (TL) ---------------------------      --\x3e left edge of line. Interpolated normal is 1.0\n        //              | -\x3e line-width / 2\n        //      - - - - - - - - - - - - - -\n        //              | -\x3e line-width / 2\n        //      ---------------------------- (BR)--\x3e right edge of line. Interpolated normal is -1.0\n\n        mediump float relativeTexY \x3d 0.5 + (v_normal.y * v_lineHalfWidth / u_spriteSize.y);\n\n        // claculate the actual texture coordinates by interpolating between the TL/BR pattern coordinates\n        mediump vec2 texCoord \x3d mix(u_pattern_tl, u_pattern_br, vec2(relativeTexX, relativeTexY));\n\n        // get the color from the texture\n        lowp vec4 color \x3d texture2D(u_texture, texCoord);\n\n        // finally write the fragment value\n        gl_FragColor \x3d alpha * v_color[3] * color;\n      #else\n        // now calculate the dashes given the accumulated distance of the line:\n        // start with calculating a normalized position along the line\n        lowp float dashPos \x3d  mod(v_accumulatedDistance, v_dasharray.x + v_dasharray.y);\n\n        // calculate the contribution to the alpha of the dash part. It is provided by the shortest portion of the position along the dash.\n        // we must clamp since the value might be bigger than 1 or smaller than zero (when over a dash).\n        //   | \x3c--- pos along the dash part\n        // -------_______-------_______\n        // when the dashPos is over the \'gap\' part of the dash dasharray.x - dashPos is negative and therefore the alpha will\n        // get clamped to zero.\n        // when dasharray.x - dashPos is positive, or when dashPos is smaller than 1.0, it gives us a soft edge to each dash part.\n        // along the direction of the line.\n        lowp float dashAlpha \x3d clamp(min(dashPos, v_dasharray.x - dashPos) + 0.5, 0.0, 1.0);\n\n        // if we don\'t have a no-data part to the dash then it is a solid line\n        dashAlpha \x3d max(sign(-v_dasharray.y), dashAlpha);\n        // finally multiply the fragment\'s alpha by the calculated dash-alpha\n        alpha *\x3d dashAlpha;\n\n        // output the fragment color\n        gl_FragColor \x3d alpha * v_color;\n      #endif // PATTERN\n\n      #ifdef ID\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor \x3d v_id;\n      #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\x3c/snippets\x3e\n',
"url:esri/views/vectorTiles/renderers/shaders/outlineShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  // YF TODO: (doc)\n--\x3e\n\x3csnippets\x3e\n  \x3csnippet name\x3d"outlineVS"\x3e\n    \x3c![CDATA[\n      attribute vec2 a_pos;\n      attribute vec2 a_offset;\n      attribute vec2 a_xnormal;\n\n    #ifdef DD\n      attribute vec4 a_color;\n    #endif // DD\n      uniform lowp vec4 u_color;\n      varying lowp vec4 v_color;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      uniform highp mat4 u_transformMatrix;\n      uniform highp mat4 u_extrudeMatrix;\n      uniform highp vec2 u_normalized_origin;\n      uniform mediump float u_depth;\n      uniform mediump float u_outline_width;\n\n      varying lowp vec2 v_normal;\n\n      const float scale \x3d 1.0 / 15.0;\n\n      void main()\n      {\n      #ifdef DD\n        v_color \x3d a_color * u_color;\n      #else\n        v_color \x3d u_color;\n      #endif // DD\n\n      #ifdef ID\n        v_id \x3d u_id / 255.0;\n      #endif // ID\n\n        v_normal \x3d a_xnormal;\n\n        // calculate the relative distance from the centerline to the edge of the line. Since offset is given in integers (for the\n        // sake of using less attribute memory, we need to scale it back to the original range of ~ 0: 1)\n        mediump vec4 dist \x3d vec4(u_outline_width * a_offset * scale, 0.0, 0.0);\n\n        // Remove the texture normal bit of the position before scaling it with the\n        // model/view matrix. Add the extrusion vector *after* the model/view matrix\n        // because we\'re extruding the line in pixel space, regardless of the current\n        // tile\'s zoom level.\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * dist;\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"outlineFS"\x3e\n    \x3c![CDATA[\n      varying lowp vec4 v_color;\n      varying mediump vec2 v_normal;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      void main()\n      {\n        // Calculate the distance of the pixel from the line in pixels.\n        lowp float dist \x3d abs(v_normal.y);\n\n        lowp float alpha \x3d smoothstep(1.0, 0.0, dist);\n        gl_FragColor \x3d alpha * v_color;\n\n      #ifdef ID\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor \x3d v_id;\n      #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\x3c/snippets\x3e\n',
"url:esri/views/vectorTiles/renderers/shaders/textShaders.xml":'\x3c?xml version\x3d"1.0" encoding\x3d"UTF-8"?\x3e\n\x3c!--\n  Add your GLSL snippets to this file. You should start from\n  importing your old GLSL files. For instance, if you have a\n  file such as myShader.vs.glsl you should create a new \x3csnippet name\x3d"myShaderVS"\x3e\n  and then copy and paste the GLSL source as the content. You will then convert your\n  code to use the {@link module:esri/views/vectorTiles/renderers/vtShaderSnippets vtShaderSnippets}\n  instance to access the GLSL code, instead of importing it directly with require("dojo/text!...").\n--\x3e\n\x3csnippets\x3e\n\n  \x3csnippet name\x3d"rgba2float"\x3e\x3c![CDATA[\n    // TODO this snippet should only be in views/3d/webgl-engine/materials/internal/Util.xml\n\n    // Factors to convert rgba back to float\n    const vec4 toFloat \x3d vec4(\n        255.0 / (256.0),\n        255.0 / (256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0),\n        255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n      );\n\n    float rgba2float(vec4 rgba) {\n      // Convert components from 0-\x3e1 back to 0-\x3e255 and then\n      // add the components together with their corresponding\n      // fixed point factors, i.e. (256^1, 256^2, 256^3, 256^4)\n      return dot(rgba, toFloat);\n    }\n  ]]\x3e\x3c/snippet\x3e\n\n  \x3csnippet name\x3d"textVS"\x3e\n    \x3c![CDATA[\n      attribute vec2 a_pos;\n      attribute vec2 a_vertexOffset;\n      attribute vec4 a_tex;\n      attribute vec4 a_levelInfo;\n\n      uniform lowp vec4 u_color; // always defined as halo does not support data driven but text does\n    #ifdef DD\n      attribute vec4 a_color;\n    #endif // DD\n      varying lowp vec4 v_color;\n\n      uniform mediump float u_size;\n    #ifdef DD\n      attribute mediump float a_size;\n    #endif // DD\n      varying mediump float v_size;\n\n    #ifdef ID\n      uniform mediump vec4 u_id;\n      varying mediump vec4 v_id;\n    #endif // ID\n\n\n      // attribute bool a_visible; // --\x3e a one bit controlling the visibility of the vertex\n\n      // the relative transformation of a vertex given in tile coordinates to a relative normalized coordinate\n      // relative to the tile\'s upper left corner\n      // the extrusion vector.\n      uniform highp mat4 u_transformMatrix;\n\n      // the extrude matrix which is responsible for the \'anti-zoom\' as well as the rotation\n      uniform highp mat4 u_extrudeMatrix;\n\n      // u_normalized_origin is the tile\'s upper left corner given in normalized coordinates\n      uniform highp vec2 u_normalized_origin;\n\n      // the size of the mosaic given in pixels\n      uniform vec2 u_mosaicSize;\n\n      // the z of the layer. Given by the order of the layers in the style\n      uniform mediump float u_depth;\n\n      // the map\'s rotation from the north\n      uniform mediump float u_mapRotation;\n      uniform mediump float u_level;\n\n      // indicate whether the current set of iconst should be kept upright when the map is rotated\n      uniform lowp float u_keepUpright;\n\n      // the rate of the change in the opacity (fade) of the icons\n      uniform mediump float u_fadeSpeed;\n\n      // the low level we transition (to/from)\n      uniform mediump float u_minfadeLevel;\n\n      // the high level we transition (to/from)\n      uniform mediump float u_maxfadeLevel;\n\n      // the amount of fade given teh current time past the last recorded level\n      uniform mediump float u_fadeChange;\n\n      // the opacity of the layer given by the painter\n      uniform mediump float u_opacity;\n\n      // the interpolated texture coordinate value to be used by the fragment shader in order to sample the sprite texture\n      varying lowp vec2 v_tex;\n\n      // the calculated transparency to be applied by the fragment shader. It is incorporating both the fade as well as the\n      // opacity of the layer given by the painter\n      varying lowp float v_transparency;\n\n      // the vertex offsets are given in integers, therefore in order to maintain a reasonable precision we multiply the values\n      // by 8 and then at the shader divide by the same number\n      const float offsetPrecision \x3d 1.0 / 8.0;\n\n      // outline position and appearance\n      const mediump float edgePos \x3d 0.75; // defined by the SDF encoding\n      uniform mediump float u_edgeDistance;\n      uniform mediump float u_edgeBlur;\n      uniform mediump float u_antialiasingWidth; // antialiasing (factors in the pixel_ratio for high res devices)\n\n      varying mediump float v_edgeDistance; // will factor in the size\n      varying mediump float v_edgeWidth; // will factor in the size\n\n      uniform lowp float u_halo; // needed to avoid using the color attribute for halo\n\n      void main()\n      {\n        mediump float a_labelMinLevel \x3d a_levelInfo[0];\n        mediump float a_angle        \x3d a_levelInfo[1];\n        mediump float a_minLevel    \x3d a_levelInfo[2];\n        mediump float a_maxLevel    \x3d a_levelInfo[3];\n\n        // if the given vertex should not be visible simply clip it by adding it a value that will push it outside the clipping plane\n        mediump float delta_z \x3d 0.0;\n\n        // TODO: force clipping the vertex in case that the vertex isn\'t visible\n        //delta_z +\x3d a_visible ? 0.0 : 1.0;\n\n        // If the label rotates with the map, and if the rotated label is upside down, hide it\n        mediump float rotated \x3d mod(a_angle + u_mapRotation, 256.0);\n        delta_z +\x3d (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated)); //ie. z +\x3d (flip \x3e 0) \x26\x26 (64 \x3c\x3d rotated) \x26\x26 (rotated \x3c 192)\n\n        // u_level is the current service level adjusted for the change in font size\n        delta_z +\x3d 1.0 - step(a_minLevel, u_level); // Test if (level \x3c minLevel)\n        delta_z +\x3d step(a_maxLevel, u_level); // Test if (maxLevel \x3c\x3d level)\n\n        // calculate the alpha given the change in the fade and the fade-speed\n        lowp float alpha \x3d clamp((u_fadeChange - a_labelMinLevel) / u_fadeSpeed, 0.0, 1.0);\n\n        // if the speed is positive we are zooming in and therefore we need to \'fade-in\'. Else we need to \'fade-out\'\n        v_transparency \x3d (u_fadeSpeed \x3e\x3d 0.0 ? alpha : 1.0 - alpha);\n\n        // now deal with the min/max fade-levels. If we exceeded the level we simply snap to 0 or 1\n        if (u_maxfadeLevel \x3c a_labelMinLevel)\n        {\n          v_transparency \x3d 0.0;\n        }\n        if (u_minfadeLevel \x3e\x3d a_labelMinLevel)\n        {\n          v_transparency \x3d 1.0;\n        }\n\n        // if label has been faded out, clip it\n        delta_z +\x3d step(v_transparency, 0.0);\n\n        v_tex \x3d a_tex.xy / u_mosaicSize;\n\n      #ifdef DD\n        if (u_halo \x3e 0.5)\n        {\n          v_color \x3d u_color;\n        }\n        else\n        {\n          v_color \x3d a_color * u_color;\n          // opacity already factored in a_color\n        }\n      #else\n        v_color \x3d u_color;\n      #endif // DD\n\n      #ifdef DD\n        v_size \x3d a_size * u_size;\n      #else\n        v_size \x3d u_size;\n      #endif // DD\n\n      #ifdef ID\n        v_id \x3d u_id / 255.0;\n      #endif // ID\n\n        v_edgeDistance \x3d edgePos - u_edgeDistance / v_size;\n        v_edgeWidth \x3d (u_antialiasingWidth + u_edgeBlur) / v_size;\n\n        gl_Position \x3d vec4(u_normalized_origin, u_depth, 0.0) + u_transformMatrix * vec4(a_pos, 0.0, 1.0) + u_extrudeMatrix * v_size * vec4(offsetPrecision * a_vertexOffset, delta_z, 0.0);\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n  \x3csnippet name\x3d"textFS"\x3e\n    \x3c![CDATA[\n      uniform lowp sampler2D u_texture;\n      uniform mediump float u_edgeDistance;\n\n      varying lowp vec2 v_tex;\n      varying lowp float v_transparency;\n      varying lowp vec4 v_color;\n      varying mediump float v_edgeWidth;\n      varying mediump float v_edgeDistance;\n\n    #ifdef ID\n      varying mediump vec4 v_id;\n    #endif // ID\n\n      // this is taken from http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\n      // and https://www.mapbox.com/blog/text-signed-distance-fields/\n      // http://metalbyexample.com/rendering-text-in-metal-with-signed-distance-fields/\n\n      void main()\n      {\n        // read the distance from the SDF texture\n        lowp float dist \x3d texture2D(u_texture, v_tex).a;\n\n        // use a smooth-step in order to calculate the geometry of the shape given by the distance field\n        mediump float alpha \x3d smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist) * v_transparency;\n\n        gl_FragColor \x3d alpha * v_color;\n\n      #ifdef ID\n        if (gl_FragColor.a \x3c 1.0 / 255.0) {\n          discard;\n        }\n        gl_FragColor \x3d v_id;\n      #endif // ID\n      }\n    ]]\x3e\n  \x3c/snippet\x3e\n\n\x3c/snippets\x3e\n\n',
"*noref":1}});
define("require exports ../../../core/tsSupport/extendsHelper ../../../core/tsSupport/decorateHelper dojo/has ../../../Graphic ../../../core/Handles ../../../core/Logger ../../../core/promiseUtils ../../../core/accessorSupport/decorators ../engine/StageGL ./LayerView2D ../tiling/TileInfoViewPOT ../tiling/TileKey ../tiling/TileQueue ../tiling/TileStrategy ../../support/screenshotUtils ../../../views/vectorTiles/TileHandler ../../../views/vectorTiles/VectorTileContainer ../../../views/vectorTiles/VectorTileDisplayObject".split(" "),function(q,
e,a,b,c,d,f,g,n,m,h,t,l,k,p,u,r,v,x,z){var y=g.getLogger("esri.views.2d.layers.VectorTileLayerView2D");return function(e){function g(){var a=null!==e&&e.apply(this,arguments)||this;a._handles=new f;a._fetchQueue=null;a._tileRequests=new Map;a.container=new h;return a}a(g,e);g.prototype.initialize=function(){this.container.useContextVersion(this.view?this.view.renderContext:null)};g.prototype.hitTest=function(a,b){var c=this;return this.visible&&this._vectorTileContainer?this._vectorTileContainer.hittest(a,
b).then(function(a){var b=c._tileHandler.getStyleRepository().layers;if(null===a||0>a||a>=b.length)return null;a=new d({attributes:{layerId:a,layerName:b[a].id}});a.layer=c.layer;a.sourceLayer=c.layer;return a}):n.resolve(null)};g.prototype.update=function(a){if(this._vectorTileContainer&&this._vectorTileContainer.isInitialized)if(a.pixelRatio!==this._tileHandler.devicePixelRatio)this._start();else{this._fetchQueue.pause();this._fetchQueue.state=a.state;this._tileStrategy.update(a);this._fetchQueue.resume();
for(var b=0,c=this._vectorTileContainer.children;b<c.length;b++)this._tileHandler.updateTile(c[b],a);this.notifyChange("updating")}};g.prototype.attach=function(){c("esri-webgl")?this._start():y.error("WebGL is required but not supported!")};g.prototype.detach=function(){this._stop()};g.prototype.moveStart=function(){this.requestUpdate()};g.prototype.viewChange=function(){this.requestUpdate()};g.prototype.moveEnd=function(){this.requestUpdate()};g.prototype.destroy=function(){this.container.dispose();
this._vectorTileContainer.destroy();this._tileHandler.destroy()};g.prototype.takeScreenshot=function(a,b){if(!this.container)return n.reject("Could not find an object capable of capturing screenshot!");a=r.adjustScreenshotSettings(a,b);return this.container.takeScreenshot(a)};g.prototype.isUpdating=function(){var a=!0;this._tileRequests.forEach(function(b){a=a&&b.isFulfilled()});return!a};g.prototype.acquireTile=function(a){var b=this,c=k.pool.acquire();c.set(a.level,a.row,a.col,a.world);a=this.updateParameters.state.rotation;
var d=this._tileHandler.getStyleRepository(),e=z.pool.acquire(c,c,this.layer.tileInfo,d,a);a=this._tileHandler.getRefKey(c).then(function(a){if(a)return e.refKey=a,b._fetchQueue.push(e.key).then(function(a){e.setData(a.tileData,a.client);e.once("attach",function(){return b.requestUpdate()});b._vectorTileContainer.addChild(e);b.notifyChange("updating")});e.setData(null,null);e.once("attach",function(){return b.requestUpdate()});b._vectorTileContainer.addChild(e)});this._tileRequests.set(c.id,a);this.notifyChange("updating");
return e};g.prototype.releaseTile=function(a){var b=a.key.id,c=this._tileRequests.get(b);c.isFulfilled()||c.cancel();this._tileRequests.delete(b);this._vectorTileContainer.removeChild(a);this.requestUpdate();a.once("detach",function(){return z.pool.release(a)});this.notifyChange("updating")};g.prototype._stop=function(){this._handles.removeAll();this._tileStrategy&&this._tileStrategy.destroy();this._vectorTileContainer&&(this._vectorTileContainer.removeAllChildren(),this.container.removeChild(this._vectorTileContainer));
this._tileHandler&&this._tileHandler.stop();z.pool.prune();this._vectorTileContainer=this._tileHandler=this._tileStrategy=this._tileInfoView=null};g.prototype._start=function(){var a=this;this._stop();this._handles.add(this.watch("layer.currentStyleInfo",function(){return a.attach()}));this._vectorTileContainer=new x;this.container.addChild(this._vectorTileContainer);this._tileInfoView=new l(this.layer.tileInfo,this.layer.fullExtent);this._tileStrategy=new u({cachePolicy:"keep",acquireTile:function(b){return a.acquireTile(b)},
releaseTile:function(b){return a.releaseTile(b)},tileInfoView:this._tileInfoView});this._fetchQueue=new p({tileInfoView:this._tileInfoView,process:function(b){return a._getTileData(b)}});this._tileHandler=new v(this.layer,function(){return a.requestUpdate()},window.devicePixelRatio||1,!0,this._tileInfoView);this._tileHandler.start().then(function(){a._vectorTileContainer.initialize(a._tileHandler.spriteMosaic,a._tileHandler.glyphMosaic,a.layer.tileInfo,a._tileInfoView);a.requestUpdate()})};g.prototype._getTileData=
function(a){return this._tileHandler.getTileData(a,this.updateParameters.state.rotation)};return g=b([m.subclass("esri.views.2d.layers.VectorTileLayerView2D")],g)}(m.declared(t))});