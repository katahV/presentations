// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/tsSupport/declareExtendsHelper ../../../../../core/tsSupport/decorateHelper ../../../../../renderers ../../../../../core/executeAsync ../../../../../core/MapPool ../../../../../core/promiseUtils ../../../../../core/SetPool ../../../../../core/accessorSupport/decorators ../../../../../geometry/SpatialReference ../../../../../layers/support/Field ../../../../../renderers/support/jsonUtils ../../../engine/webgl/rendererInfoUtils ../../../engine/webgl/Utils ../../../engine/webgl/mesh/factories/WGLMeshFactory ./BaseProcessor".split(" "),
function(q,r,y,m,t,z,p,u,v,f,A,B,w,C,n,D,E){function x(d,c){n.isMarkerSymbol(d)||n.isLineSymbol(d)?c.add(d):n.isFillSymbol(d)&&(c.add(d),d.outline&&"none"!==d.outline.style&&c.add(d.outline))}function F(d,c){c.has(d)||c.set(d,new Set);var a=d.text;d=c.get(d);c=a.length;for(var b=0;b<c;b++){var e=a.charCodeAt(b);d.add(e)}}Object.defineProperty(r,"__esModule",{value:!0});q=function(d){function c(){var a=null!==d&&d.apply(this,arguments)||this;a._symbolToMosaicItemMap=new Map;a._visualSetPromises=new Map;
a.type="symbol";return a}y(c,d);c.prototype.destroy=function(){this._visualSetPromises.forEach(function(a,b){a.cancel()});this._visualSetPromises.clear();this._symbolToMosaicItemMap.clear();this.notifyChange("updating")};Object.defineProperty(c.prototype,"factory",{get:function(){if(!this.configuration)return null;var a={fields:this.service.fields.map(function(a){return B.fromJSON(a)})};return D.default.from(this.renderer,a,this._symbolToMosaicItemMap,this.service.geometryType,this.service.objectIdField,
A.fromJSON(this.spatialReference),this.configuration.devicePixelRatio)},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"queryInfo",{get:function(){var a=this.configuration,b=a.renderer,e=a.definitionExpression,c=a.outFields,d=a.gdbVersion,a=a.historicMoment,g=this.service.geometryType,h=this._getReturnCentroid(this.rendererInfo.renderer),g="esriGeometryPoint"===g||"esriGeometryMultipoint"===g||h?20:0,l=null;(b=b.visualVariables)&&b.some(function(a){if("size"===a.type&&a.field&&
!a.normalizationField)return l=[a.field+" DESC"],!0});return{definitionExpression:e,orderByFields:l,outFields:c,pixelBuffer:g,returnCentroid:h,returnGeometry:!0,gdbVersion:d,historicMoment:a}},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"renderer",{get:function(){return this.configuration?w.fromJSON(this.configuration.renderer):null},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"rendererInfo",{get:function(){return this.configuration?C.createRendererInfo(w.fromJSON(this.configuration.renderer),
this.tileStore.spatialReference,{fields:this.service.fields}):null},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"updating",{get:function(){return 0<this._visualSetPromises.size},enumerable:!0,configurable:!0});c.prototype.onTileData=function(a,b){var e=this;b=b&&b.features&&0!==b.features.length?this._processFeatures(a,b.features).then(function(b){return e.remoteClient.invoke("tileRenderer.onTileData",{tileKey:a.id,data:b&&b.message||null},b&&b.transferList||void 0)}).catch(function(b){return e._handleError(a,
b)}):this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:a.id,data:null});this._visualSetPromises.set(a,b);b.then(function(){return e._cleanPromise(a)},function(){return e._cleanPromise(a)});this.notifyChange("updating")};c.prototype.onTileError=function(a,b){var e=this;b=this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:a.id,error:b});this._visualSetPromises.set(a,b);b.then(function(){return e._cleanPromise(a)},function(){return e._cleanPromise(a)});this.notifyChange("updating")};
c.prototype.onTileUpdate=function(a,b){var e=this,c;c=this._processFeatures(a,b.addOrUpdate).then(function(a){return e.remoteClient.invoke("tileRenderer.onTileUpdate",{tileId:b.tileId,data:{remove:b.remove,addOrUpdate:a&&a.message||null}},a&&a.transferList||void 0)}).catch(function(b){return e._handleError(a,b)});this._visualSetPromises.set(a,c);c.then(function(){return e._cleanPromise(a)},function(){return e._cleanPromise(a)});this.notifyChange("updating")};c.prototype.onTileAdded=function(a){};
c.prototype.onTileRemoved=function(a){var b=this._visualSetPromises;b.has(a)&&(b.get(a).cancel(),b.delete(a),this.notifyChange("updating"))};c.prototype._cleanPromise=function(a){this._visualSetPromises.delete(a);this.notifyChange("updating")};c.prototype._processFeatures=function(a,b){var c=this;return b&&b.length?this._getMosaicItems(b).then(function(){return c._writeFeatures(a,b)}):u.resolve(null)};c.prototype._writeFeatures=function(a,b){var c=this,d=0,f=this.factory,g=f.createMeshData(b.length),
h={viewingMode:"",scale:a.scale};return z(function(){var a=b[d++],c=d===b.length;f.write(g,a,h);return c}).then(function(){return c._encodeDisplayData(g)})};c.prototype._encodeDisplayData=function(a){var b={},c=[];a.encode(b,c);return{message:b,transferList:c}};c.prototype._handleError=function(a,b){if(b&&"cancel"!==b.dojoType)return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:a.id,error:b.message})};c.prototype._getReturnCentroid=function(a){function b(a){if(!a)return!1;a=a.type;
return"simple-marker"===a||"picture-marker"===a||"text"===a}if("esriGeometryPolygon"!==this.service.geometryType)return!1;switch(a.type){case "simple":return b(a.symbol);case "unique-value":return b(a.defaultSymbol)||a.uniqueValueInfos.some(function(a){return b(a.symbol)});case "class-breaks":return b(a.defaultSymbol)||a.classBreakInfos.some(function(a){return b(a.symbol)});default:return!0}};c.prototype._getMosaicItems=function(a){a=v.acquire();for(var b=p.acquire(),c=0,d=this.renderer.getSymbols();c<
d.length;c++){var f=d[c];n.isTextSymbol(f)?F(f,b):x(f,a)}(this.renderer instanceof t.UniqueValueRenderer||this.renderer instanceof t.ClassBreaksRenderer)&&(c=this.renderer.backgroundFillSymbol)&&x(c,a);var g=this._symbolToMosaicItemMap,h=p.acquire(),l=[],k=0;a.forEach(function(a){g.has(a.id)||(h.set(k,a),l.push({symbol:a.toJSON(),id:k}),k++)});b.forEach(function(a,b){if(g.has(b.id)){var c=g.get(b.id).glyphMosaicItems,d=[];a.forEach(function(a){if(c&&c.length<a||!c[a])d[a]=a});0<d.length&&(h.set(k,
b),l.push({symbol:b.toJSON(),id:k,glyphIds:d}),k++)}else{h.set(k,b);var e=[];a.forEach(function(a){return e.push(a)});l.push({symbol:b.toJSON(),id:k,glyphIds:e});k++}});if(0<l.length)return this.remoteClient.invoke("tileRenderer.getMaterialItems",l).then(function(a){for(var b=0;b<a.length;b++){var c=a[b],d=h.get(c.id);if(d)if(n.isTextSymbol(d))if(g.has(d.id)){if(d=g.get(d.id).glyphMosaicItems,c=c.mosaicItem.glyphMosaicItems)for(var e=0;e<c.length;e++)null!=c[e]&&(d[e]=c[e])}else g.set(d.id,c.mosaicItem);
else g.set(d.id,c.mosaicItem)}p.release(h)});v.release(a);p.release(b);return u.resolve()};m([f.property()],c.prototype,"configuration",void 0);m([f.property({dependsOn:["configuration"]})],c.prototype,"factory",null);m([f.property({constructOnly:!0})],c.prototype,"queryInfo",null);m([f.property({dependsOn:["configuration"]})],c.prototype,"renderer",null);m([f.property({dependsOn:["configuration"]})],c.prototype,"rendererInfo",null);m([f.property({readOnly:!0})],c.prototype,"updating",null);return c=
m([f.subclass()],c)}(f.declared(E.default));r.default=q});