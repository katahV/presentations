// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.8/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/declareExtendsHelper ../../../core/tsSupport/decorateHelper ../../../core/Accessor ../../../core/Collection ../../../core/Error ../../../core/Handles ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/watchUtils ../../../core/accessorSupport/decorators ../../../views/3d/layers/support/FeatureTileFetcher3D ../../../views/3d/layers/support/FeatureTileFetcher3DDebugger ../../../views/3d/support/debugFlags".split(" "),function(x,
y,h,d,k,l,m,n,p,q,r,f,c,t,u,v){var w=p.getLogger("esri.layers.graphics.controllers.FeatureTileController3D");return function(g){function b(a){a=g.call(this)||this;a.type="feature-tile-3d";a.serviceDataExtent=null;a.serviceDataCount=-1;a.suspended=!1;a.tileFetcher=null;a.handles=new n;a.fetchDataExtentPromise=null;return a}h(b,g);Object.defineProperty(b.prototype,"extent",{set:function(a){if(a&&!a.spatialReference.equals(this.layerView.view.spatialReference))w.error("#extent\x3d","extent needs to be in the same spatial reference as the view");
else{var b=this._get("extent");b===a||b&&a&&b.equals(a)||(a=a?a.clone():null,this._set("extent",a))}},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"updating",{get:function(){return!!(this.tileFetcher&&this.tileFetcher.updating||this.fetchDataExtentPromise)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"displayLimitExceeded",{get:function(){return!(!this.tileFetcher||!this.tileFetcher.displayLimitExceeded)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,
"filteredDataExtent",{get:function(){return this.extent?this.serviceDataExtent?this.serviceDataExtent.clone().intersection(this.extent):this.extent:this.serviceDataExtent},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"displayFeatureLimit",{set:function(a){this._set("displayFeatureLimit",a);this.tileFetcher&&(this.tileFetcher.displayFeatureLimit=a)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"mode",{get:function(){return-1!==this.serviceDataCount&&this.displayFeatureLimit&&
this.displayFeatureLimit.min&&this.serviceDataCount<=this.displayFeatureLimit.min?"snapshot":"tiles"},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"tileDescriptors",{get:function(){return"snapshot"===this.mode?new l([{id:"dummy-tile-full-extent"}]):this.layerView.view.featureTiles.tiles},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"suspendResumeExtentMode",{get:function(){return"snapshot"===this.mode?"computed":"data"},enumerable:!0,configurable:!0});b.prototype.initialize=
function(){var a=this,b=r.resolve().then(function(){return a.verifyCapabilities()}).then(function(){return a.fetchServiceDataInfo()}).then(function(){return a.initializeTileFetcher()});this.addResolvingPromise(b)};b.prototype.verifyCapabilities=function(){var a=this.layerView.layer;if(!a.get("capabilities.operations.supportsQuery"))throw new m("graphicscontroller:query-capability-required","Service requires query capabilities to be used as a feature layer",{layer:a});};b.prototype.destroy=function(){this.cancelFetchServiceDataExtent();
this.tileFetcher&&(this.tileFetcher.destroy(),this.tileFetcher=null);this.handles&&(this.handles.destroy(),this.handles=null)};b.prototype.suspend=function(){this.suspended||(this.suspended=!0,this.tileFetcher&&this.tileFetcher.suspend())};b.prototype.resume=function(){this.suspended&&(this.suspended=!1,this.tileFetcher&&this.tileFetcher.resume())};b.prototype.refresh=function(){var a=this;this.fetchServiceDataInfo().then(function(){a.tileFetcher.filtersChanged()}).catch(function(){})};b.prototype.initializeTileFetcher=
function(){var a=this,b=this.layerView.view;this.handles.add(f.whenOnce(b.featureTiles,"tilingScheme",function(){a.handles.add(b.featureTiles.addClient());a.tileFetcher=new t.FeatureTileFetcher3D({layer:a.layerView.layer,filterExtent:a.filteredDataExtent,tilingScheme:b.featureTiles.tilingScheme,tileDescriptors:a.tileDescriptors,features:a.graphics,displayFeatureLimit:a.displayFeatureLimit});a.suspended?a.tileFetcher.suspend():a.tileFetcher.resume();a.handles.add([a.layerView.layer.watch("definitionExpression",
function(){return a.definitionExpressionChanged()}),a.layerView.layer.watch("outFields",function(b,c){return a.attributesChanged(b,c)}),a.watch("filteredDataExtent",function(b){return a.tileFetcher.filterExtent=b},!0),a.watch("tileDescriptors",function(b){return a.tileFetcher.tileDescriptors=b},!0)],"layer");a.handles.add(f.init(v,"FEATURE_TILE_FETCH_SHOW_TILES",function(c){c&&a.tileFetcher&&!a.tileFetcher.debugger?(a.tileFetcher.debugger=new u.FeatureTileFetcher3DDebugger(a.tileFetcher,b.featureTiles.tilingScheme.toTileInfo(),
b),a.tileFetcher.debugger.update()):!c&&a.tileFetcher&&a.tileFetcher.debugger&&(a.tileFetcher.debugger.destroy(),a.tileFetcher.debugger=null)}))}))};b.prototype.definitionExpressionChanged=function(){this.refresh()};b.prototype.attributesChanged=function(a,b){if(!a||-1===a.indexOf("*"))if(a&&b){a=new Set(a);for(var c=0;c<b.length;c++)if(!a.has(b[c])){this.refresh();break}}else this.refresh()};b.prototype.queryDataExtentInfo=function(){var a=this.layerView.layer,b=a.createQuery();b.outSpatialReference=
this.layerView.view.spatialReference;a.capabilities.query.supportsResultType&&(b.resultType="tile");return a.capabilities.query.supportsExtent?a.queryExtent(b):a.queryFeatureCount(b).then(function(a){return{count:a,extent:null}})};b.prototype.fetchServiceDataInfo=function(){var a=this;this.cancelFetchServiceDataExtent();var b=this.layerView.fullExtentInViewSpatialReference?this.layerView.fullExtentInViewSpatialReference.clone():null,c=!1,d=this.queryDataExtentInfo().catch(function(a){if(!a||"cancel"!==
a.dojoType)return{count:-1,extent:null}}).then(function(e){c=!0;d===a.fetchDataExtentPromise&&(a.fetchDataExtentPromise=null);e&&(a._set("serviceDataExtent",e.extent||b),a._set("serviceDataCount",e.count))});return c?null:d};b.prototype.cancelFetchServiceDataExtent=function(){var a=this.fetchDataExtentPromise;a&&(this.fetchDataExtentPromise=null,a.cancel())};d([c.property({readOnly:!0})],b.prototype,"type",void 0);d([c.property({constructOnly:!0})],b.prototype,"graphics",void 0);d([c.property({constructOnly:!0})],
b.prototype,"layerView",void 0);d([c.property()],b.prototype,"extent",null);d([c.property({dependsOn:["tileFetcher.updating","fetchDataExtentPromise"]})],b.prototype,"updating",null);d([c.property({dependsOn:["tileFetcher.displayLimitExceeded"]})],b.prototype,"displayLimitExceeded",null);d([c.property({readOnly:!0})],b.prototype,"serviceDataExtent",void 0);d([c.property({readOnly:!0})],b.prototype,"serviceDataCount",void 0);d([c.property({readOnly:!0,dependsOn:["extent","serviceDataExtent"]})],b.prototype,
"filteredDataExtent",null);d([c.property()],b.prototype,"displayFeatureLimit",null);d([c.property({readOnly:!0,dependsOn:["serviceDataCount","displayFeatureLimit"]})],b.prototype,"mode",null);d([c.property({readOnly:!0,dependsOn:["mode"]})],b.prototype,"tileDescriptors",null);d([c.property({readOnly:!0,dependsOn:["mode"]})],b.prototype,"suspendResumeExtentMode",null);d([c.property()],b.prototype,"tileFetcher",void 0);d([c.property()],b.prototype,"fetchDataExtentPromise",void 0);return b=d([c.subclass("esri.layers.graphics.controllers.FeatureTileController3D")],
b)}(c.declared(k,q))});